{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["\"includ","\"libfdk_aac\",","\"libx264\",","\"mp4\",","\"s16\"));","\"yuv420p\"),","'add","(>=","(@auscaster)","(@michael","(@surinkim)","(@vincishark)","(@yuryshubin)","(@zelimdamian)","(c++","(devman.getdefaultcamera(device))","(devman.getdefaultmicrophone(device))","(git","(instanti","(interact","(the","(travers","//","1.0).","128000,","2,","2.1+","25,","30);","300,","4","400,","44100);","44100,","4566","480,","48000,","5245","5389","5766","6062","640,","64000,",":)","=","=>",">","absolut","access","adher","agent","aim","allocations)","allow","alway","analysi","applic","applications.","apps.","arbitrari","architecture.","around","arsen","asynchron","attach","audio","audio.getencoderformat(options.iformat);","audio.open(device.id,","audio;","authentication.","av","av::audiocapture::ptr","av::audiocodec(\"aac\",","av::devic","av::devicemanag","av::encoderopt","av::format(\"mp4\",","av::multiplexpacketencoder::ptr","av::videocapture::ptr","av::videocodec(\"h.264\",","b","back","base","begin","between","big","blaze","bloat.","both","branch","bridg","broadcast","browser,","build","built","c","c++","c++11","call","capabilities.","captur","capture,","chain","chang","charact","chat","checkout","class","clean","clear","client","clients,","code","code.","codebas","collect","combin","commit","compil","compiler.","complet","complex","concurr","connect","consist","contain","contribut","contributor","convers","core","creat","critic","cross","damian","data","default","deleg","demo","design","desktop","desktop,","develop","devic","device;","devman;","documentation,","documentation:","dynam","eas","easi","easily.","elsewhere)","encod","encoder(options);","encoding,","encryption.","enumer","essential.","establishment)","event","everyon","evolv","exampl","example,","exist","extens","extra","far:","fast","featur","feature')","feature)","feel","ffmpeg","ffmpeg,","fig","fig)","file","fix","flag","float","fork","free","full","function","game","gap","github","good","grown","guides.","h.264,","headers.","high","home","hood","http","http://sourcey.com/libsourcey","https://github.com/sourcey/libsourcey","hyunuk","ic","implement","implementation.","improv","includ","incumb","incur","independ","inherit","input","instal","instanc","integr","internet:","introduct","io","kam","kim","latest","layer","let","lgpl","librari","library).","libsourcey","libsourcey'","libuv","licence:","live","look","low","make","manag","mani","maximis","media","messag","messages.","method","michael","microphon","minimis","mission","mobil","modern","modul","modular","more","more.","multiplex","nat","nat)","nativ","necessari","need\"","net::socket","network","networking,","new","nginx.","node.js)","onlin","opencv","openssl","option","options.oformat","options;","orient","origin","os","output","over","p2p","packet","packets.","packetstream","packetstream,","page.","parser","pass","perform","piping,","platform","platforms.","play","pleas","plenti","point","possibl","power","presenc","primari","principl","process","processor","projects,","protocol","provid","pull","pump","push","quickli","rapidli","read","readabl","realtim","record","recording,","relay","relianc","repository:","request","revis","rfc","rostering,","sampl","sdp","secur","see","server","servers,","setup","shulbn","side","side.","socket","socket.io","socket.io.","solid","solut","sourcey'","specifications.","ssl","stack","standard","start","std::codecvt","stl","stream","stream,","stream.attach(encoder);","stream.attach(socket);","stream.attachsource(audio,","stream.attachsource(video,","stream.start();","stream;","streaming,","stun","super","support","sympl","symple.","system","take","tcp","tcp,","test","thank","thin","think","throughout","toolchain","top","transfers,","true);","turn","udp","under","underli","unicod","updat","upstream","us","video","video.getencoderformat(options.iformat);","video.open(device.id,","video;","vinci","web","webcam","webrtc","webrtc,","websockets,","welcome,","window","without","work","wrapper","x","xu","yuri","zelim","{","}","—"],"getting-started.html":["\"\"","\"where","#","$(pkg","${cmake_include_path}","${cmake_module_path}","${headerfiles})","${headers})","${libsourcey_include_dirs})","${libsourcey_root_dir}/cmake)","${sourcedir}/*.cpp)","${sourcedir}/*.h)","${sourcefiles})","${sources}","(example:","(linux","(use","(which",".cmake","/usr/local/lib/pkgconfig/libsourcey.pc","1)","2)","2.8.10)","3)","accord","ad","add_executable(exampleapp","advanc","along","alreadi","api","api.","avail","awesome).","base","befor","below","best","build","built","cach","cflag","changed,","check","choic","choos","clear","cmake","cmake_minimum_required(vers","cmakelists.txt","cmakelists.txt:","code","code.","compil","complet","compon","config","coupl","crypto","cut","default","default.","default_msg","dependencies,","directori","doc","done","easiest","exampl","exampleapp)","examples,","extend","file","file(glob_recurs","find_package(libsourcey","find_package_handle_standard_args(${module}","first","follow","foremost,","full","further","gcc","gcc):","get","glob","go","great","guid","header","here","highli","http","http)","includ","include(\"../libsourcey/libsourcey.cmake\")","include_directories(${libourcey_include_dirs})","include_directories(${sourcedir}","inherit","instal","install(target","it'","know","lib","librari","libsorucey","libsourcey","libsourcey)","libsourcey.","libsourcey_root_dir)","line","link_libraries(${libsourcey_libraries})","list","locat","located?\")","make","method","miss","modifi","modul","net","newer","next","number","o","onc","only)","option","options.","out","path","pkg","pleas","possibl","pretti","project","project(exampleapp)","project.","project:","push","readi","recommend","recommended.","refer","request","requir","required)","ride!","root","run","save","script","search","see","set","set(cmake_include_path","set(cmake_module_path","set(headerfil","set(libsourcey_root_dir","set(sourcedir","set(sourcefil","side","simplest","something'","sourc","specifi","src)","start","step","string","structur","submit","sure","system","system.","tell","test","test.cpp","third","tightli","time,","tree:","updates.","us","user","uv","version","want","we'v","welcom","you'r","—"],"installation.html":["#","(.dll/.so)","(.lib/.a).","(>=","(gcc)","(msys,","(no","(optional,","(selective)","(uv,","(win32","(with","(xcode,","..","1.0.1g,","1.8.0,","2.8.3,","3.0,","4.1.2,","=",">","\\","algorithm","android","applic","audio","av","base)","below","build","build_application_xxx:","build_applications:","build_dependencies:","build_module_samples:","build_module_xxx:","build_modules:","build_sample_xxx:","build_samples:","build_shared_libs:","build_test_xxx:","build_tests:","c++11","captur","check","class","cmake","cmake_library_path.","cmake_system_prefix_path","cmakelists.txt","codebas","compil","compiler,","compiler.","comput","conferenc","configur","cross","crypto","cryptographi","custom","dbuild_applications=off","dbuild_applications=on","dbuild_module_archo=on","dbuild_module_av=on","dbuild_module_base=on","dbuild_module_crypto=on","dbuild_module_http=on","dbuild_module_json=on","dbuild_module_net=on","dbuild_module_pacm=on","dbuild_module_pluga=on","dbuild_module_sked=on","dbuild_module_socketio=on","dbuild_module_stun=on","dbuild_module_symple=on","dbuild_module_turn=on","dbuild_module_util=off","dbuild_module_util=on","dbuild_module_uv=on","dbuild_module_webrtc=on","dbuild_modules=off","dbuild_modules=on","dbuild_samples=off","dbuild_samples=on","dbuild_shared_libs=off","dbuild_tests=off","dbuild_tests=on","dcmake_build_type=debug","debug","decoding,","default","default:","depend","dependencies.","devic","differ","directory.","disabl","dwith_ffmpeg=on","dwith_opencv=off","dwith_webrtc=off","dwith_webrtc=on","enabl","enabled:","encoding,","encrypt","exhaust","external)p","external)requir","external)video","featur","ffmpeg","ffmpeg,","file","filesystem","follow","follows:","gcc)","gener","guides:","http","includ","instal","instead","internal)","internal)networking,","io","ios)","librari","libsourcey","libuv","linux","list","locat","main","make","media","media)","minimum","modern","modul","modules.","name.","need","net","networking,","number","on","opencv","openssl","option","optional,","os","parti","paths:","peer","platform","platforms:","pleas","project","refer","relat","replac","required,","sampl","share","shortcut","sourc","specif","ssl","static","stun/turn","successfulli","sure","sympl","symple)","system","test","third","updat","us","util","video","vision","vs)","want","webrtc","webrtc.","window","x","xxx","you'r"],"installation-linux.html":["#","(>=","(it","(ninja","(optional):","(the","..","./build.sh","/etc/ld.so.conf.d/opencv.conf'","14.04,","15.04)",">","although","anyth","apt","befor","below","box","build","capabilities.","caveat","cd","clone","cmake","command","compil","complet","config","conflict","consuming,","contain","core","dcmake_build_type=releas","debug","depend","dev","develop","directli","disabl","do","done!","e","enabl","enable_iterator_debugging=false)","encod","essenti","extern","extra","fairli","few","ffmpeg","flag","flavor","follow","follows:","full","git","git@github.com:sourcey/webrtcbuilds.git","guid","here","here,","highli","hitch.","https://github.com/sourcey/libsourcey.git","instal","installed:","intern","iter","jsoncpp","l","ldconfig","libavcodec","libavdevic","libavfilt","libavformat","libpostproc","librari","libsourcey","libsourcey'","libsourcey.","libsourcey:","libssl","libstdc++","libswresampl","linux","linux.","list","list...","make","manager.","media","mkdir","newer","no_rtti","note","offici","openssl","option","options.","otherwis","out","packag","pkg","portabl","recommend","removed)","requir","rtti","script","see","set","start","static","sudo","sure","take","that'","time","tricki","ubuntu","updat","us","version","version)","want","webrtc","webrtcbuild","without","work","written","y","ye","you'r","yourself","~/tmp","~~~"],"installation-osx.html":["\"debug\",","\"release\"","#","(cmd","(o","..","above.","appl","b),","below","brew","build","build_al","cd","clone","cmake","cmake,","cmake:","cmake_build_type=releas","command","compil","d","depend","dependencies.","describ","extra","forc","full","gener","git","guid","here,","homebrew.","https://github.com/sourcey/libsourcey.git","instal","instruct","launch","libsourcey","libsourcey.xcodeproj.","link","linux","list...","locat","mac","make","mkdir","open","openssl","openssl:","option","os","pleas","project","see","select","sudo","target","too.","us","user","written","x","x)","xcode","xcode,","~/tmp"],"installation-windows.html":["\"configure\"","\"debug\"","\"generate\".","\"release\"","(32","(contain","(ctrl","(eg:","(mi","(you","10):","64","=>",">advanc",">environ",">path)",">properti","[right","above.","add","adjust","again","and/or","archiv","b),","binaries.","bit","bit)","both","build","button","c:\\libsourcey\\build\\libsourcey.sln).","chose","click]","client.","clone","cmake","cmake,","command","compil","compilers.","complet","comput","configuration,","depend","describ","dev","directori","directory.","don't","download","execut","extract","fail","ffmpeg","file","folder","forget","gener","git","github.","gui","guid","haven't","head","here","https://github.com/sourcey/libsourcey.git.","initi","instal","it.","item","launch","libscy*.dl","libscy*d.dll,","libsourcey","libsourcey.sln","line","list","locat","make","need","new","notic","open","openssl","openssl_include_dir","openssl_librari","openssl_root_dir","options,","options.","packag","path","platform","point","press","project","proper","properly:","reason","repository:","respectively)","root","scm","see","select","set","share","shift","solut","studio","studio,","studio.","sure,","system","system'","us","variabl","version,","version.","visual","window","windows.","zip","{cmake_binary_dir}\\bin\\debug","{cmake_binary_dir}\\bin\\release,","{path_to_ffmpeg_dev_dir}\\bin","{path_to_ffmpeg_shared_dir}\\bin","{path_to_openssl_install_dir}\\includ","{path_to_openssl_install_dir}\\lib","{path_to_openssl_install_dir}\\openssl"],"examples.html":["5766","application.","av","avail","browser","browser.","built","c++","captur","check","compil","connections.","cut","data","devic","deviceenumer","devicerecord","each","echo","enabl","enumer","exampl","ffmpeg","ffmpeg.","file","folder","format","function","good","http","http,","http://sourcey.com/pacm/","ie.","implementation.","input","it.","let","libsourcey","libsourcey,","live","look","manag","media","mediaserv","microphon","modul","multiplex","nativ","need","ol'","on.","out","output","over","packag","packet","pacm","pacmconsol","plenti","protocols.","provid","raw","record","redistribut","remember,","rfc","sampl","server","server?","side.","socket","sourc","specif","stream","streamer","support","system.","take","tcp","teeth","test","turn","upd","us","video","webcam","webrtc","websocket","without","work"],"api-archo.html":["&","archiv","archo","bool","close()","closecurrentfile()","const","content","currentfilename()","descript","directori","extract","extract(const","extractcurrentfile(const","file)","fp","given","gotofirstfile()","gotonextfile()","info","member","modul","namespac","namespacescy::archo","open(const","opencurrentfile()","opened()","path)","path,bool","path.","public","scy::archo","scy::archo::zipfil","std::string","std::vectorfileinfo>","struct","structscy::archo::zipfil","summari","unzfil","void","whiny)","zipfile()","zipfile(const","~zipfile()"],"api-av.html":["&","(option","(sma)","(the","*","//","///","1","2",":",">","_format(format)","_initi","_initial(true)","_max","_modifyingstream","_modifyingstream(false)","_starttim","_timestampoffset","_timestampoffset(0)","_videoonli","_waitingforkeyfram","_waitingforkeyframe(false)","abstract","accurate,","adapt","adobe'","algorithm.","amf","append","arg","async","at.","audio","audio,","audio,int","audiocodec&","audiocodec()","audiocodec(const","audiopacket&","audiopacket(const","audiopacket(std::uint8_t","av","avail","averag","base","bit","bitrat","bitrate,bool","bitrate,const","bitrate,int","bool","buf)","buf,std::uint32_t","buffer","buffer.","buffersize;","call","capabilities.","captur","caution:","ceas","changes.","channel","channels,int","char","check","class","classname()","classscy::av::devicemanag","classscy::av::devicemanagerfactori","classscy::av::devicewatch","classscy::av::fakedevicemanag","classscy::av::flvmetadatainjector","classscy::av::formatregistri","classscy::av::fpscount","classscy::av::fpslimit","classscy::av::icaptur","classscy::av::idevicemanag","classscy::av::iencod","classscy::av::linuxdevicemanag","classscy::av::macdevicemanag","classscy::av::macdevicewatch","classscy::av::realtimepacketqueu","clear()","clock","clock_t","clone()","codec","codec&","codec()","codec(const","codec.","connects,","const","contain","copi","copied.","correct","counter","ctors/dtors.","current","d)","data","data,std::size_t","dbl,","dblp","default","defin","depend","descript","devic","device()","device(const","device)","device.","devicemanager()","devices)","deviceschang","deviceschanged.","devicewatcher(idevicemanager*)","devs)","directli","disconnect","display","dm)","don't","doubl","doubletoint(doubl","drop","dropped.","durat","duration)","each","emit","emit()","emitter)","enabl","enabled)","encod","encoder,int","encoder/decoder)","encoderoptions(constformat&","encoders.","encoding/decoding.","end","endframe()","enumer","enumeration.","especi","exce","exist","exists(const","explicit","fakedevicemanager()","fallback","fals","fastisflvheader(char","fastisflvkeyframe(char","fastupdatetimestamp(char","ffmpeg.","flase","flash","flt,","fltp,","flv","format","format()","format(const","format(constformat&","format)","format.","formatlist","formatregistry()","formats()","fp","fps,int","fpscounter()","fpslimiter(int","fragment","frame","framesize;","freed","get(const","getaudiodevice(bool","getaudiodevices(bool","getaudioinputdevice(device&","getaudioinputdevices(std::vectordevice>","getaudiooutputdevice(device&","getaudiooutputdevices(std::vectordevice>","getbyid(const","getcamera(const","getcameras(std::vectordevice>","getcapabilities()","getdefault()","getdefaultaudiodevice(bool","getdefaultaudioinputdevice(device&","getdefaultaudiooutputdevice(device&","getdefaultcamera(device&","getdefaultvideocapturedevice(device&","getencoderformat(format&","getmicrophone(const","getmicrophones(std::vectordevice>","getordefault(const","getspeaker(const","getspeakers(std::vectordevice>","getvideocapturedevice(device&","getvideocapturedevices(std::vectordevice>","given","guid","guid,bool","header","height","height,doubl","height,std::int64_t","helpers.","high.","highest","icapture()","id","id)","id,const","id,constaudiocodec&","id,constvideocodec&","ifil","ifile,const","iformat)","iformat,constformat&","ifram","implement","independ","index.","initialization.","initialize()","initialized()","initialized)","inlin","input","input,const","input,device&","input,std::vectordevice>","int","interfac","intern","ipacket","ipacketizer(thi","isactive()","isavail","isavailable)","isdefault","isdefault,bool","isencoding()","iserror()","isnone()","isready()","isstopped()","limit","linuxdevicemanager()","list.","long","macdevicemanager()","macdevicewatcher(idevicemanager*","match","max","max,bool","maxsize)","media","mediapacket(constmediapacket&","mediapacket(r)","mediapacket(std::uint8_t","member","method","method.","microseconds.","mid","modifi","modul","more","move","multi","multicast","name","name)","name,const","name,device&","name,int","name.","namespac","namespacescy::av","namespacescy::av::legaci","need","note","note:","notifi","numsampl","numsamples,std::int64_t","of:","ofil","ofile,long","oformat,const","on","onstreamstatechange(constpacketstreamstate&","onstreamstatechange(constpacketstreamstate&)","operator==(constdevice&","option","options()","os)","ost)","otherwis","out)","out,const","out,int","outgo","overrid","packet","packet)","packet.","packetstream","packetstream.","packett","perform","pixelfmt","pixelfmt)","platform","play","player","popnext()","precedence.","prefer","print(std::ostream","prioriti","priority)","process","process(ipacket&","processor","protect","protecteddevicewatcher*","protectedformat_format","protectedlegacy::fpscounter_count","protectedlegacy::fpscounter_fpscount","pt","public","publicaudiocodecaudio","publicencoderoptions&","publicformatiformat","publicformatoformat","publicpacketsignalemitt","publicsignal2","publictypetype()","publicvideocodecvideo","qualiti","r)","r);.","rang","rate","rate.","realtim","realtime()","realtimepacketqueue(int","receiv","regist","registerformat(constformat&","registri","render","repres","reset()","respons","restart","restarted.","result.","return","returned,","reviou","rtp","s16,","s16p,","s32,","s32p,","same","sampl","samplefmt","samplefmt)","sampler","samplerate,const","samplerate,int","samples()","scenarios.","scope)","scy::async::start","scy::asyncpacketqueu","scy::av","scy::av::audiocodec","scy::av::audiopacket","scy::av::codec","scy::av::devic","scy::av::devicemanag","scy::av::devicemanagerfactori","scy::av::devicewatch","scy::av::encoderopt","scy::av::encoderst","scy::av::fakedevicemanag","scy::av::flvmetadatainjector","scy::av::format","scy::av::formatregistri","scy::av::fpscount","scy::av::fpslimit","scy::av::icaptur","scy::av::idevicemanag","scy::av::iencod","scy::av::legaci","scy::av::legacy::fpscount","scy::av::linuxdevicemanag","scy::av::macdevicemanag","scy::av::macdevicewatch","scy::av::mediapacket","scy::av::realtimepacketqueu","scy::av::videocodec","scy::av::videopacket","scy::packetprocessor","scy::packetstreamadapt","scy::rawpacket","scy::stat","set","setcameras(const","setdefault(const","setinitialized(bool","setmicrophones(const","setspeakers(const","setwatcher(devicewatcher*","short","signal","simpl","situat","size","size,int","size,std::int64_t","size,std::size_t","size.","specifi","start","start()","started()","startframe()","state","state)","state,","std::int64_t","std::size_t","std::string","std::uint32_t","std::uint8_t","std::vectordevice>","stop","stop()","str(unsign","stream","stream.","struct","structscy::av::audiocodec","structscy::av::audiopacket","structscy::av::codec","structscy::av::devic","structscy::av::encoderopt","structscy::av::encoderst","structscy::av::format","structscy::av::legacy::fpscount","structscy::av::mediapacket","structscy::av::videocodec","structscy::av::videopacket","summari","system","system.","tag","take","that)","thread","through","throughput","tick()","time","time)","timestamp","timestamp)","tostring()","total","transmission,","true","type","type,int","type.","u8,","u8p,","uninitialize()","unregist","unregisterformat(const","updat","us","use.","val)","valu","value,","value.","variabl","variables.","video","video,","video,constaudiocodec&","video,int","videocodec()","videocodec(const","videocodec(constvideocodec&","videoonly)","videopacket(constvideopacket&","videopacket(std::uint8_t","virtual","virtualformat&","virtualipacket*","void","watcher()","watcher)","weather","whenev","width","width,int","writeamfbool(bitwriter&","writeamfdouble(bitwriter&","writeamfsring(bitwriter&","writeflvheader(bitwriter&","writer)","writer,bool","writer,const","writer,doubl","{}.","~audiocodec()","~audiopacket()","~codec()","~devicemanager()","~devicewatcher()","~encoderoptions()","~formatregistry()","~icapture()","~idevicemanager()","~linuxdevicemanager()","~macdevicemanager()","~macdevicewatcher()","~mediapacket()","~realtimepacketqueue()","~videocodec()","~videopacket()"],"api-base.html":["&","&)","&,const","&,tvalu","(0","(0)","(1","(1).","(1969","(2001","(8","(a","(a,","(am/pm)","(and","(constdatetime&","(constlocaldatetime&","(consttimespan&","(consttimestamp&","(coordin","(copied).","(ctrl","(default:","(first)","(h)","(hours,","(if","(in","(nocopy).","(or","(prng).","(the","(theoretical)","(timediff","(timediffd)","(utc","(year","*","*)","**","*,basic::polymorphic&","*,p","*,void","*this.","...,","//","///","//mutex::scopedlock","0","0.0","0.8.x","00","01","0;","0x","1","1,","1.","1.0.","100","12","12).","12.","15,","1582.","1970.","2","2000),","2005,","2007,","2007.","2068).","20th","21th","23).","23.","256","2^69.","3.","3.3.1","31","31).","31.","32,","4.","53.","59).","59.","6","6,","68","69","8.","8601","8601.","999)","999).","999.","9999.","999999).",":","=","=(const","=(consttimespan&","=(timediff","=(timediffd)",">",">=","@","[*]","_action","_attempt","_autostart","_buffer","_buffers","_cancel","_channel","_clientdata","_closeonerror","_count","_current","_data","_datetim","_defaultchannel","_delay","_deleg","_destroy","_dir","_dirti","_emitt","_enabl","_error","_extens","_filenam","_filter","_final","_free","_fstream","_handl","_id","_interv","_istream","_level","_lib","_limit","_linelength","_linepo","_map","_messag","_name","_ostream","_path","_pend","_prioriti","_proc","_processor","_queue;","_readi","_repeat","_request","_respons","_retri","_rotatedat","_rotationinterv","_runner","_size","_sourc","_startat","_state","_task","_test","_tid","_timeformat","_timeout","_timeout;","_type","_tzd","_uppercas","_writer","a),","about,","absolut","abstract","abstractcollect","abstractcollection()","accept","accepts(ipacket&)","access","accessed,","accessed.","accessor","accord","accordingly.","action","action(callback_t","action)","action.","activ","activated.","active()","active)","active,","ad","adapt","adapters()","adapters,","adapters.","adaptert","add","add(const","add(logchannel*","add(task*","add(test*","add(unsign","added.","addit","address","address)","adjust","adjust)","adjustfortzd()","again()","again,","agent","algorithm","algorithm.","alia","alloc","allow","along","alreadi","although","alway","am/pm","anoth","ansynchron","any()","any).","append","append*","appli","applic","application(application&&)","application(constapplication&)","application(uv::loop","appropriate.","arbitrari","arg","arg)","arg,const","arg,p2","arg,void","arg2)","arg2,p3","arg2,void","arg3)","arg3,p4","arg3,void","arg4)","arg_state,std::int32_t","argc,char","args.","argument,","argument.","argv,const","arithmet","around","as(bool","asap.","assert","assertcanmodify()","assign","assign(int","assign(long","assign.","assigndataownership()","assignment.","associ","assum","astronom","async","async()","async.","async::runner::ptr","async::startable.","asynchron","asynchronously.","asynclogwriter()","asyncpacketqueu","asyncpacketqueue(int","asyncqueu","asyncqueue(int","asyncron","asyncstartable()","atomic,","attach","attach()","attach(const","attach(packetadapterreference::ptr","attach(packetprocessor*","attach(std::shared_ptr","attachsource()","attachsource(packetadapterreference::ptr","attachsource(packetsignal&","attachsource(packetstreamadapter*","attachsource(std::shared_ptr","attempt","attempts()","auto","automat","autostart(bool","autostart)","available()","available,","avoid","b)","back","back()","back).","base","based,","baset","basic","basic::stratable,","baum","bc)","becom","befor","before,","beforestatechange(const","begin","begin()","belong","benchmarking.","beor","best","better","between","between(id","binari","bind","bindshutdownsignal(std::funct","bit","bitread","bitreader(const","bitreader(constconstbuffer&","bitreader.","bitwise(unsign","bitwrit","bitwriter(buff","bitwriter(char","bitwriter(mutablebuffer&","block","bool","boolean","boolean.","boolean:","boradcast","boundary.","break","broadcast","broken","buf,byteorderorder)","buffer","buffer()","buffer,std::size_t","buffer.","buffersize)","build","byte","bytes)","bytes,std::size_t","bytes.","c","c)","c).","c++","calcul","calculated.","calendar","calendar.","call","callback","callback,void","callback;","callback_t","callbacks.","callbackt","called,","called.","cancel","cancel()","cancel(bool","cancel(task*","cancellation.","cancelled()","cancelled.","canchange(id","candid","canresend()","capacity.","carri","case","caus","ceas","centuri","certain","chain","chain.","chang","change(id","change.","changes.","channel","channel)","channel,","channel.","channels.[name].modes.[name].[value]","char","character.","charg","cheap","check","check.","checkresponse(const","class","class.","classes.","classname()","classscy::abstractcollect","classscy::appl","classscy::async::flag","classscy::async::runn","classscy::async::send","classscy::async::start","classscy::asynclogwrit","classscy::asyncpacketqueu","classscy::asyncqueu","classscy::asyncstart","classscy::basic::decod","classscy::basic::encod","classscy::basic::polymorph","classscy::bitread","classscy::bitwrit","classscy::configur","classscy::consolechannel","classscy::constbuff","classscy::datetim","classscy::datetimeformat","classscy::datetimeformatt","classscy::datetimepars","classscy::deleg","classscy::filechannel","classscy::flagpacket","classscy::garbagecollector","classscy::idl","classscy::ipacket","classscy::ipacketcreationstrategi","classscy::ipc::queu","classscy::ipc::syncqueu","classscy::kvcollect","classscy::livecollect","classscy::localdatetim","classscy::logchannel","classscy::logg","classscy::logwrit","classscy::mutablebuff","classscy::mutexst","classscy::nullsign","classscy::nvcollect","classscy::packetfactori","classscy::packetprocessor","classscy::packetstream","classscy::packetstreamadapt","classscy::packettransact","classscy::pointercollect","classscy::process","classscy::queu","classscy::random","classscy::rawpacket","classscy::rotatingfilechannel","classscy::runnablequeu","classscy::scopedconfigur","classscy::scopedpoint","classscy::scopedrawpoint","classscy::scopedsharedpoint","classscy::sharedobject","classscy::sign","classscy::signal2","classscy::signal3","classscy::signal4","classscy::signalbas","classscy::singleton","classscy::st","classscy::statesign","classscy::stoppropag","classscy::stopwatch","classscy::stream","classscy::streamwrit","classscy::synccontext","classscy::syncpacketqueu","classscy::syncqueu","classscy::task","classscy::taskrunn","classscy::test::functiontest","classscy::test::test","classscy::test::testrunn","classscy::thread","classscy::threadedstreamread","classscy::tim","classscy::timedtoken","classscy::timeout","classscy::timespan","classscy::timestamp","classscy::timezon","classscy::tzinfo","cleanup","cleanup()","clear","clear()","client","clientdata()","clock","clock_t","clone()","close","close()","closed()","closed.","closeonerror(bool","closes.","closure.","codebas","coding.","collect","collection.","collections.","collector","combin","command","commun","communication.","compar","comparison","comparison.","compat","compatability.","compatibility.","complet","comput","computedaytime()","computegregorian(doubl","concurr","config","config,const","configur","configuration()","configuration.","connect","consid","consist","consolechannel(const","const","constant","constantli","constbuff","constbuffer()","constbuffer(const","constbuffer(constmutablebuffer&","constdata()","constiter","construct","construction,","constructor","constructor.","consum","consumpt","contain","container.","content.","context","context,","context.","context::ptr","continu","control","convers","convert","copi","copied.","copy/gener","copyabl","copydata(const","count","count()","count.","counter","creat","create(constconstbuffer&","createpacket(constconstbuffer&","critic","cross","cstr()","current","current()","currentscop","currentscope,const","custom","d)","data","data()","data)","data,","data,std::size_t","data,void","data.","database.","date","date.","date/tim","date/time.","dates.","dates/tim","datetim","datetime()","datetime(constdatetime&","datetime(consttimestamp&","datetime(doubl","datetime(int","datetime(timestamp::utctimevalutctime,timestamp::timediffdiff)","datetime)","datetime,","datetime,bool","datetime.","datetime::makeutc()","datetimeformatt","datetimeformatter,","datetimeparser.","day","day()","day,int","day.","daylight","dayofweek()","dayofyear()","days()","days,","days,int","days.","daytim","deadlock","dealt","decode(char","decode(const","decode(std::istream","decoder()","decoder(int","decrement","default","default:","defaultscop","defaultscope)","defaultvalu","defaultvalue)","defaultvalue,bool","defer","deferred)","definecallbackfield","definit","delay()","delay)","delay,bool","delay.","deleg","delegate()","delegate(c","delegate(constdelegate&","delegate)","delegate.","delegatebas","delegatebase(constdelegatebase&","delegatebase(datat","delegatelist","delegates()","delegates().size()","delegates.","delegatet","delet","deleted,","deletelater(c","deletelater(std::shared_ptr","deleter,int","deletion.","delim)","denot","deprec","depreciated:","deriv","describ","descript","design","destroy","destroy()","destroy(task*","destroyed()","destroyed.","destruction.","destructor","detach","detach(const","detach(packetprocessor*","detached,","detachsource(packetsignal&","detachsource(packetstreamadapter*","determin","determinetzd(bool","develop","devic","differ","differenti","differential,","differential.","digits.","dir()","dir)","dir,loglevel","directli","directly.","disabl","dispatch","dispatch(t","dispatchnext()","dispos","dispose()","doesn't","done","doubl","double.","down)","down.","dri","driven","drop","dst","dst)","dstoffset(int","dstoffset)","duplicate()","durat","duration)","duration.","dure","dynam","e.g.","each","earliest","effect","effect.","effects.","elaps","elapsedmilliseconds()","elapsedseconds()","element","else.","emit","emit()","emit(char","emit(const","emit(ipacket&","emit(unsign","emit(void","emitt","emitter)","employ","empti","empty()","empty();","enabl","enable(bool","enabled()","encode(const","encode(std::istream","encoder()","encoder(int","end","end()","enough","ensue.","ensur","entri","epoch,","epochtime()","equals(constderivedt*","equals(id","equival","erase(const","error","error()","error(const","error.","error_list_t","error_map_t","errorno","errors()","errors.","especi","etc.","etc.)","even","event","everyth","exampl","exce","except","exception.","execut","exepath","exist","exist.","exists(const","exists(task*","exists,","exists.","exit","exits.","expand","expanded.","expect","expir","expired()","expires.","explicit","express","ext)","extend","extension,int","extern","extra","extract","facil","failed.","failure,","fall","fals","false).","false,","false.","februari","feedback","fifo","filechannel(const","filenam","filename()","filter)","filter,int","final","finalize()","finalize(char","find(const","fire","first","firstdayofweek","firstdayofweek)","flag","flag()","flag)","flagpacket(constflagpacket&","flagpacket(unsign","flags)","flags,void","flags.","flexibl","float","flow","flush","flush()","flushed,","follow","forcedefaultscope)","forget.","forgotten","form","format","format(constlogstream&","format)","format,","formats.","found,","found.","four","fraction","free","free(const","freed","freememory()","freepoint","freepointer)","freepointer,bool","friends.","front()","function","function,///","function.","functions.","functions:","functiontest(voidfunc_t","functors.","futur","futures.","garbag","garbagecollector()","gener","get()","get(char","get(const","get(std::str","get(std::uint32_t","getbool(const","getcurrentscope(const","getdafaultkey(const","getdefault()","getdouble(const","getemitter()","getint(const","getlargeint(const","getprocessor(int","getraw()","getraw(const","getrawstring(const","getscopedkey(const","getsource(int","getstring(const","getter","getu16(std::uint16_t","getu24(std::uint32_t","getu32(std::uint32_t","getu64(std::uint64_t","getu8(std::uint8_t","given","gregorian","guarante","handl","handle()","handle.","handlepotentialresponse(const","has(const","has(unsign","hasdata()","hasn't","hasqueuedstate(packetstreamstate::id","header","heap.","helper","here","here.","hexadecimal.","hold","holds.","hour","hour()","hour,int","hourampm()","hours()","hours,","hours,int","hours.","http://en.wikipedia.org/wiki/gregorian_calendar","http://en.wikipedia.org/wiki/iso_8601","http://en.wikipedia.org/wiki/julian_day","http://en.wikipedia.org/wiki/utc","http://vsg.cape.com/~pbaum/date/date0.htm","http://vsg.cape.com/~pbaum/date/injdimp.htm,","i.e.","id","id()","id)","id,","id,const","id,id","id,long","id.","idler","idler(uv::loop","ie","iff","ignored.","immedi","implement","import","imposs","in,std::str","inact","inactive.","inbuf,std::size_t","incom","incorrect.","increment","independ","index","index)","info","info)","info,unsign","inform","information,","inherit","inhibit","init()","initi","initstate(std::uint32_t","inlin","inlinebyteorderorder()","inlineipacket&","inlinelogstream&","inlinenvcollection&","inlinepacketprocessor*","inlinesynccontext&","inlinetimediffelapsed()","inlinetimediffoper","inlinetimestamp&","inlinetimestamp::utctimevalutctime()","inlinetimestampoper","inlinetimestampoperator+(timediffd)","inlinetimestamptimestamp()","inlinetimevalepochmicroseconds()","inlineutctimevalutctime()","input","input,","insensitive.","instanc","instance,","instance.","instances.","instant","instanti","instead","int","int.","integr","inter","interchang","interfac","intern","internal::decodest","internal::encodest","internally,","interpret","interv","interval()","interval)","invis","involv","ipacket","ipacket(constipacket&","ipacket(void","ipacketcreationstrategy()","ipacketinfo()","ipc","is()","is)","isam()","iselapsed(timediffinterval)","isn't","iso","ispm()","istrm,std::ostream","iswspace(const","it'","it.","item","item)","item,bool","itemad","itemremov","iter","iteration.","itself","januari","join()","json,","julian","julianday()","julianday)","key","key)","key,bool","key,const","key,doubl","key,int","key,std::int64_t","key,std::str","key,tvalu","kill","kill(int","kind","klass)","kvcollection()","lack","last","lastbyt","late","leap","left","legal","len)","len,std::size_t","len,unsign","lengthi","level","level()","level)","level,const","library.","libsourcey","lid,id","lid,unsign","limit()","limit)","limit,int","limit.","line","line,const","linelength)","list","listeners.","load","locak","local","localdatetim","localdatetime()","localdatetime(constdatetime&","localdatetime(constlocaldatetime&","localdatetime(doubl","localdatetime(int","localdatetime(timestamp::utctimevalutctime,timestamp::timediffdiff,int","localdatetime.","lock","lock()","lock(_mutex);","locked()","locked,","locked.","log","log(const","logchannel(const","logchannelmap","logger()","logger(constlogger&)","logger(logger&&)","logic","logic.","loglevel","logstream(constlogstream&","logstream(loglevel","logwriter()","long","look","loop","loop)","loop,int","loop,std::funct","loop,void","loop.","machine.","made","main","mainli","maintain","major","make","makelocal(int","makeutc(int","malform","manag","mani","map","map()","mark","match","match.","matter.","maximum","maxsize)","mean","meaning","measur","member","member.","memori","messag","message()","message)","message,loglevel","message.","messages.","method","method,","method,datat","method,int","method.","methods.","microsecond","microsecond()","microsecond)","microseconds()","microseconds)","microseconds.","midnight,","millisecond","millisecond()","millisecond,int","milliseconds()","milliseconds)","milliseconds.","minor","minut","minute()","minute,int","minutes()","minutes,","minutes,int","minutes.","mode.","models.","modern","modes.[name].[value]","modifi","modified,","modified.","modul","module.","module:","modulo","monday","monday,","monday.","monoton","monotonic*","month","month()","month,int","months,","more","movable.","msg)","multi","multipl","multithread","mutablebuff","mutablebuffer()","mutablebuffer(void","mutablemutex_mutex","mutablemutex_procmutex","mutex","mutex::scopedlock","mutexstate(constmutexstate&","mutexstate(id","n)","n.","name","name()","name(bool","name)","name,","name,bool","name,const","name,loglevel","name,void","name.","namespac","namespacesci","namespacescy::async","namespacescy::bas","namespacescy::base64","namespacescy::delet","namespacescy::hex","namespacescy::ipc","namespacescy::test","namespacescy::util","nanoseconds.","nativ","ndelegates()","neg","nember","never","new","newptr)","next","next()","next(std::uint32_t","nextbool()","nextchar()","nextdouble()","nextfloat()","no,","non","none","nonlinear","normal","not,","note","note:","notes:","notfoundexcept","notif","notifi","now","now.","nread)","nread,char","nread,std::size_t","nullptr","nullptr.","numadapters()","number","number.","numbering)","numer","numerictyp","numprocessors()","numsources()","nvc)","nvcollect","nvcollection()","nvcollection(constnvcollection&","nybble(const","object","object'","object()","object,method","obtain","obtain(delegatelist","octob","of.","offset","old","oldstate)","on","on.","onadd(const","onadd(task*","onc","oncancel(task*","onchange(id","ondispatch","one.","onexit","onpacketcreated(ipacket*)","onread(const","onremove(const","onremove(task*","onresponse()","onrun(task*","onstart(task*","onstatechange(packetstreamstate&","onstatechange(t","onstatechange(transactionstate&","onstreamstatechange(constpacketstreamstate&)","ontimeout(void","onto","opaqu","opaque)","opaque,ipacketinfo*","open","open()","open(const","oper","operator!=(constdatetime&","operator!=(constlocaldatetime&","operator!=(consttimespan&","operator!=(consttimestamp&","operator!=(timediff","operator()(t","operator+=(const","operator+=(consttimespan&","operator+=(timediff","operator+=(timediffd)","operator.","operator=(application&&)","operator=(constapplication&)","operator=(constdatetime&","operator=(constipacket&","operator=(constlocaldatetime&","operator=(constlogger&)","operator=(constnvcollection&","operator=(constpacketstreamadapter&)","operator=(construnnablequeue&)","operator=(construnner&)","operator=(constsharedobject&)","operator=(constthread&)","operator=(consttimeout&","operator=(consttimer&)","operator=(consttimespan&","operator=(consttimestamp&","operator=(doubl","operator=(logger&&)","operator=(packetstreamadapter&&)","operator=(taskconst","operator=(testconst","operator=(timediff","operator=(timevaltv)","operator==(const","operator==(constdatetime&","operator==(constlocaldatetime&","operator==(conststate&","operator==(consttimedtoken&","operator==(consttimespan&","operator==(consttimestamp&","operator==(constversion&","operator==(timediff","operator>(constdatetime&","operator>(constlocaldatetime&","operator>(consttimespan&","operator>(consttimestamp&","operator>(timediff","operator>=(constdatetime&","operator>=(constlocaldatetime&","operator>=(consttimespan&","operator>=(consttimestamp&","operator>=(timediff","operator[](const","operatordatetime&","operatoripacket&","operatorlocaldatetime&","operatorlogchannel*","operators,","operatortimespan&","operatortimestamp&","operatorversion&","oppos","option","optionmap","optionparser(int","options.","options.arg","order","order)","order,bool","origin.","os)","ost)","ostrm)","other)","otherwis","otherwise,","otherwise.","out","out)","outbuf)","outgo","output","outsid","overrid","overridden","overwrit","overwritten.","ownership","ownsbuffer()","p","p)","p,","p2","p2,","p3","p3,","p4","packet","packet)","packet.","packetadapterreference(packetstreamadapter*","packetadaptervec","packetcreationstrategy(int","packetcreationstrategylist","packetfactory()","packetprocessor","packetprocessor(packetsignal&","packetprocessors,","packets.","packetsign","packetsourc","packetsources,","packetstream","packetstream'","packetstream(const","packetstream.","packetstream::emitter.","packetstreamadapt","packetstreamadapter(constpacketstreamadapter&)","packetstreamadapter(packetsignal&","packetstreamadapter(packetstreamadapter&&)","packetstreamadapter,///","packetstreamsource.","packett","packettransact","packettransaction(const","packettransaction(long","pair","paramet","parameter.","pars","parse()","pass","passed()","passed.","past","path()","path)","path,loglevel","paus","pause()","pause().","pcontext","peek","peek()","peeku16()","peeku24()","peeku32()","peeku64()","peeku8()","peer.","perform","performance.","period","peter","pid()","pid.","platform","pleas","pod","pod,byteorderorder)","point","pointer","pointer.","pointer;","pointercollection()","pointers.","polymorph","polymorphism.","pop()","popnext()","pos)","posit","position()","position.","possibl","post","post()","potenti","pre","preced","preffer","prefix)","prev)","prevent","previou","print(std::ostream","priority()","priority)","prng","prng.","proc)","proc,int","process","process()","process(ipacket&","process(uv::loop","process.","processes.","processing.","processopt","processor","processors()","processors.","programming.","propag","properli","properti","property'","property.","propertychang","protect","protected.","protectedapplication&","protectedlogchannel*","protectedlogger&","protectedlogwriter*","protectedpacketsignal&","protectedpacketstreamadapter&","protectedrunnablequeue&","protectedrunner&","protectedsharedobject&","protectedsynccontext_sync","protectedtask&","protectedtest&","protectedtest*","protectedthread&","protectedthread_runn","protectedthread_thread","protectedtimer&","protectedtimer_tim","protecteduv::handle_handl","protocol","protocols...","provid","proxi","pseudo","ptr","ptr)","ptr,bool","ptr,const","ptr,scopedpointer*","public","publicbitwiseflag","publicconfiguration&","publicdatetime&","publicdatetimeoper","publicdatetimeoperator+(consttimespan&","publicdatetimeutc()","publicipacket*","publicipacketinfo*","publiclocaldatetime&","publiclocaldatetimeoper","publiclocaldatetimeoperator+(consttimespan&","publiclogchannel*","publiclogstream&","publicnullsignalclos","publicnullsignalidl","publicnullsignalshutdown","publicnullsignaltimeout","publicpacketsignal&","publicpacketsignalemitt","publicpacketstreamadapter*","publicscopedpointer*","publicscy::logstream&","publicsign","publicsignal2","publictest*","publictimeout&","publictimespan&","publictimespanoper","publictimespanoperator+(consttimespan&","publictimespanoperator+(timediff","publictimestamp&","publictimestamp::timediffelapsed()","publicuv::handle&","pump","push(const","push(t","push(tact","put(const","putu16(std::uint16_t","putu24(std::uint32_t","putu32(std::uint32_t","putu64(std::uint64_t","putu8(std::uint8_t","queu","queue","queue()","queue.","queue_t","queued.","r","r)","random","random(int","randominputstream.","range.","raw","rawpacket","rawpacket(char","rawpacket(const","rawpacket(constrawpacket&","reach","read","read().","read(constconstbuffer&)","read/pars","reading/writ","readline(std::str","readnext(const","readnextnumber(unsign","readnextword(std::str","readstart()","readstop()","readtonext(std::str","real","realm","realm,const","realm,int","reasons.","recalcul","receiv","received.","receivers.","recommend","redund","ref)","refcount()","refer","registerpackettype(int","registerstrategy(int","reject","rel","relat","releas","release()","remain","remaining()","remov","remove(const","remove(task*","remove(unsign","removed.","repeat","repeat)","repeatedli","repeating()","repeating,","repres","represent","representations.","request","request()","request,","request,long","request.","request/respons","requir","reset","reset()","resiz","resolut","resolution.","respons","response()","response.","restart","restart()","restarts)","result,","result.","resum","resume()","rethrow()","retransmit","retries()","retries,uv::loop","retriev","return","return.","returned.","reusabl","revis","revision.","rid)","rotat","rotate()","rotated.","rotatingfilechannel(const","rotationinterval()","rotationinterval,const","rpos,char","run","run()","run.","runasync()","runnable()","runnablequeue'","runnablequeue(construnnablequeue&)","runnablequeue(int","runner","runner()","runner(construnner&)","runner)","runner.","runner::context.","running()","running.","runsync()","runtim","runtimeout()","s","safe","safe,","same","saturday).","saturday,","save","scenarios.","schedul","sci","scope","scope)","scope,","scope.","scopedconfigur","scopedconfiguration(configuration&","scopedconfiguration(constscopedconfiguration&","scopedpoint","scopedpointer()","scopedrawpoint","scopedrawpointer(void","scopedsharedpoint","scopedsharedpointer(std::shared_ptr","scoping:","scy::abstractcollect","scy::appl","scy::async","scy::async::flag","scy::async::runn","scy::async::send","scy::async::start","scy::asynclogwrit","scy::asyncpacketqueu","scy::asyncqueu","scy::asyncstart","scy::bas","scy::base64","scy::base64::decod","scy::base64::encod","scy::basic::decod","scy::basic::encod","scy::basic::polymorph","scy::bitread","scy::bitwis","scy::bitwrit","scy::configur","scy::consolechannel","scy::constbuff","scy::datetim","scy::datetimeformat","scy::datetimeformatt","scy::datetimepars","scy::deleg","scy::delegatebas","scy::delegatecallback","scy::delet","scy::deleter::array","scy::deleter::def","scy::deleter::dispos","scy::error","scy::filechannel","scy::flagpacket","scy::garbagecollector","scy::hex","scy::hex::decod","scy::hex::encod","scy::idl","scy::ipacket","scy::ipacketcreationstrategi","scy::ipacketinfo","scy::ipc","scy::ipc::act","scy::ipc::queu","scy::ipc::syncqueu","scy::kvcollect","scy::livecollect","scy::localdatetim","scy::logchannel","scy::logg","scy::logstream","scy::logwrit","scy::mutablebuff","scy::mutexst","scy::nullsign","scy::nvcollect","scy::optionpars","scy::packetadapterrefer","scy::packetcreationstrategi","scy::packetfactori","scy::packetprocessor","scy::packetstream","scy::packetstreamadapt","scy::packetstreamst","scy::packettransact","scy::pointercollect","scy::process","scy::queu","scy::random","scy::rawpacket","scy::rotatingfilechannel","scy::runnablequeu","scy::scopedconfigur","scy::scopedpoint","scy::scopedrawpoint","scy::scopedsharedpoint","scy::sharedlibrari","scy::sharedobject","scy::sign","scy::signal2","scy::signal3","scy::signal4","scy::signalbas","scy::signalbase,","scy::singleton","scy::stat","scy::statesign","scy::stoppropag","scy::stopwatch","scy::stream","scy::streamwrit","scy::synccontext","scy::syncpacketqueu","scy::syncqueu","scy::task","scy::taskrunn","scy::test","scy::test::functiontest","scy::test::test","scy::test::testrunn","scy::thread","scy::threadedstreamread","scy::tim","scy::timedtoken","scy::timeout","scy::timespan","scy::timestamp","scy::timezon","scy::transactionst","scy::tzinfo","scy::util","scy::util::vers","scy::uv::handl","second","second()","second,int","second.","seconds()","seconds,","seconds,int","seconds,long","seconds.","section","see","see:","seed","seed()","seed(std::uint32_t","seed)","seed,char","seed.","seek(std::size_t","self()","send","send()","send(const","sender)","sender,basic::polymorphic&","sender,const","sender,p","sender,unsign","sender,void","sent","sent.","set","set(bool","set(const","set(id","set(unsign","set.","setbool(const","setclientdata(void","setdata(char","setdateformat(const","setdefault(const","setdelay(long","setdir(const","setdouble(const","seterror(const","setextension(const","setfilter(const","setint(const","setinterval(std::int64_t","setlargeint(const","setlevel(loglevel","setlinelength(int","setmessage(const","setpath(const","setraw()","setraw(const","setrepeating(bool","setrotationinterval(int","setrunner(async::runner::ptr","setstate(void","setstatemessage(const","setstring(const","settimeout(int","setup","setup()","setuppercase(bool","setwriter(logwriter*","share","shared_ptr","sharedlibrary::error()","sharedobject","sharedobject(bool","sharedobject(constsharedobject&)","sharedobject.","shut","shutdown","shutdown()","side","signal","signal.","signalbas","signalbase()","signum)","similarli","simpl","simultan","singleton","singleton()","singleton.","sit","size","size()","size)","size,byteorderorder)","size,unsign","skip(std::size_t","skipnextword()","skiptochar(char","skiptonextline()","skipwhitespace()","socket","socket/pip","sort()","sourc","source'","source)","source,bool","source,void","sources()","sources.","span","span)","span.","spawn","spawn()","specifi","specifiers.","src)","stack","standard","start","start()","start()/stop()","start(async::runnable&","start(std::funct","start(std::int64_t","start(task*","startasync()","startat()","started()","started.","startsources()","startsources()/stopsources().","startung","state","state()","state(id","state)","state,","state,constpacketstreamstate&","state,consttransactionstate&)","state.","state::id","statebetween(unsign","statechang","stateequals(unsign","stateful()","stateful::onstatechang","states.","statesignal(conststatesignal&","statesignal(id","statesize)","static","status.","std::atom","std::bind","std::dequ","std::dequelogstream*","std::dequepacketstreamstate>","std::endl","std::exception_ptr","std::function","std::int64_t","std::istream","std::listtest*","std::ofstream","std::ostream","std::ostringstream","std::out_of_rang","std::shared_ptr","std::size_t","std::string","std::time_t","std::uint16_t","std::uint32_t","std::uint64_t","std::uint8_t","std::vector","std::vectorscopedpointer*","still","stl","stop","stop()","stopped()","stopped.","stopsources()","stopwatch","stopwatch()","stopwatch.","storag","store","str()","str(id","str(unsign","str,unsign","strategies.","stream","stream()","stream(uv::loop","stream)","stream,std::ostream","stream.","streams.","streamt","streamwriter(std::ostream","string","string.","strings,","strings.","strings:","struct","structscy::base64::decod","structscy::base64::encod","structscy::bitwis","structscy::delegatebas","structscy::delegatecallback","structscy::deleter::array","structscy::deleter::def","structscy::deleter::dispos","structscy::error","structscy::hex::decod","structscy::hex::encod","structscy::ipacketinfo","structscy::ipc::act","structscy::logstream","structscy::optionpars","structscy::packetadapterrefer","structscy::packetcreationstrategi","structscy::packetstreamst","structscy::sharedlibrari","structscy::transactionst","structscy::util::vers","subclass","subclasses.","success","successful.","such","summari","sunday","sunday,","support","supported.","supported:","swap","swap(","swap(datetime&","swap(localdatetime&","swap(timespan&","swap(timestamp&","sym(const","symbol","sync()","synccontext","synccontext(uv::loop","synchron","synchronized.","synchronizeoutput()","synchronizeoutput(uv::loop","synchronizestates()","synchronously.","syncpacketqueu","syncpacketqueue(int","syncpacketqueue(uv::loop","syncqueu","syncqueue(uv::loop","syncqueue.","syncstat","syncstate)","syntaxexcept","system","system.","systems'","t","taction","take","target","target)","target,const","target,void","target.","task","task'","task(bool","task(consttask&","task)","task,","task.","tasklist","taskrunn","taskrunner(async::runner::ptr","taskrunner.","tasks.","tdelet","teardown()","templat","terminated.","test","test'","test(const","test(consttest&","test)","test.","test_list_t","testrunn","testrunner()","testrunner.","tests()","tests.","that)","thread","thread()","thread(async::runnable&","thread(constthread&)","thread(std::funct","thread.","threadedstreamreader(std::istream","through","throw","thrown.","thu","tid","tid()","time","time)","time,","time.","time_t","time_t.","timediff","timediff.","timedtoken(const","timedtoken(long","timeformat()","timeformat)","timeout","timeout()","timeout(consttimeout&","timeout(long","timeout)","timeout,int","timeout,std::int64_t","timeout.","timer","timer(consttimer&)","timer(uv::loop","timer,","timer.","timespan","timespan()","timespan(consttimespan&","timespan(int","timespan(long","timespan(timediff","timespan)","timespan.","timestamp","timestamp()","timestamp(consttimestamp&","timestamp(timevaltv)","timestamp)","timestamp.","timeval.","timezon","timezone()","timezone.","timezonedifferenti","tkey","todo:","toggle(unsign","token","tool","tostring()","total","totalhours()","totalmicroseconds()","totalmilliseconds()","totalminutes()","totalseconds()","transact","transit","transmission,","treat","trigger","true","true).","true,","true.","ts","ts)","tstartabl","tvalu","two","type","type.","types()","types.","tzd","tzd()","tzd)","tzd,constdatetime&","tzd,doubl","tzd,int","tzd.","tzinfo()","underli","uniqu","unit","univers","unix","unknown.","unmanag","unregisterpackettype()","unregisterstrategy()","unsign","until","up","updat","update()","update(const","update,bool","updateu16(std::uint16_t","updateu24(std::uint32_t","updateu32(std::uint32_t","updateu64(std::uint64_t","updateu8(std::uint8_t","us","use.","useconds()","used.","utc","utc),","utc,","utc.","utctime.","utctimev","utf","utilities.","uv::loop","uv_einval.","uv_lib_t","uv_process_t","uv_stream_t","uv_thread_t","val)","val,char","val,std::size_t","valid","valu","value)","value,","value,bool","value.","value_in)","values.","values:","varieti","variou","version(const","version)","via","virtual","virtualipacket*","virtualsynccontext&","virtualtask*","void","voidfunc_t","wait","waitforexit(int","waitforrunner()","waitforshutdown(std::funct","waitforstatesync(packetstreamstate::id","waitforsync()","want","warning:","way.","ways.","weather","week","week(int","weekday","well","whiny)","with.","within","without","witin","wrapper","wrapper.","write","write(),","write(buff","write(char","write(const","write(constlogstream&","write(ipacket&","write(logstream&)","write(logstream*","write(mutablebuffer&)","write.","writenext()","writer","writer)","written","xml,","year","year()","year).","year,int","year.","years,","yes,","yet.","zero","zero.","zone","zone.","{","}","~abstractcollection()","~application()","~asynclogwriter()","~asyncpacketqueue()","~asyncqueue()","~asyncstartable()","~bitreader()","~bitwriter()","~configuration()","~consolechannel()","~datetime()","~decoder()","~delegate()","~delegatebase()","~encoder()","~filechannel()","~flagpacket()","~functiontest()","~garbagecollector()","~idler()","~ipacket()","~ipacketcreationstrategy()","~ipacketinfo()","~kvcollection()","~localdatetime()","~logchannel()","~logger()","~logstream()","~logwriter()","~mutexstate()","~nvcollection()","~packetadapterreference()","~packetcreationstrategy()","~packetfactory()","~packetstream()","~packetstreamadapter()","~packettransaction()","~pointercollection()","~polymorphic()","~queue()","~random()","~rawpacket()","~rotatingfilechannel()","~runnable()","~runnablequeue()","~runner()","~scopedpointer()","~scopedrawpointer()","~scopedsharedpointer()","~sharedobject()","~signalbase()","~singleton()","~state()","~stateful()","~statesignal()","~stoppropagation()","~stopwatch()","~stream()","~streamwriter()","~synccontext()","~syncpacketqueue()","~syncqueue()","~task()","~taskrunner()","~test()","~testrunner()","~thread()","~threadedstreamreader()","~timeout()","~timer()","~timespan()","~timestamp()"],"api-crypto.html":["&","&)","(and","(iv)","(name","*","_algorithm","_cipher","_ctx","_encrypt","_initi","_md","_name","accept","ad","addition","against","algorithm","algorithm(void)","algorithm)","alia","amount","anoth","assign","auto","avail","be","block","blocksize()","bool","buffer","buffer.","bytes.","call","cert)","certif","certificate'","certificate()","certificate.","chain.","char","check","chunk.","cipher","cipher()","cipher(const","cipher(constcipher&)","cipher.","class","classscy::crypto::ciph","classscy::crypto::hash","classscy::crypto::x509certif","common","commonname()","commonname,std::set","computation.","consecut","const","constbytevec&","copi","count","count.","creat","crypto","crypto_dynlock_valu","data","data)","data,std::size_t","data,unsign","data.","date","decrypt","decrypting.","decryption.","decryptstream(std::istream","decryptstring(const","default","depend","descript","destroy","digest","digest()","digeststr()","direction.","disabl","distinguish","domain","domainnames)","done,","enabl","encod","encoding.","encrypt","encrypt()","encrypt(const","encrypt)","encryption,","encryption.","encryptstream(std::istream","encryptstring(const","engin","error","evp_ciph","evp_cipher_ctx","evp_cipher_ctx_set_pad","evp_cipherfinal_ex","evp_md","evp_md_ctx","exchang","exist","expires.","explicit","extract","extractnames(std::str","fals","fashion.","file","file.","final()","final(o","final(unsign","finish","format","format.","from.","function","further","garbage.","gener","generatekey(const","getiv()","getkey()","given","hand","hash","hash(const","held","identifier)","inbuf,std::size_t","incremented.","inform","information.","init()","initdecryptor()","initencryptor()","initi","initialize(bool","inlen,unsign","inlin","input","input,int","input,o","inputlength,unsign","installed.","int","internally.","issu","issuedby(constx509certificate&","issuer","issuer'","issuercertificate)","issuercertificate.","issuername()","issuername(nidnid)","it.","iter","iterationcount)","iv","iv)","ivsize()","key","key)","key,","key,constbytevec&","keysize()","larg","length)","load","load(const","mani","member","method","modul","multipl","name","name()","name)","name,","name,const","name,constbytevec&","name.","namespac","namespacescy::crypto","new","next","nid","normal","object","object,","object.","occur.","one.","openssl","oper","operator=(constcipher&)","operator=(constx509certificate&","operator=(hashconst","option","order","otherwise.","outbuf,std::size_t","outlen,encodingencoding)","output","output)","output,encodingencoding)","output,int","outputlength)","ownership","pad","padding)","padding.","paramet","particular","passphrase,","passphrase,const","password","path)","path.","pcert)","pcert,bool","pem","perform","performed,","privat","protect","protectedbytevec_iv","protectedbytevec_key","protectedcipher&","protectedcrypto::bytevec_digest","protectedhash&","provid","public","publicdatetimeexpireson()","publicdatetimevalidfrom()","publicscy::mutex_mutex","publicx509certificate&","random","rang","read","readi","refer","remain","remov","repres","reset","reset()","result","result.","return","salt","salt,int","save(const","save(std::ostream","scy::crypto","scy::crypto::ciph","scy::crypto::hash","scy::crypto::x509certif","see","set","setiv(const","setkey(const","setpadding(int","setrandomiv()","setrandomkey()","share","shared)","sign","sink,encodingencoding)","size","source,std::ostream","specifi","standard","state","std::string","store","str,encodingencoding)","stream","stream)","stream.","string","string.","struct","structcrypto_dynlock_valu","subject","subject'","subjectname()","subjectname(nidnid)","successful,","summari","swap(x509certificate&","symmetr","t","taken","templat","time","total","true","true,","types.","underli","unsign","up","updat","update()","update(char","update(const","us","used.","valid","valu","vector","vector.","verif","verifi","version","virtual","void","whether","will)","write","written","x509","x509certif","x509certificate(const","x509certificate(constx509certificate&","x509certificate(x509","x509certificate.","zero","~cipher()","~hash()","~x509certificate()"],"api-http.html":["\"application/x","\"close\"","\"keep","\"multipart/form","&","':'","(>=","(basic","(bi","(controllers?)","(denot","(e.g.","(file","(frame).","(http/1.0","(in","(nocopi","(other","(payload)","(see","(the","(w","(which","*","*&","*)","*,constnet::dnsresult&","/","//","0","1","1.","2109","2109)","2822","3986","4","400).","401","443),","6455.","80",":",">","_activ","_adapt","_boundari","_buf","_close","_complet","_connect","_contenttyp","_data","_encod","_error","_filenam","_files","_fileslength","_initi","_initialwrit","_istr","_lastheaderfield","_lastheadervalu","_length","_messag","_observ","_outgoingbuff","_parser","_part","_path","_request","_requestcomplet","_respond","_respons","_runner","_server","_set","_shouldsendhead","_socket","_upgrad","_washeadervalu","_writest","abstract","acceptserverrequest(http::request&","access","accord","accordingly.","actual","ad","adapt","adapter)","add","addconnection(clientconnection::ptr","addconnection(serverconnection::ptr","addcookie(constcookie&","addit","addpart(const","address","address.","ag","age,","agre","alive\"","allot","along","alphanumer","alreadi","amount","anoth","any.","append","applic","application.","application/octet","appropri","argument.","assign","associ","async","async::runner::ptr","asynchron","attachment.","attribut","authent","authenticate(http::request&","authentication)","authentication),","authenticator()","authenticator(const","authenticator.","authinfo","authinfo)","author","authority()","authority)","authority,const","auto","back","badrequesthandler(serverconnection&","base","base64","base64)","basic","basicauthent","basicauthenticator()","basicauthenticator(const","basicauthenticator(consthttp::request&","basicauthenticator.","befor","begin","belong","best","big","block","blocking,","bodi","bool","both","boundari","boundary()","boundary)","browser,","browsers.","buf,std::size_t","buffer","buffer)","buffer,constnet::address&","byte","c","calcul","calculatemultipartcontentlength()","call","called.","cancelled()","cancelled.","carriag","case","cast","caus","chain","char","character.","characters,","check","checkclienthandshakeresponse(http::response&","chunk","chunk.","chunked.","chunked_transfer_coding.","chunkedadapter(connection*","chunkedadapter(const","class","class.","classscy::http::authent","classscy::http::badrequesthandl","classscy::http::basicauthent","classscy::http::chunkedadapt","classscy::http::cli","classscy::http::clientadapt","classscy::http::clientconnect","classscy::http::connect","classscy::http::connectionadapt","classscy::http::cooki","classscy::http::filepart","classscy::http::formpart","classscy::http::formwrit","classscy::http::messag","classscy::http::multipartadapt","classscy::http::pars","classscy::http::parserobserv","classscy::http::progresssign","classscy::http::request","classscy::http::respons","classscy::http::serv","classscy::http::serveradapt","classscy::http::serverconnect","classscy::http::serverrespond","classscy::http::serverresponderfactori","classscy::http::stringpart","classscy::http::url","classscy::http::ws::connectionadapt","classscy::http::ws::websocket","classscy::http::ws::websocketadapt","classscy::http::ws::websocketfram","client","client()","client,","client.","clientadapter(clientconnection&","clientconnect","clientconnection(consturl&","clientconnection::ptr","clientconnectionptrvec","close","close()","closed()","closed.","code","code.","colon","comment","comment)","comment,","common","commonli","complet","complete()","complete,","complete.","completeclienthandshake(http::response&","compliant.","conn)","conn,async::runner::ptr","connect","connect()","connected.","connection()","connection(const","connection)","connection,bool","connection,const","connection,http_parser_typ","connection,ws::modemode)","connection.","connectionadapt","connectionadapter(connection&","connections.","const","const;","constructor","constructor.","contain","content","contenttyp","contenttype()","contenttype)","contenttype,bool","contenttype,const","cooki","cookie'","cookie()","cookie(const","cookie(constcookie&","cookie(constnvcollection&","cookie)","cookie).","cookie,","cookie.","cookies)","cookies.","copi","copied.","creat","createclienthandshakerequest(http::request&","createconnection(const","createconnection(consturl&","createconnectiont(consturl&","createresponder(serverconnection&","credenti","current","data","data\"","data\".","data,const","data,std::size_t","data.","date","date/tim","datetime)","decod","default","default)","default,","defer","defin","delet","deletion.","delimit","delimiter.","depend","deriv","describ","descript","destroy","details.","digest","digest)","directli","disabl","disclaimer:","domain","domain)","doubl","download","each","emit","emit()","emitchunkheader()","emitheader()","emitter.","empti","enabl","encapsul","encod","encoding()","encoding)","encoding.","endpoint.","ensur","entir","err)","error","error)","error.","escap","escape()","etc.)","event","exampl","exce","except","exception.","expir","expired()","expires.","explicit","extern","extract","factori","factory)","fals","fast","feed","field","field.","file","file.","fileexcept","filenam","filename()","filename())","filename,const","filepart","filepart(const","filepart.","files.","fill","final","fire","flag","flag)","flags)","flags,bitwriter&","flow","flow.","follow","forcefulli","forget","form","form'","form.","format","formpart","formpart(const","formpart.","forms.","formwrit","formwriter(clientconnection&","formwriter(constformwriter&)","formwriter.","fragment()","fragment)","frame","frame)","frame,char","frame.","frameflags()","framesepar","frameseparator,bool","freed","fromuri(consthttp::url&","fromuserinfo(const","get,","getcomment()","getcontentlength()","getcontenttype()","getcookies(nvcollection&","getcookies(std::vectorcookie>","getcredentials(const","getcredentials(std::str","getdomain()","gethost()","gethttponly()","getkeepalive()","getmaxage()","getmethod()","getname()","getpath()","getproxycredentials(std::str","getreason()","getsecure()","gettransferencoding()","geturi()","geturiparameters(nvcollection&","getvalue()","getversion()","give","given","handleclientresponse(constmutablebuffer&","handlerequest()","handleserverrequest(constmutablebuffer&","handshak","handshakecomplete()","hanshak","hascontentlength()","hascredentials()","hasfragment()","hashost()","haspath()","hasport()","hasproxycredentials()","hasquery()","hasschema()","hasuserinfo()","head,","header","header,const","header,std::ostream","header,std::str","header.","headers()","headers.","hearers.","heavi","henc","hit","host","host()","host)","host,std::uint16_t","host.","html","http","http/1.0","http/1.0.","http/1.0:","http/1.1","http/1.1).","http/1.1:","http/1.x","http::request","http::request.","http::request::getcredentials()).","http::response.","http_errno","http_parser","http_parser.","http_parser_set","http_parser_url","httponli","httpserver","httpserverrespond","ident","identifi","identity_transfer_cod","identity_transfer_coding.","implement","includ","incom","incomingheader()","incomplete.","info","inform","information.","init(http_parser_typ","initi","initialwrite()","inlin","inlinerequest&","inlineresponse&","inlineserverconnection&","input","inspect","instanc","instanti","int","intercept","intern","internally,","interoperability.","invalid","invalid.","is:","isbase64","ischunkedtransferencoding()","kbytes.","keepal","keepalive)","later","left","len)","len,constnet::address&","len,int","length","length()","length)","length,","length.","librari","lifting.","line","line,","linefe","longer","loop","loop)","loop.","made.","malform","manag","management.","masked.","match","maxage)","maximum","member","messag","message()","message(const","message)","message,","message.","messages,","messages.","method","method)","method,","method,const","method.","methods.","mime","modul","more","multipart","multipartadapter(connection*","multipartadapter(const","mustmaskpayload()","name","name)","name,","name,const","name,formpart*","name.","namespac","namespacescy::http","namespacescy::http::w","necessari","needed.","net::socket::ptr","net::tcpsocket::ptr","netscap","netscape)","never","new","next","no_content_typ","nocopi","nocopy)","non","normally,","notauthenticatedexcept","note:","notfoundexcept","noth","nread)","nullptr.","number","number.","nvc)","nvcollect","nvcollection.","object","object.","objects.","observer()","observer)","ok","on","onaccept(const","onbody(const","onclose()","oncomplete()","onconnectionclose(void","one.","onerror(constparsererror&","onhandshakecomplete()","onheader(const","onheaders()","onheaders(request&)","onheadersend()","onhostresolved(void","only.","onmessage()","onmessageend()","onparserchunk(const","onparserend()","onparsererror(constparsererror&","onparserheader(const","onparserheadersend()","onpayload(constmutablebuffer&","onpayload(constmutablebuffer&)","onrequest(request&,response&","onrequest(request&,response&)","onsocketclose()","onsocketconnect()","onsocketerror(constscy::error&","onsocketrecv(constmutablebuffer&","onurl(const","opaqu","open","open()","opened.","oper","operator=(const","operator=(constcookie&","operator=(constformwriter&)","operator=(consturl&","option","os)","ostr)","otherwis","otherwise,","otherwise.","outdo","outgo","outgoingheader()","output","overrid","overridden","overwrit","ownership","packet","packet)","packet.","pair","paramet","parameters.","params)","pars","parse(const","parseauthinfo(const","parser","parser()","parser(http::request*","parser(http::response*","parser(http_parser_typ","part","part)","part.","part/attach","partqueu","parts.","pass","password","password()","password)","password.","path","path()","path)","path,const","path.","pathetc()","pathetc)","payload","payload)","peer","peer.","peeraddr)","peeraddr,int","peeraddress)","per","perform","persist","phrase","phrase.","plain","pointer","pointer.","port","port()","port)","port,serverresponderfactory*","portion","posit","possible)","post","post),","post,","prepar","preparesubmit()","present,","present.","prevent","prior","problem","process","process(ipacket&","progress","progress()","progress.","progresssignal()","proper","properti","protect","protectedclientconnection&","protectedconnection&","protectedformwriter&","protectedhttp::client*","protectedhttp::request&","protectedhttp::request_request","protectedhttp::response&","protectedhttp::response_respons","protectednvcollection_head","protectedparser_pars","protectedrequest_request","protectedresponse_respons","protectedscy::error_error","protectedserver&","protectedserverconnection&","protectedserverresponder*","protectedsocketadapter*","protectedurl_url","protectedwebsocketframerfram","protectedws::modemode()","protocol","proxi","proxyauthenticate(http::request&","ptr;","public","public`signalmutablebuffer`&","public`signalresponse`&","publicclientconnection&","publicconnection&","publicconnection*","publiccookie&","publichttp::message*","publichttp::request&","publichttp::request*","publichttp::response&","publichttp::response*","publicnet::addressaddress","publicnullsignalconnect","publicnullsignalshutdown","publicnvcollection&","publicpacketsignalemitt","publicpacketstreamincom","publicpacketstreamoutgo","publicparser&","publicparsererror*","publicparserobserver*","publicprogresssignalincomingprogress","publicprogresssignaloutgoingprogress","publicrequest&","publicresponse&","publicscy::errorerror()","publicserverresponder*","publicserverresponderfactory*","publicstatuscodegetstatus()","publictimestampgetdate()","publicurl&","qualifiers,","queri","query()","query,const","raw","read","readframe()","readframe(bitreader&","readstream()","reason","reason)","receiv","received.","recent","regist","remov","removeconnection(clientconnection*","removeconnection(serverconnection*","replac","replaceadapter(net::socketadapter*","repres","represent","req)","request","request'","request()","request(const","request)","request,","request,consthttp::response&","request,http::response&","request.","requir","resent","reset","reset()","respond","respons","response()","response(const","response(statuscodestatus)","response(statuscodestatus,const","response)","response,","response.","result","result)","result.","return","return.","returned,","rfc","routes.","run","runner","runner,const","save","schedul","scheme","scheme()","scheme,const","scheme,std::str","scope)","scy::async::start","scy::http","scy::http::authent","scy::http::badrequesthandl","scy::http::basicauthent","scy::http::chunkedadapt","scy::http::client","scy::http::clientadapt","scy::http::clientconnect","scy::http::connect","scy::http::connectionadapt","scy::http::cooki","scy::http::filepart","scy::http::formpart","scy::http::formwrit","scy::http::messag","scy::http::method","scy::http::multipartadapt","scy::http::pars","scy::http::parsererror","scy::http::parserobserv","scy::http::progresssign","scy::http::request","scy::http::respons","scy::http::serv","scy::http::serveradapt","scy::http::serverconnect","scy::http::serverrespond","scy::http::serverresponderfactori","scy::http::stringpart","scy::http::url","scy::http::w","scy::http::ws::connectionadapt","scy::http::ws::websocket","scy::http::ws::websocketadapt","scy::http::ws::websocketfram","scy::net::socketadapt","scy::nvcollect","scy::packetprocessor","scy::packetstreamadapt","scy::sign","second","secur","secure)","see","send","send()","send(const","send(http::request&","sendclientrequest()","sender","sendhandshakerequest();","sendheader()","sendheader();","sending,","sent","separ","separately,","server","server()","server(short","server,net::socket::ptr","server.","serveradapter(serverconnection&","serverconnection(server&","serverconnection.","serverconnection::ptr","serverconnectionlist","serverrespond","serverresponder(serverconnection&","serverresponderfactori","serverresponderfactory()","session","set","set.","setboundary(const","setchunkedtransferencoding(bool","setcomment(const","setcontentlength(std::uint64_t","setcontenttype(const","setcookies(constnvcollection&","setcredentials(const","setdate(consttimestamp&","setdomain(const","setencoding(const","seterror(constscy::error&","sethost(const","sethttponly(bool","setkeepalive(bool","setmaxage(int","setmethod(const","setname().","setname(const","setobserver(parserobserver*","setparsererror(const","setpassword(const","setpath(const","setproxycredentials(const","setreadstream(std::ostream","setreason(const","setrequest(http::request*","setresponse(http::response*","setsecure(bool","setstatus(statuscodestatus)","setstatusandreason(statuscodestatus,const","settransferencoding(const","setup","seturi(const","setusername(const","setvalue(const","setversion(const","setversion(int","shouldkeepalive()","shouldsendheader()","shouldsendheader(bool","shutdown","shutdown()","shutdown(std::uint16_t","side","signal","singl","size","small","so.","sock)","socket","socket()","socket)","socket,ws::modemode,http::request&","socket.","solut","specifi","specification,","specifications.","split","ssl","sslsocket,","standalon","standard","start","start()","start.","state","statu","status.","statuscode,const","statusmessage)","std::except","std::ifstream","std::shared_ptr","std::size_t","std::string","std::string,","std::string.","std::uint16_t","std::uint64_t","std::vector","stop","stop()","str()","stream","stream()","stream.","streamt","string","string.","stringpart","stringpart(const","stringpart.","struct","structscy::http::method","structscy::http::parsererror","submit","success","success()","success,","successfully.","such","suitabl","summari","support","synchron","syntaxexcept","take","tcp","tcpsocket","templat","thread","thread.","throw","thrown","thrown.","time.","to.","todo:","tostring()","total","transact","transfer","transferencoding)","true","true,","type","type)","type.","typedef","unchang","underli","uniqu","unknown_content_length","unknown_content_length,","unknown_content_type.","unmanag","until","updat","update(int","updateauthinfo(http::request&","updateprogress(int","updateproxyauthinfo(http::request&","upgrade()","upload","upload)","upon","uri","uri)","uri,const","uri.","url","url()","url(const","url)","url,bool","url,const","url,uv::loop","urlencoded\"","us","used.","user","userinfo()","userinfo)","usernam","username()","username)","username,const","username.","username:password","util","valid()","valu","value)","value,","value.","vector","verac","verifi","version","version)","version,","version,statuscodestatus)","version,statuscodestatus,const","version.","via","video","virtual","virtualhttp::message*","void","web","websocket","websocket(const","websocketadapter(const","websocketframer(ws::modemode)","whini","whiny)","whitespac","within","work","write","write(formwriter&","write(std::ostream","write.","writeasync()","writechunk(formwriter&","writeend(std::ostream","writeframe()","writeframe(const","writemultipartchunk()","writepartheader(constnvcollection&","writer)","writeurl(std::ostream","written","written.","ws","wss).","www","~authenticator()","~basicauthenticator()","~chunkedadapter()","~client()","~clientconnection()","~connection()","~connectionadapter()","~cookie()","~filepart()","~formpart()","~formwriter()","~message()","~multipartadapter()","~parser()","~request()","~response()","~server()","~serverconnection()","~serverresponder()","~serverresponderfactory()","~stringpart()","~url()","~websocket()","~websocketadapter()","~websocketframer()"],"api-json.html":["&",":","_load","_path","accessors.","alreadi","basekey)","bool","class","classscy::json::configur","classscy::json::iserializ","configuration()","configuration.","const","create)","data","descript","deserialize(json::valu","destroy","emit","exist","exists,","false.","from,const","getraw(const","given","iconfigur","implement","inlin","json","json::valu","key","key)","key,const","key,std::str","keys(std::vector","keys,const","load(bool","load(const","loaded()","member","modul","mutablemutex_mutex","namespac","namespacescy::json","ost)","otherwise,","overridden","overwritten.","path()","path,bool","print(std::ostream","properti","property'","propertychang","protect","public","remove(const","removeall(const","replace(const","respons","return","root","root)","save()","scy::configur","scy::json","scy::json::configur","scy::json::iserializ","see","serialize(json::valu","set","setraw(const","signal.","std::string","store","subclasses.","summari","to)","true.","valu","value)","value.","virtual","void","~configuration()","~iserializable()"],"api-net.html":["&","&)","&)>","&,","(accord","(af_inet","(all","(e.g.","(if","(in","(ipv4)","(ipv6)","(optional)","(see","*","0","0.0.0.0:0","0;","1","1024*20,","192.168.1.10:80","3.6).","4507","80,",":","=",">","_buffer","_bufferout","_connectreq","_context","_ignoreerror","_ptr","_readbio","_sender","_session","_socket","_ssl","_writebio","abstract","acceptconnect","acceptconnection()","activ","active,","actual","adapt","adapter)","adapter,bool","adapter,int","add","addchaincertificate()","addchaincertificate(constcrypto::x509certificate&","addincomingdata(const","addit","addoutgoingdata(const","addr()","addr)","addr,socklen_t","addr,std::uint16_t","addreceiver(socketadapter*","address","address()","address(const","address(constaddress&","address)","address,","address,unsign","address.","address`&","addressbase()","addrinfo","addverificationcertificate(constcrypto::x509certificate&","af()","af_inet6)","agent","alreadi","alway","and/or","anoth","any.","applic","application'","application.","applications,","arbitrari","argument","assign","asynchron","attach","attempt","avail","available()","avoid","backlog)","base","base.","becom","befor","behaviour,","best","binari","bind","bind(constaddress&","bind(constnet::address&","bio","bool","bound","brackets.","buf)","buf,constnet::address&","buffer","buffer,constaddress&","buffer.","buffers.","builtin","byte","ca","ca/root","cach","cache,","cache.","caching.","call","callback","callback.","callbacks.","caloc","calocation,verificationmodeverificationmode,int","cancel","cancel()","candidates.","case","cast","caus","cert,int","certif","certificate()","certificate)","certificate.","certificatefil","certificatefile,const","certificates.","chain","chain,","chain.","changed.","char","check","checkresponse(const","cipher","cipherlist","cipherlist)","ciphers.","circular","class","classes).","classes.","classname()","classscy::net::address","classscy::net::addressbas","classscy::net::ipv4addressbas","classscy::net::packetsocketadapt","classscy::net::socket","classscy::net::socketadapt","classscy::net::socketpacket","classscy::net::ssladapt","classscy::net::sslcontext","classscy::net::sslmanag","classscy::net::sslsess","classscy::net::sslsocket","classscy::net::tcpsocket","classscy::net::transact","classscy::net::udpsocket","classscy::net::verificationerrordetail","client","client,","client.","clientverificationerror","clone()","close","close()","closed()","closed.","closur","closure.","codebas","colon.","compatability,","complet","complete()","complete.","connect","connect()","connect(const","connect(constaddress&","connect(constnet::address&","connected.","connection,","connection.","const","constcrypto::x509certificate&","constscy::error&","constsocketmodemode()","contain","context","context()","context)","context,","context.","control","copi","copy/gener","count","creat","creation","current","currentsession()","custom","data","data)","data,std::size_t","data.","decim","default","default.","defaultclientcontext()","defaultservercontext()","defer","delay)","deleg","deletion.","deriv","derive.","descript","destroy","destroyed.","destruction.","detect","directly,","directori","disabl","disablestatelesssessionresumption()","dispatch","dispose()","dn","dnsresult()","documentation)","domain","dot","down","durat","dure","dynam","each","effective.","effects.","embed","emit","emitsocketclose()","emitsocketconnect()","emitsocketerror(constscy::error&","emitsocketrecv(constmutablebuffer&","empti","enabl","enable)","enable,unsign","enabled).","enabled.","enablesessioncache(bool","encapsul","enclos","encountered.","encrypt","encryption.","enum","err)","errdepth,int","errmsg)","errnum,const","error","error()","error)","error,","error.","errordepth()","errormessage()","errornumber()","errornumber.","errors.","especi","establish","established,","even","event","example:","examples:","except","exist","explicit","extend","fail","failed()","failur","failure,","false.","famili","fatal","featur","file","file,","files,","fire","firefox","first.","flag)","flag,const","flags)","flush","flush()","flushreadbio()","flushsessioncache()","flushwritebio()","forcefully.","format).","format.","freeexisting)","function","function.","futur","gener","getignoreerror()","getsessioncachesize()","getsessiontimeout()","given","given.","guarante","handl","handle,int","handle.","handled.","handleerror(int","handling.","handshak","handshake()","handshake.","here","here.","hex","higher","highest","hint","hit","hold","host","host'","host()","host,const","host,std::uint16_t","hostandport)","id","identifi","ie.","ignoreerror)","immedi","implement","incom","info","inform","init()","init(const","initclient()","initi","initializeclient(sslcontext::ptr","initialized()","initialized.","initializeserver(sslcontext::ptr","initserver()","inlin","inlineaddresspeeraddress()","inlinesslcontext::verificationmodeverificationmode()","inlineusageusage()","input","input,","instanc","instead","int","intercept","interfac","intern","into.","invalid.","ip","ipacket","ipv4","ipv4addressbase()","ipv4addressbase(const","ipv6","isforserveruse()","issu","it'","judg","keep","key","lack","larg","larger","len)","len,constaddress&","len,constnet::address&","len,int","length","length()","length)","libuv","lifetim","limit","list","listen","listen(int","load","loaddefaultca","loaddefaultcas).","loaddefaultcas,const","loaded.","local","locat","logic","logic.","long","longer","loop","loop()","loop)","loop.","machine.","made","maintain","malformed.","manag","mani","match","matching.","maximum","mean","member","memory.","method","method.","mode","mode.","modul","name","name,","name.","name/address","namespac","namespacescy::net","nativ","necessari","need","negoti","net","net::dnsresult&","net::resolvedns(\"google.com\",","net::socket::ptr","net::sslcontext::ptr","net::sslsession::ptr","net::transporttyp","new","newer","next","nocopi","non","normally,","notation.","note","note:","nullptr","nullptr.","number","number,","number.","number/servic","object","object,","object.","objects.","obtain","on.","onacceptconnection(uv_stream_t","onclose()","onconnect(uv_connect_t","ondnsresult(const","ondnsresult);","one.","onerror(constscy::error&)","onpacket(ipacket&","onread(const","onrecv(constmutablebuffer&","onresponse()","onsocketclose()","onsocketconnect()","onsocketerror(consterror&","onsocketrecv(constmutablebuffer&","opaqu","openssl","operations.","operator!=(constaddress&","operator=(constaddress&","operator==(constaddress&","operatoraddress&","option","order","orderli","origin","os)","outgo","output","overrid","overridden","packet","packet)","packet,constaddress&","packet,int","packetinfo","packetinfo(const","packetinfo(constpacketinfo&","packetsocketadapt","packetsocketadapter(const","packetsocketadapter::onpacket","packett","paramet","pars","part","passphrase,","passphrases.","password","path","payload","peer","peer'","peer.","peeraddress)","peeraddress,int","peercertificate()","pem","per","perform","pkt)","platform","pod","pointer","pointer.","polymorph","port","port()","port)","posit","potenti","preffer","present","prevent","previous","print(std::ostream","prioriti","priority)","priority.","privat","privatekeyfil","privatekeyfile,const","privatekeypassphrasehandl","privatekeypassphraserequir","problem","process","process.","protect","protectedaddress_peeraddress","protectednet::address_p","protectednet::ssladapter_ssladapt","protectednet::sslsocket*","protectedsocketadapter*","protectedsocketmode_mod","protocol.","protocol:","protocols...","provid","proxi","ptr)","ptrcontext)","public","public`signal2mutablebuff","public`signalscy::error`&","public`signalverificationerrordetails`&","publicaddress&","publicaddress::familyfamily()","publicaddressaddress()","publicaddresspeeraddress","publicaddresspeeraddress()","publicnet::addressaddr","publicnullsignalclos","publicnullsignalconnect","publicpacketfactoryfactori","publicpacketinfo*","publicsign","publicsocketadapter*","r)","raw","rc)","read","read(constconstbuffer&)","read/pars","read/writ","reading.","readstart();","ready()","receiv","received.","receiver)","recv","recvstart()","recvstop()","refer","referenc","releas","remov","removereceiver(socketadapter*","represent","request","request,","request.","request/respons","requir","required.","reset","reset()","resiz","resolv","resolve.","resolving()","respons","response.","result","result)","result.","resumption.","retransmit","retries,uv::loop","return","returned.","reus","reuse.","rfc","run","safe","same","save","schedul","scy::ipacketinfo","scy::net","scy::net::address","scy::net::addressbas","scy::net::dnsresult","scy::net::dnsresult::statu","scy::net::ipv4addressbas","scy::net::packetinfo","scy::net::packetsocketadapt","scy::net::socket","scy::net::socketadapt","scy::net::socketpacket","scy::net::ssladapt","scy::net::sslcontext","scy::net::sslmanag","scy::net::sslsess","scy::net::sslsocket","scy::net::tcpsocket","scy::net::transact","scy::net::udpsocket","scy::net::verificationerrordetail","scy::packettransact","scy::rawpacket","scy::sharedobject","scy::signalbas","scy::stream","scy::uv::handl","seconds)","seconds.","secur","see","self()","send","send()","send(const","sender","sender()","sender,socketadapter*","sendpacket(constipacket&","sendpacket(ipacket&","sent","sent.","separ","sequenc","server","server,","server.","server/cli","server_us","serververificationerror","servic","session","session)","session,","session,uv::loop","session.","sessioncacheenabled()","sessionidcontext","sessionidcontext)","sessions.","sessionwasreused()","set","setbroadcast(bool","seterror(constscy::error&","setignoreerror","setignoreerror(bool","setkeepalive(int","setmode(socketmodemode)","setmulticastloop(bool","setmulticastttl(int","setnodelay(bool","setsender(socketadapter*","setsessioncachesize(std::size_t","setsessiontimeout(long","setup","shut","shutdown","shutdown()","shutdown(),","shutdown,","shutdown.","side","side,","side.","signal","signal.","simpl","singleton","size","size)","size.","sizes.","sockaddr","sockaddr_in","socket","socket()","socket)","socket,constaddress&","socket,constmutablebuffer&","socket.","socket/pip","socket::ptr","socket::setadapter).","socketadapt","socketadapter(socketadapter*","socketadapter.","socketpacket","socketpacket(const","socketpacket(constsocketpacket&","socketpacket.","sockets.","socklen_t","someth","sourc","specifi","ssl","ssl/tl","ssl_ctx","ssl_max_ssl_session_id_length.","ssl_session","ssl_session'","ssl_session_free()","ssladapter(net::sslsocket*","sslcontext()","sslcontext(usageusage,const","sslcontext,sslsession::ptr","sslcontext,uv::loop","sslcontext.","sslcontext::ptr","sslmanag","sslmanager'","sslmanager,","sslsession()","sslsession(ssl_sess","sslsession::ptr","sslsocket","sslsocket(sslcontext::ptr","sslsocket(uv::loop","ssltcp.","standard","start","start/continu","state","stateless","static","statu","status)","std::functiondnsresult","std::size_t","std::string","std::uint16_t","std::vector","still","store","strategi","strategies.","stream","string","struct","structscy::net::dnsresult","structscy::net::packetinfo","sub","subclass","success","success()","such","summari","support","supported).","swap","swap(address&","tcp","tcp,","tcpsocket(uv::loop","textual","that)","thread","throw","throw.","thrown.","ticket","timeout","timeout,int","timer","tlsv1","todo:","tostring()","transact","transaction(const","transport","transport()","treat","true","true,","trust","ttl)","two","type","udp","udpsocket(uv::loop","underli","uninitializessl(),","uniqu","unlik","unlimit","up","upper","us","usag","usecertificate()","usecertificate(constcrypto::x509certificate&","usecontext(sslcontext::ptr","used.","useprivatekey().","useprivatekey()/usecertificate()","user.","usesession(sslsession::ptr","util","uv","uv::loop","uv_connect_t","uv_getaddrinfo","uv_stream_t","valid","valid()","validated.","validation.","valu","verif","verification.","verificationdepth","verificationdepth,bool","verificationerrordetails(constcrypto::x509certificate&","verificationerrordetails.","verificationmod","version","via","virtual","virtualaddress::familyfamily()","virtualipacket*","virtualipacketinfo*","virtualnet::addressaddress()","virtualnet::addresspeeraddress()","void","wait","weather","well","whenev","wheter","whether","wildcard","wildcard.","within","work,","write","write(buff","write(mutablebuffer&)","written","www.sourcey.com:8080","x509","zero)","{","}","~address()","~addressbase()","~packetinfo()","~socket()","~socketadapter()","~socketpacket()","~ssladapter()","~sslcontext()","~sslsession()","~sslsocket()","~tcpsocket()","~transaction()","~udpsocket()","~verificationerrordetails()"],"api-pacm.html":["\"sdk","&","&,","*","1)","100].","2)",":",">","[0","_dlconn","_download","_local","_loop","_manag","_packag","_progress","_remot","_task","abort","activ","add","adderror(const","addtask(installtask::ptr","against","allowempty)","alreadi","any.","archiv","archive.","are:","aren't","asset","asset)","asset,","assets()","asynchron","author()","auto","avail","available,","befor","belong","best","bool","both","cach","cache.","call","cancel","cancel()","cancelall()","cancelalltasks()","cancelled()","cancelled.","cases.","chang","check","class","classscy::pacm::installmonitor","classscy::pacm::installtask","classscy::pacm::packagemanag","clear","clearcache()","clearcachefile(const","clearerrors()","clearpackagecache(localpackage&","compil","complet","complete()","complete.","completed,","completes,","completes.","consideration.","const","creat","created,","createdirectories()","createinstalltask(packagepair&","current","data","date,","date.","default","depend","descript","description()","destination.","destruction.","differ","dir)","directori","directory.","dodownload()","doesn't","doextract()","dofinalize()","doubl","download","each","element.","elements.","empti","empty().","error","error.","errors()","event","except","exist","exist,","exist.","exists,","exists.","extract","fail","fail.","failed()","failed,","failur","fals","file","file.","filename)","filename,bool","final","finalized.","finalizeinstallations(bool","follow","full","fulli","function","get","getcachefilepath(const","getinstalledfilepath(const","getinstalltask(const","getpackagedatadir(const","getpackagepairs()","getupdatablepackagepairs()","given","hasavailableupdates(constpackagepair&","hascachedfile(package::asset&","hasunfinalizedpackages()","http::clientconnection::ptr","id()","id)","id,bool","id.","ids,bool","ids,constinstalloptions&","implement","in","initialize()","initialized()","inlin","instal","install,","installation.","installationst","installationstate`&","installcomplet","installdir","installdir()","installed,","installed.","installedpackageversion(const","installedremoteasset)","installing,","installmonitor","installmonitor()","installmonitor.","installoptions()","installpackage(const","installpackages(const","installstate()","installstatechang","installtask","installtask(packagemanager&","installtask::ptr","installtaskcomplet","installtaskcr","installtaskptrvec","instanc","int","intended.","interfac","intermedi","invalid.","iscomplete()","isfailed()","isinstalled()","issupportedfiletype(const","json","json::valu","lasterror()","latest","list","load","loadlocalpackages()","loadlocalpackages(const","local","local()","local,remotepackage*","localpackage()","localpackage(const","localpackage(constremotepackage&","localpackages()","localpackagevec","location,","lock","lock.","loop()","loop)","manag","manager,localpackage*","managing,","manifest","manifest.","manifests.","manipulations.","mean","member","memori","message)","method","mirror","modul","monitor","monitor,bool","monitor.","move","multipl","mutablemutex_mutex","name()","name,constinstalloptions&","namespac","namespacescy::pacm","need","newer","none,","notfoundexcept","nullptr","number","oldstate)","onc","ondownloadcomplete(void","ondownloadprogress(void","oninstallcomplete(void","oninstallstatechange(void","onpackageinstallcomplete(void","onpackagequeryresponse(void","onstatechange(installationstate&","option","options()","options)","options,installmonitor*","options,uv::loop","options.","ost)","otherwis","otherwise.","overal","overwritten","ownership","packag","package()","package(const","package)","package,","package,bool","package.","packagemanag","packagemanager(constoptions&","packagemanager.","packagepair(localpackage*","packagepairvec","packages()","packages.","packageuninstal","pacm","pair","pair)","pair,constinstalloptions&","pair.","pairs,","pass","past","path","plug","pointers,","pointers.","possibl","print(std::ostream","procedure.","progress","progress()","progress)","protect","protectedidler_runn","protectedinstalloptions_opt","protectedlocalpackage*","protectedlocalpackagestore_localpackag","protectedoptions_opt","protectedpackagemanager&","protectedremotepackage*","protectedremotepackagestore_remotepackag","provid","proxi","public","public`signal3installtask","public`signalhttp::response`&","public`signalinstalltask`&","public`signallocalpackage`&","publiclocalpackage*","publicnullsignalcomplet","publicremotepackage*","publicsign","queri","queryremotepackages()","recent","refer","remot","remote()","remote)","remote,constinstalloptions&","remotepackage()","remotepackage(const","remotepackagerespons","remotepackages()","remov","represent","resid","response)","return","returned.","run()","safe","same","save","savelocalpackage(localpackage&","savelocalpackages(bool","scy::async::runn","scy::pacm","scy::pacm::installationst","scy::pacm::installmonitor","scy::pacm::installopt","scy::pacm::installtask","scy::pacm::localpackag","scy::pacm::packag","scy::pacm::packagemanag","scy::pacm::packagepair","scy::pacm::remotepackag","scy::stat","sdk","sdklockedversion()","sdkversion","see","sender)","sender,const","sender,consthttp::response&","sender,installationstate&","server","server.","set","set'","setcomplete()","setinstalldir(const","setinstalledasset(constpackage::asset&","setinstallstate(const","setprogress(int","setsdkversionlock(const","setstate(const","setversion(const","setversionlock(const","signal","singl","specif","src)","start","start()","startall()","started,","started.","state","state()","state)","state,constinstallationstate&","state.","std::runtime_error.","std::string","still","str(unsign","string","stringvec","struct","structscy::pacm::installationst","structscy::pacm::installopt","structscy::pacm::localpackag","structscy::pacm::packag","structscy::pacm::packagepair","structscy::pacm::remotepackag","structur","success","success()","successfulli","successfully.","summari","support","system.","take","target","task","task)","task.","tasks()","tasks.","thread","throw","thrown","thrown.","time","trigger","true","type","type()","unfin","uninitialize()","uninstal","uninstalled.","uninstallpackage(const","uninstallpackages(const","unset.","unsuccessfully.","up","updat","updateallpackages(bool","updated.","updatepackage(const","updatepackages(const","us","used.","uv::loop","valid","valid()","valu","value)","values.","verifyinstallmanifest(bool","version","version\"","version()","version)","version.","versionlock()","virtual","virtualassetasset()","virtualassetassetversion(const","virtualassetlatestasset()","virtualassetlatestsdkasset(const","virtualinstalloptions&","virtuallocalpackage*","virtuallocalpackagestore&","virtualmanifestmanifest()","virtualoptions&","virtualpackage::assetgetlatestinstallableasset(constpackagepair&","virtualpackage::assetgetremoteasset()","virtualpackagepairgetorcreatepackagepair(const","virtualpackagepairgetpackagepair(const","virtualremotepackage*","virtualremotepackagestore&","void","weather","whiny)","work","work.","~installmonitor()","~installtask()","~localpackage()","~package()","~packagemanager()","~remotepackage()"],"api-pluga.html":["*","apivers","char","classnam","const","descript","filenam","getpluginfunc","initializefunc","int","member","modul","namespac","namespacescy::pluga","pluga","pluginnam","pluginvers","public","scy::pluga","scy::pluga::plugindetail","struct","structscy::pluga::plugindetail","summari"],"api-sked.html":["&","*","0",":","_name","_schedul","_task","_trigger","_type","action.","ad","afterrun()","again,","appropri","associ","async","befor","beforerun()","bit","bool","call","cancel(sked::task*","capabilities.","caus","class","class.","classscy::sked::schedul","classscy::sked::task","classscy::sked::taskfactori","clear","clear()","const","context","created.","createtask(const","createtrigger()","createtrigger(const","creation;","current","dailytrigger()","date","day","daysexclud","default.","descript","deseri","deserialize(json::valu","destroy","destroy()","destroyed.","display","dure","dynam","effect.","except","exception.","exclud","execut","expir","expired()","extend","fals","flag","here.","id","implement","inlin","inlinesked::task*","inlinesked::trigger*","instanti","int","interv","intervaltrigger()","iteration.","json.","last","manag","maximum","maxtim","mean","member","method","millisecond","modul","mutablemutex_mutex","name","name()","name)","namespac","namespacescy::sk","need","next","number","onceonlytrigger()","ost)","otherwise.","overrid","part","print(std::ostream","protect","protected.","protectedsked::scheduler*","protectedsked::trigger*","public","publicdatetimecreatedat","publicdatetimelastrunat","publicdatetimescheduleat","publicdatetimetimeofday","publicscheduler&","publicsked::trigger&","publictimespaninterv","readi","redundant.","refer","regist","registertask(const","registertrigger(const","remain","remaining()","repres","return","root)","run","run()","run,","run.","schedul","schedule(sked::task*","scheduleat","scheduler()","scheduler,const","scy::json::iserializ","scy::sk","scy::sked::dailytrigg","scy::sked::intervaltrigg","scy::sked::onceonlytrigg","scy::sked::schedul","scy::sked::task","scy::sked::taskfactori","scy::sked::trigg","scy::task","scy::taskrunn","serial","serialize(json::valu","setname(const","settrigger(sked::trigger*","similarli","sked","sked::task","sked::trigg","specif","std::int64_t","std::string","std::vectordaysoftheweek>","strings.","struct","structscy::sked::dailytrigg","structscy::sked::intervaltrigg","structscy::sked::onceonlytrigg","structscy::sked::trigg","summari","t","task","task(const","task(scheduler&","task)","task.","taskfactori","taskmap","taskrunn","tasks()","tasks.","templat","throw","thrown.","time","time.","timeout()","timeout.","times.","timesrun","timestamp","trigger","trigger()","trigger(const","trigger)","trigger.","triggermap","triggers()","true","type","type()","type)","type,const","unregistertask(const","unregistertrigger(const","until","updat","update()","valu","virtual","void","wait","week","~scheduler()","~task()"],"api-socketio.html":["&","&)","(if","*","*,sockio::packet&","0;",":","=","_ack","_event","_frame","_id","_messag","_nsp","_pinginterv","_pingtimeout","_reconnect","_sessionid","_size","_type","_wasonlin","ack)","any).","application.","assign","befor","begin","bool","buffer","buffer,constnet::address&","buffer.","byte","bytes.","call","candid","char","check","checkresponse(constsockio::packet&","class","classname()","classscy::sockio::cli","classscy::sockio::packet","classscy::sockio::sslcli","classscy::sockio::tcpcli","client","client(const","client,constsockio::packet&","client,long","clone()","close()","codebas","connect()","connect(const","const","consum","contructor.","copy/gener","creat","createtransaction(constsockio::packet&","current","default","deleg","descript","dynam","each","end","error","error)","event","event,const","flag)","frame","frame()","frame,typ","framestring()","gener","given","handl","here","here.","hit","host,","id","id()","id)","id,const","implement","inlin","input","input,","instance.","instead","int","intercept","isonline()","json","json()","json::valu","logic","loop)","match.","member","messag","message()","message)","message,bool","method","modul","namespac","namespacescy::sockio","necessari","nember","net::socket::ptr","net::socket::ptr&","nsp()","nsp)","nsp,const","number","object","object.","obtain","onclose()","onconnect()","onhandshake(sockio::packet&","onlin","onmessage(sockio::packet&","ononline()","onpacket(sockio::packet&","onpingtimeouttimer()","onpingtimer()","onpong()","onpotentialresponse(void","onreconnecttimer()","onresponse()","onsocketclose()","onsocketconnect()","onsocketerror(constscy::error&","onsocketrecv(constmutablebuffer&","operator=(constpacket&","option","options()","options)","options,uv::loop","os)","output","overrid","overridden","packet","packet(const","packet(constpacket&","packet(fram","packet(typ","packet)","packet.","peeraddress)","pod","port);","potenti","preffer","previous","print(std::ostream","protect","protectedclient::options_opt","protectedhttp::ws::websocket_w","protectedscy::error_error","protectedtimer_pingtim","protectedtimer_pingtimeouttim","protectedtimer_reconnecttim","protocols...","public","publicclient::options&","publichttp::ws::websocket&","publicpacket&","publicscy::errorerror()","publicsockio::client&","publictransaction*","r)","read","read().","read(constconstbuffer&)","read/pars","received.","reconnecting()","reconnecting.","refer","request,long","request.","requir","reset","reset()","resiz","respons","return","returned.","scy::ipacket","scy::net::socketadapt","scy::packettransact","scy::signalbas","scy::sockio","scy::sockio::cli","scy::sockio::clientst","scy::sockio::packet","scy::sockio::sslcli","scy::sockio::tcpcli","scy::sockio::transact","scy::stat","send","send()","send(const","send(constsockio::packet&","sendping()","server.","session","session.","sessionid()","setack(bool","seterror(constscy::error&","setid(int","setmessage(const","setnamespace(const","size","size()","socket","socket);.","socket,constoptions&","socketio","sslclient(constclient::options&","start","startreconnecttimer()","state.","std::size_t","std::string","std::string&","std::uint16_t","stopreconnecttimer()","str(unsign","struct","structscy::sockio::clientst","structscy::sockio::transact","success","summari","tcpclient(constclient::options&","timeout)","timer","todo:","tostring()","transact","transaction(sockio::client&","transaction.","true","type","type()","type,const","type,int","typestring()","underli","us","valid()","variabl","virtual","virtualipacket*","void","wasonline()","websocket","write(),","write(buff","write(mutablebuffer&)","written","ws()","~client()","~packet()","~transaction()"],"api-stun.html":["&","(not","(rfc5389)","*","0","32","64",":",">","_attr","_class","_method","_size","_transactionid","_type","add(attribute*","addr)","address.","addressattribute(constaddressattribute&","addressattribute(std::uint16_t","addtype(std::uint16_t","arbitrari","asstring()","attr)","attribut","attribute(std::uint16_t","attributes.","attrs()","base","bit","bits)","bodi","bool","buf)","buffer.","byte","bytes()","bytes)","bytes,unsign","bytes.","call","char","checkresponse(constmessage&","class","classname()","classscy::stun::addressattribut","classscy::stun::attribut","classscy::stun::errorcod","classscy::stun::flagattribut","classscy::stun::messag","classscy::stun::messageintegr","classscy::stun::stringattribut","classscy::stun::transact","classscy::stun::uint16listattribut","classscy::stun::uint32attribut","classscy::stun::uint64attribut","classscy::stun::uint8attribut","classstring()","classtyp","classtype()","clone()","clss,methodtypemeth)","code)","code.","const","consum","consumepadding(bitreader&","contain","copybytes(const","descript","error","errorclass()","errorcode()","errorcode(consterrorcode&","errorcode(std::uint16_t","errorcode)","errornumber()","errorstring(std::uint16_t","flag.","flagattribute(std::uint16_t","get(attribute::typetype,int","get(int","getbit(int","getbyte(int","gettype(int","given","hmac()","hmac)","id)","implement","implementation.","index)","index,bool","index,std::uint16_t","index,std::uint8_t","indic","inlin","inlinestun::addressfamilyfamily()","input()","input)","int","integer.","internet","ipv4)","key()","key)","list","loop)","match","member","message()","message(classtyp","message(constmessage&","message)","messageintegrity()","messageintegrity(constmessageintegrity&","methodstring()","modul","names.","namespac","namespacescy::stun","nember","net::socket::ptr","number","object","onresponse()","operator=(constmessage&","os)","packet","packet.","pars","peeraddress,long","print(std::ostream","protect","public","publicattribute*","publicmessage&","publicmethodtypemethodtype()","r)","read","read().","read(bitreader&","read(constconstbuffer&","read.","reader)","reason()","reason)","received.","reflect","repres","respons","retries,uv::loop","return","scy::ipacket","scy::net::transact","scy::stun","scy::stun::addressattribut","scy::stun::attribut","scy::stun::errorcod","scy::stun::flagattribut","scy::stun::messag","scy::stun::messageintegr","scy::stun::stringattribut","scy::stun::transact","scy::stun::uint16listattribut","scy::stun::uint32attribut","scy::stun::uint64attribut","scy::stun::uint8attribut","setaddress(constnet::address&","setbit(int","setbyte(int","setbytes(char","setclass(classtyp","seterrorcode(int","sethmac(const","setinput(const","setkey(const","setlength(std::uint16_t","setmethod(methodtypetype)","setreason(const","settransactionid(const","settype(int","setvalue(std::uint32_t","setvalue(std::uint64_t","setvalue(std::uint8_t","size","size()","size)","socket","socket,constnet::address&","std::size_t","std::string","std::uint16_t","std::uint32_t","std::uint64_t","std::uint8_t","std::vectorattribute*","string.","stringattribute(conststringattribute&","stringattribute(std::uint16_t","stun","stun/turn","success","successful.","summari","t","templat","that)","timeout,int","tostring()","transaction(const","transactionid","transactionid()","true","type","type()","type)","type,bool","type,std::uint16_t","typestring()","uint16listattribute(constuint16listattribute&","uint16listattribute(std::uint16_t","uint32attribute(constuint32attribute&","uint32attribute(std::uint16_t","uint64attribute(constuint64attribute&","uint64attribute(std::uint16_t","uint8attribute(constuint8attribute&","uint8attribute(std::uint16_t","valu","value()","value)","verifyhmac(const","virtual","virtualattribute*","virtualipacket*","virtualnet::addressaddress()","virtualstun::attribute*","void","write","write(),","write(bitwriter&","write(buff","writepadding(bitwriter&","writer)","written","~attribute()","~errorcode()","~message()","~messageintegrity()","~stringattribute()","~transaction()","~uint16listattribute()"],"api-symple.html":["\"action\"","\"type\"","&","&)","'from'","'to'","(except","*","*)","*,ipacket&","*,void","...","//","0;","200:","400:","401:","500:",":","=",">","_announcestatu","_ourid","_room","_root","accepts(void","accessors.","ack","ack)","action()","action)","activ","add","addnote(const","addoption(const","addr)","address","address()","address(const","address.","addvalue(bool","addvalue(const","addvalue(doubl","addvalue(int","alia","also:","announc","announce()","append","applic","arbitrari","are:","array","array.","ask","authent","auto","bad","base","basic","begin","bool","boolvalue()","broadcast","buffer","buffer.","byte","bytes.","call","call.","cancel","changes.","char","checkbox,","child","class","classname()","classscy::smpl::cli","classscy::smpl::command","classscy::smpl::ev","classscy::smpl::form","classscy::smpl::formel","classscy::smpl::formfield","classscy::smpl::messag","classscy::smpl::p","classscy::smpl::pres","classscy::smpl::rost","classscy::smpl::sslcli","classscy::smpl::tcpcli","clear","clear()","cleardata()","clearelements(const","clearnotes()","client","client(const","clone()","close()","code","code)","codebas","command()","command(const","command(constcommand&","command,","commanddelegate(constcommanddelegate&","commanddelegate(constfilter&","complet","complete.","connect","connect()","connect(const","connects.","const","consum","contain","copy/gener","counted.","creat","createpres","createpresence()","createpresence(presence&","createtransaction(message&","current","custom","data","data(const","data)","data,bool","data,void","delivered.","describ","descript","direct","disconnects.","doubl","doublevalue()","dynam","each","element","elements.","emit(void","empti","empty2,void","empty3,void","empty4)","end","endpoint","entir","entiti","entity.","error","error)","errors.","establish","event","event()","event(const","event(constevent&","eventdelegate()","eventdelegate(consteventdelegate&","except","extern","fail","field","field'","field,bool","fields.","filter(const","filter(unsign","filter)","first","flag","flag)","flags)","form","form()","form(command&","form(json::valu","form,","form.","format","formelement()","formelement(constformelement&","formelement(json::valu","formfield()","formfield(json::valu","found","from)","further","getbyhost(const","getfield(const","given","group","hasdata(const","haserrors()","hasfield(const","haspages()","here","host","host()","host)","host,","http","http://www.w3.org/protocols/rfc2616/rfc2616","id","id()","id)","id,bool","id,const","id,formfield&","id.","identifi","ids.","index","info,","inlin","input","input,","instead","int","intern","intvalue()","isprobe()","isrequest()","join","joined.","joinroom(const","json","json::valu","key,const","label()","label)","leav","leaveroom(const","list","list,","live","live()","live,","long","loop)","manag","match","matches(const","mean","media,","member","memory.","messag","message()","message(const","message(constmessage&","message)","message,bool","message.","messagedelegate(constfilter&","messagedelegate(constmessagedelegate&","messages.","method","modifi","modul","multi)","multi,","multipl","n)","name()","name)","name,const","name,int","namespac","namespacescy::smpl","nember","net::socket::ptr","network","network.","new","node()","node)","note","notes()","notifi","number","numelements()","object","object.","obtain","offline.","onannouncestate(void","onlin","ononline()","onpresencedata(const","oper","operator=(constformelement&","operator==(constaddress&","operator==(std::str","operator>>(message&","option","options()","options)","options,uv::loop","os)","otherwis","ourid()","ourpeer()","outgo","output","outsid","overrid","p)","packet","packet)","packetsignal::emit.","page,","pages.","param(int","params()","parse(const","partial","partial()","partial)","path","path,unsign","peer","peer()","peer(const","peer(constpeer&","peer.","peerconnect","peerdisconnect","peermap","peers()","peers.","persist","persistence()","pod","pointer","polymorph","port);","possibl","preffer","presenc","presence()","presence(const","presence(constpresence&","presence,","presencedelegate()","presencedelegate(constpresencedelegate&","print(std::ostream","probe)","process","protect","protectedclient::options_opt","protectedpersistencet_persist","protectedroster_rost","protocols...","provid","public","public`signalpeer`&","publicaddressaddress()","publicaddressfrom()","publicaddressto()","publicbitwiseflag","publicclient::options&","publicfilterfilt","publicformelement&","publicformelementaddpage(const","publicformelementaddsection(const","publicformfieldaddfield(const","publicformfieldgetfield(const","publicpeer*","publicsign","publicsockio::transaction*","r)","read","read().","read(const","read(constconstbuffer&)","read/pars","refer","registri","removedata(const","repres","request","requir","reset","reset()","resiz","respond(message&","respons","response.","result","return","returned.","room","room)","room.","rooms()","root","root()","root)","root,const","roster","roster()","scope.","scy::delegatebas","scy::ipacket","scy::livecollect","scy::smpl","scy::smpl::address","scy::smpl::client","scy::smpl::command","scy::smpl::commanddeleg","scy::smpl::ev","scy::smpl::eventdeleg","scy::smpl::filt","scy::smpl::form","scy::smpl::formel","scy::smpl::formfield","scy::smpl::messag","scy::smpl::messagedeleg","scy::smpl::peer","scy::smpl::pres","scy::smpl::presencedeleg","scy::smpl::rost","scy::smpl::sslclient","scy::smpl::tcpclient","scy::sockio::cli","sec10.html","section","section,","see","send","send().","send(const","send(message&","sender,ipacket&","sender,transactionstate&","sendpresence(bool","sendpresence(constaddress&","server","server.","session","session,","session.","set","setaction(const","setdata(const","seterror(const","setfrom(const","setfrom(constaddress&","setfrom(constpeer&","sethint(const","sethost(const","setid(const","setlabel(const","setlive(bool","setname(const","setnode(const","setnote(const","setpartial(bool","setprobe(bool","setstatus(int","settime(std::time_t","setto(const","setto(constaddress&","setto(constpeer&","settype(const","setuser(const","setvalue(bool","setvalue(const","setvalue(doubl","setvalue(int","share","signal","signal.","signalsnotifi","singl","size","size()","so:","socket,constoptions&","sslclient(constclient::options&","state,consttransactionstate&)","statu","status()","std::size_t","std::string","std::string&","std::time_t","std::uint16_t","std::vector","store","stream","string","stringvec","struct","structscy::smpl::address","structscy::smpl::commanddeleg","structscy::smpl::eventdeleg","structscy::smpl::filt","structscy::smpl::messagedeleg","structscy::smpl::presencedeleg","structur","submiss","submit","substr","success","such","summari","swap","sympl","tcpclient(constclient::options&","text","text)","text,","throw","time()","time)","to)","to,bool","todo:","tostring()","transact","transmit","true","type","type()","type)","type,const","updat","us","user","user()","user)","user,const","user|id","valid","valid()","valid.","valu","value()","value)","value.","values()","values.","values:","variabl","via","virtual","virtualclient&","virtualipacket*","virtualpeer*","virtualpersistencet&","virtualroster&","void","warn,","whenev","whiny)","without","write(),","write(buff","write(mutablebuffer&)","written","xnode)","~address()","~client()","~command()","~event()","~form()","~formelement()","~formfield()","~message()","~peer()","~presence()","~roster()"],"api-turn.html":["&","(10","(alloc","(client'","(e.g.,","(rfc5766)","(see","(stale","*","*)","*,constmutablebuffer&","+","+|","/","//","0.","30","438","486","5","6.2),","600",":","<>",">","[rfc5389]).","[rfc5389].","^","^|","_acceptor","_bandwidthlimit","_bandwidthus","_control","_createdat","_delet","_lifetim","_maxlifetim","_nonc","_observ","_pendingind","_permiss","_realm","_server","_socket","_transact","_updatedat","_usernam","accept","activ","ad","addallocation(serverallocation*","added/cr","addpermission(const","addpermissions(const","address","address,","address.","address;","against","alloc","alloc)","allocation'","allocation)","allocation,","allocation.","allocationdefaultlifetim","allocationmaxlifetim","allocationmaxpermiss","allocations()","allocations,","allow","amount","applic","around","associ","async","asynchron","attack","authent","authenticaterequest(server*","authenticaterequest(stun::message&","authentication.","authenticationst","await","bandwidth","bandwidthlimit()","bandwidthremaining()","bandwidthused()","befor","between","bind","bind()","bindings.","bool","both","buffer","buffer,constnet::address&","byte","call","callback","callback.","chang","channel","char","class","classname()","classscy::turn::cli","classscy::turn::fivetupl","classscy::turn::ialloc","classscy::turn::request","classscy::turn::serv","classscy::turn::serveralloc","classscy::turn::tcpalloc","classscy::turn::tcpcli","classscy::turn::tcpconnectionpair","classscy::turn::udpalloc","classscy::turn::udpcli","cleanup","client","client'","client(clientobserver&","client)","client,","client,clientstate&","client,const","client,constnet::address&","client,conststun::transaction&","client,int","client::ontimer()","closed()","closed.","collection.","commun","comput","conceptu","configur","connect","connectionbind","connectionid","connectionid)","connectionid,constnet::address&","connections()","consist","const","constnet::address&","contain","control","control()","control,constfivetuple&","control.","counter.","creat","createandbindconnection(std::uint32_t","created,","createpermiss","createtransaction(const","credenti","current","data","data,std::size_t","data.","data:","database,","default","default,","delet","deleted()","deleted.","denial","describ","descript","design","desir","destroy","destruct","destruction.","destructor","differ","directli","discard","dopeerconnect(constnet::address&","down","dure","each","earli","earlymediabuffers","earlypeerdata","easili","enabletcp","enableudp","error","error)","errorcode,const","errordesc)","etc.","exce","exceeded)","expir","expired()","expired.","expires,","expires.","expiri","expiry;","explicitly,","extern","externalip","external|","extra","face","fals","fire","fivetuple()","fivetuple(constfivetuple&","fivetuple(constnet::address&","flag","flowing.","follow","freeconnection(constnet::address&","freed.","functionality.","garbag","getallocation(constfivetuple&","gettcpallocation(const","gettcpsocket(constnet::address&","given","hand","handi","handl","handleallocateerrorresponse(conststun::message&","handleallocaterequest(request&","handleallocateresponse(conststun::message&","handleauthorizedrequest(request&","handlebindingrequest(request&","handleconnecterrorresponse(conststun::message&","handleconnectionattemptindication(conststun::message&","handleconnectionbinderrorresponse(conststun::message&","handleconnectionbindrequest(request&","handleconnectionbindresponse(conststun::message&","handleconnectrequest(request&","handleconnectresponse(conststun::message&","handlecreatepermission(request&","handlecreatepermissionerrorresponse(conststun::message&","handlecreatepermissionresponse(conststun::message&","handledataindication(conststun::message&","handlerefreshrequest(request&","handlerefreshresponse(conststun::message&","handlerequest(request&","handleresponse(conststun::message&","handlesendindication(request&","hash","haspermission(const","here","host","hosts.","iallocation(constfivetuple&","id.","identifi","ie.","implement","implementation.","implementations.","important:","impos","includ","incom","indic","inform","information;","initi","initiate()","inlin","int","integr","intent","intern","intervals.","ip","ip)","iplist","ips)","isdataconnect","key","kick","later.","left","lifetim","lifetime()","lifetime)","limit","list","local","local()","local(constnet::address&","local)","local,","local,net::transporttyp","localaddress,constnet::address&","locally.","long","makedataconnection()","manag","maxtimeremaining()","md5","mechan","member","messag","message)","message,net::transporttyp","method","minutes),","mitig","modul","namespac","namespacescy::turn","net::socket::ptr","net::tcpsocket::ptr","net::transporttyp","never","new","nonc","nonce)","note","nullptr","number","numbytes)","observ","observer()","observer,constclient::options&","observer,constoptions&","observer,constserveroptions&","oldstate)","on","onallocationcreated(client&","onallocationdeleted(client&","onallocationfailed(client&","onallocationpermissionscreated(client&","onc","onclientdatareceived(void","onclientstatechange(client&","onconnectionclosed(void","oncontrolclosed(void","onpeeraccept(void","onpeerconnecterror(void","onpeerconnectionattempt(tcpclient&","onpeerconnectsuccess(void","onpeerdatareceived(void","onrelayconnectionbindingfailed(tcpclient&","onrelayconnectionclosed(tcpclient&","onrelayconnectionclosed(void","onrelayconnectionconnect(void","onrelayconnectioncreated(tcpclient&","onrelayconnectionerror(tcpclient&","onrelayconnectionerror(void","onrelaydatareceived(client&","onrelaydatareceived(void","onserverallocationcreated(server*","onserverallocationremoved(server*","onsocketclose(void","onsocketconnect(void","onsocketrecv(void","onstatechange(clientstate&","ontcpacceptconnection(void","ontcpsocketclosed(void","ontimer()","ontimer(client&","ontimer(void","ontransactionprogress(void","ontransactionresponse(client&","oper","operator==(const","operator==(constfivetuple&","operatorfivetuple&","option","options()","options)","os)","out","out.","outgo","over","p2p","packet","pair,bool","pairs()","password","password,","passwords,","path","peer","peeraddr)","peeraddress)","peerip)","peerips)","peers,","perform","permiss","permission(const","permissionlist","permissions()","permissions)","permissions.","permissions;","pipe","port,","preform","print(std::ostream","process","protect","protectedclientobserver&","protectedconnectionmanager_connect","protectedfivetuple_tupl","protectednet::address_mappedaddress","protectednet::address_relayedaddress","protectedoptions_opt","protectedserver&","protectedtcpclientobserver&","protectedtcpconnectionpairmap_pair","protectedtimer_tim","protocol","protocol);","public","publicclientobserver&","publicconnectionmanager&","publicnet::addresslistenaddr","publicnet::addresslocaladdress","publicnet::addressmappedaddress()","publicnet::addresspeeraddress","publicnet::addressrelayedaddress()","publicnet::addressremoteaddress","publicnet::tcpsocket&","publicnet::udpsocket&","publicoptions&","publicserverallocation*","publicserverobserver&","publicserveroptions&","publictcpallocation&","publictcpallocation*","publictcpconnectionpairmap&","publictimeouttimeout","publictimer&","queu","quota","quota.","quotas,","r)","reached.","readi","realm","realm,","reason)","reasons,","receiv","recommend","reflex","refresh","refresh()","reject","relay","releasetcpsocket(net::socket*","remot","remote()","remote(constnet::address&","remote)","remote,constnet::address&","remoteaddr)","remoteaddress)","removeallocation(serverallocation*","removeallpermissions()","removeexpiredpermissions()","removepermission(const","removetransaction(stun::transaction*","reply.","request","request(conststun::message&","request)","request,authenticationst","request,int","request,stun::message&","request.","request;","requests.","reset","respond(request&","responderror(request&","respons","response)","responses.","result","return","revolv","rfc5766","rout","scy::stat","scy::stun::messag","scy::turn","scy::turn::cli","scy::turn::clientobserv","scy::turn::clientst","scy::turn::fivetupl","scy::turn::ialloc","scy::turn::permiss","scy::turn::relayconnectionbind","scy::turn::request","scy::turn::serv","scy::turn::serveralloc","scy::turn::serverobserv","scy::turn::serveropt","scy::turn::tcpalloc","scy::turn::tcpcli","scy::turn::tcpclientobserv","scy::turn::tcpconnectionpair","scy::turn::udpalloc","scy::turn::udpcli","second","seconds,","section","secur","see","send","send(const","sendallocate()","sendauthenticatedtransaction(stun::transaction*","sendchannelbind(const","sendconnectrequest(constnet::address&","sendcreatepermission()","senddata(const","sender)","sender,const","sender,consterror&","sender,constmutablebuffer&","sender,transactionstate&","sendpeerconnectresponse(tcpconnectionpair*","sendrefresh()","sendtocontrol(stun::message&","sent","sequence,","sequence.","server","server()","server(serverobserver&","server,","server,const","server,constfivetuple&","server,iallocation*","server,request&","server.","server::ontimer()","serverallocation(server&","serverallocationmap","serverobserv","serveroptions()","servic","session.","set","setbandwidthlimit(std::int64_t","setclientsocket(const","setlifetime(std::int64_t","setpeersocket(const","shutdown","shutdown()","signifi","size,constnet::address&","sock)","socket","socket)","socket,","socket,constnet::address&","softwar","soon","start","start()","start.","starttimeout()","state","state)","state,constclientstate&","state,consttransactionstate&)","std::dequestun::message>","std::int64_t","std::string","std::uint32_t","std::vectorstun::transaction*","stop()","store","struct","structscy::turn::clientobserv","structscy::turn::clientst","structscy::turn::permiss","structscy::turn::relayconnectionbind","structscy::turn::serverobserv","structscy::turn::serveropt","structscy::turn::tcpclientobserv","stun::transactionid","subsequ","success","success)","successfull.","such","summari","tasks.","tcp","tcpallocation(server&","tcpclient(tcpclientobserver&","tcpconnectionpair(tcpallocation&","tcpconnectionpair.","tcpsocket()","term","that,","those","though","tick","time","time_t","timeout","timeout.","timer","timer()","timer,","timeremaining()","timerinterv","tostring()","toward","traffic","transact","transaction)","transactionid","transactions.","transport","transport()","transport(const","transport)","transport,constnet::address&","transportprotocol()","true","tupl","tuple()","tuple)","tuple,const","tuple:","turn","udp","udpallocation(server&","udpclient(clientobserver&","udpsocket()","unintent","uniqu","until","updat","updateusage(std::int64_t","us","usag","use.","used.","user","usernam","username()","username,","username,const","username,std::int64_t","valid","valu","value,","verifi","via","virtual","virtualfivetuple&","virtualnet::addressrelayedaddress()","virtualserver&","virtualstun::transaction*","void","x","|","|+","|/","|^","|a|","|n|","|t||","||","~client()","~iallocation()","~server()","~serverallocation()","~tcpallocation()","~tcpclient()","~tcpconnectionpair()","~udpallocation()","~udpclient()"],"api-util.html":["&","(and","(the","*","*)","*,diagnosticstate&","///","0",":",">","_freeclosedstream","_password","_timeout","_usernam","access","ad","add","add(const","add(iuser*","adddiagnostic(idiagnostic*","added.","addstream(packetstream*","addsummary(const","algorithm.","allcomplete()","allow","allowance.","assum","async","base","base64packetencoder()","basicuser(const","bool","bucket","call","called.","cansend()","char","check()","checkall()","class","classname()","classscy::asyncdiagnost","classscy::base64packetencod","classscy::basicus","classscy::diagnosticmanag","classscy::idiagnost","classscy::iregistri","classscy::ratelimit","classscy::streammanag","classscy::timedmanag","classscy::usermanag","clear()","clock_t","clone()","closeall()","closestream(const","complete()","completion.","const","contain","copi","copied.","createinstance(const","current","data","delegates.","deleted)","deprecated:","descript","description.","diagnost","diagnostic.","diagnosticmanager()","diagnosticscomplet","directli","dispatch","doubl","emit","emit()","exception.","expir","expires(const","expires(tvalu","expiri","fail()","failed()","failure.","first","freeclosedstreams)","freed","freediagnostic(const","getdafaultstream()","getdiagnostic(const","getstream(const","given","id)","idiagnost","idiagnostic()","implement","includ","indefinitely.","inform","inlin","instanc","instance.","instances.","int","iregistry()","item","item)","item,long","itemt","key,long","key,tvalu","last","lastcheck","limit","list","list,","logic.","loop)","manag","mani","map","mayb","member","messag","messages.","method","method.","modul","mutablemutex_tmutex","name","name)","name,bool","namespac","namespacesci","new","note:","notfoundexcept","null.","onadd(packetstream*","ondiagnosticstatechange(void","onremove(const","onremove(packetstream*","onstreamstatechange(void","ontimeout(tvalu","ontimerupdate(void","os)","outgo","over","overrid","ownership","packet","packet)","packet.","pass()","passed()","password()","password)","perform","persist","pointer.","print(std::ostream","process","process(ipacket&","protect","protectedthread_thread","protectedtimer_tim","provid","public","publicnullsignaldiagnosticscomplet","publicpacketsignalemitt","publicsign","rate","rate,doubl","ratelimiter(doubl","registertype(const","remain","removed.","reset()","resetall()","result","result.","return","run","run()","s)","sci","scope)","scy::async::runn","scy::asyncdiagnost","scy::base64packetencod","scy::basic::polymorph","scy::basicus","scy::diagnosticmanag","scy::diagnosticst","scy::idiagnost","scy::iregistri","scy::ius","scy::livecollect","scy::packetprocessor","scy::pointercollect","scy::ratelimit","scy::stat","scy::streammanag","scy::timedmanag","scy::usermanag","second","seconds)","seconds.","send","sender,packetstreamstate&","settimeout(tvalu","signal","simpl","specifi","state,constdiagnosticstate&)","state,constpacketstreamstate&)","statechang","std::string","std::vector","storag","store","str(unsign","stream","stream,bool","streammanager(bool","streams()","struct","structscy::diagnosticst","structscy::ius","summari","summary,","summary.","summaryupd","system.","task)","templat","test","test)","tests.","text","text)","thread","throw","time","timedmanag","timedmanager(uv::loop","timeout","timeout)","timeout.","timeoutmap","tkey","token","troubleshoot","tvalu","typemap","typeregist","types()","typeunregist","unregistertype(const","updat","user","user)","usermanager()","username()","username,const","util","value.","virtual","virtualidiagnostic*","virtualpacketstream*","void","whiny)","~asyncdiagnostic()","~diagnosticmanager()","~idiagnostic()","~iregistry()","~streammanager()","~timedmanager()","~usermanager()"],"api-uv.html":["&","*","_close","_loop","_ptr","_tid","active()","active.","actual","again,","any.","assertthread()","associ","asynchron","base","befor","bool","c++","call","callback","callbacks.","called.","cast","class","classscy::uv::handl","close","close()","closed()","closure.","const","constscy::error&","contain","content","context","custom","descript","destroy","destruct","determin","dure","err)","error","error()","error,","error.","errorno)","errors.","event","function","getter","handl","handle(consthandle&)","handle(uv_loop_t","handle)","handle.","handles.","id.","initialized.","inlin","insid","instead","invalid","io","it'","iteraton.","last","libuv","libuv.","lifecycl","loop","loop()","loop)","loop,void","main","make","manag","mechanism.","member","method","modul","namespac","namespacescy::uv","never","next","onc","onclose()","onerror(constscy::error&)","opaqu","oper","operations.","operator=(consthandle&)","overrid","parent","pointer","prefix,int","protect","protectedhandle&","protectedscy::error_error","ptr()","public","ref()","refer","relev","return","safe","scy::uv","scy::uv::handl","scy::uv::shutdowncmd","send","set","setandthrowerror(const","seterror(constscy::error&","setloop(uv_loop_t","setuverror(const","std::function","std::string","stream","struct","structscy::uv::shutdowncmd","summari","sure","t","templat","thread","thread.","throw","throwerror(const","tid()","trigger","true","typecast","unref'd.","unref()","unrefer","us","uv","uv_handle_t","uv_loop_t","uv_thread_t","verac","virtual","void","wrapper","~handle()"],"api-webrtc.html":["&","(for","*",":","[create()](#group__webrtc_1gaf78f45016b72c9bdca424e9a31691db8)","[peerconnection](#classscy_1_1peerconnection)","_audiomodul","_audiotrack","_avfram","_awaitingaudio","_awaitingvideo","_basenam","_captur","_config","_constraint","_count","_encod","_factori","_height","_manag","_peerconnect","_peerid","_renderedtrack","_stream","_videotrack","_width","access","activeaudiolayer(audiolay","addmediatracks(webrtc::peerconnectionfactoryinterfac","addref()","agc()","anoth","answer.","api.","arbitrari","assert","audio","audio_callback)","audio_data,int","audio_layer)","audiodevicemodul","audiopacketmodul","audiopacketmodule()","audiotracksinkinterfac","av::mediacapture::ptr","av::multiplexencod","av::videoencod","available)","avfram","basename)","be","befor","best_format)","bits_per_sample,int","bool","buffertyp","builtinaecisavailable()","builtinagcisavailable()","builtinnsisavailable()","burden","call","callback","called.","candidate)","candidate.","captur","capture_format)","case","channel)","channel.","channeltyp","char","class","classscy::audiopacketmodul","classscy::dummysetsessiondescriptionobserv","classscy::imagesequencerecord","classscy::multiplexmediacaptur","classscy::peerconnect","classscy::peerconnectionmanag","classscy::streamrecord","classscy::videopacketsourc","close","closeconnection()","configuration,","conn)","conn,const","conn,webrtc::mediastreaminterfac","connect","connected.","connection.","const","constraint","constraints()","constructor","contain","count","cpuload(uint16_t","creat","createconnection()","createmediastream()","createoffer()","createsessiondescriptionobserv","createvideosource()","creator","cricket::capturest","cricket::videocaptur","cricket::videoformat","cricket::videofram","custom","data)","deadlock.","decod","delay_ms)","delet","desc)","descript","desired,cricket::videoformat","destructor","detect","device)","directly.","done","dummysetsessiondescriptionobserver()","enable)","enablebuiltinaec(bool","enablebuiltinagc(bool","enablebuiltinns(bool","enabled)","end","error)","errorcod","event_callback)","expect","explicit","expos","fact","factory()","factory)","factory,webrtc::mediastreaminterfac","fed","file)","follow","fourccs)","frame","frame)","framework.","function","get","getaudiomodule()","getbestcaptureformat(const","getloudspeakerstatus(bool","getnextfilename()","getpreferredfourccs(std::vector","gtest","guid)","handl","hardwar","imagesequencerecorder(webrtc::videotrackinterfac","implement","implementation.","implemented,","index)","index,char","indic","inherit","init()","initi","initialized()","initmicrophone()","initplayout()","initrecording()","initspeaker()","inlin","input","instanc","instance.","instanti","int","int16_t","int32_t","int64_t","integrations.","isrunning()","isscreencast()","it'","json::valu","lasterror()","load)","local","manag","manager,const","max_volume)","maxmicrophonevolume(uint32_t","maxspeakervolume(uint32_t","media","mediastreamsourceinterface.","member","memori","messagehandl","method","microphoneboost(bool","microphoneboostisavailable(bool","microphoneisinitialized()","microphonemute(bool","microphonemuteisavailable(bool","microphonevolume(uint32_t","microphonevolumeisavailable(bool","microphonevolumestepsize(uint16_t","mid,int","min_volume)","minmicrophonevolume(uint32_t","minspeakervolume(uint32_t","mlineindex,const","modul","msg)","multiplexmediacapturer()","name,char","namespac","namespacesci","necessari","need","new_state)","note","note:","noth","number_of_channels,size_t","number_of_frames)","object","offer","offer.","onaddremotestream(peerconnection*","onaddstream(webrtc::mediastreaminterfac","onaudiocaptured(void","onc","onclosed(peerconnection*","ondata(const","onfailure(const","onfailure(peerconnection*","onframe(const","onicecandidate(const","oniceconnectionchange(webrtc::peerconnectioninterface::iceconnectionst","onicegatheringchange(webrtc::peerconnectioninterface::icegatheringst","onmessage(rtc::messag","onpacketencoded(av::mediapacket&","onremoveremotestream(peerconnection*","onremovestream(webrtc::mediastreaminterfac","onrenegotiationneeded()","onsignalingchange(webrtc::peerconnectioninterface::signalingst","onstable(peerconnection*","onsuccess()","onsuccess(webrtc::sessiondescriptioninterfac","onvideocaptured(void","openfile(const","options)","out","p","packet","packet)","pcm_file_name_utf8)","peer","peer.","peerconnection()","peerconnection(peerconnectionmanager*","peerconnectionfactori","peerconnectionmanager(rtc::scoped_refptr","peerconnectionobserv","peerid()","peerid,const","peerid,modemode)","pipelin","play","playing()","playoutbuffer(buffertyp","playoutdelay(uint16_t","playoutdevicename(uint16_t","playoutdevices()","playoutisavailable(bool","playoutisinitialized()","playoutsamplerate(uint32_t","postfix","process","process()","proper","properli","protect","protectedmode_mod","protectedpacketstream_stream","protectedpeerconnectionmanager*","public","put","reasons).","receiv","record","recording()","recordingchannel(channeltyp","recordingdelay(uint16_t","recordingdevicename(uint16_t","recordingdevices()","recordingisavailable(bool","recordingisinitialized()","recordingsamplerate(uint32_t","recvcandidate(const","recvremoteansw","recvsdp(const","refer","registeraudiocallback(webrtc::audiotransport","registereventobserver(webrtc::audiodeviceobserv","release()","remot","resetaudiodevice()","rest","result","return","rtc::messagehandler.","rtc::scoped_refptr","rtc::scoped_refptraudiopacketmodule>","rtc::videosinkinterfac","sample_rate,size_t","samples_per_sec)","sci","scy::audiopacketmodul","scy::dummysetsessiondescriptionobserv","scy::imagesequencerecord","scy::multiplexmediacaptur","scy::peerconnect","scy::peerconnectionmanag","scy::pointercollect","scy::streamrecord","scy::videopacketsourc","sdp","sdp)","sendcandidate(peerconnection*","sender,av::audiopacket&","sender,av::videopacket&","sending.","sendsdp(peerconnection*","session.","set","set.","setagc(bool","setaudiotrack(webrtc::audiotrackinterfac","setloudspeakerstatus(bool","setmicrophoneboost(bool","setmicrophonemute(bool","setmicrophonevolume(uint32_t","setpeerconnectionfactory(rtc::scoped_refptr","setplayoutbuffer(const","setplayoutdevice(uint16_t","setplayoutdevice(windowsdevicetyp","setplayoutsamplerate(const","setrecordingchannel(const","setrecordingdevice(uint16_t","setrecordingdevice(windowsdevicetyp","setrecordingsamplerate(const","setsessiondescriptionobserv","setspeakermute(bool","setspeakervolume(uint32_t","setstereoplayout(bool","setstereorecording(bool","setvideotrack(webrtc::videotrackinterfac","setwaveoutvolume(uint16_t","simpl","size_ms)","size_t","source'","speakerisinitialized()","speakermute(bool","speakermuteisavailable(bool","speakervolume(uint32_t","speakervolumeisavailable(bool","speakervolumestepsize(uint16_t","start()","start(const","startplayout()","startrawinputfilerecording(const","startrawoutputfilerecording(const","startrecording()","std::string","step_size)","stereoplayout(bool","stereoplayoutisavailable(bool","stereorecording(bool","stereorecordingisavailable(bool","stop()","stopplayout()","stoprawinputfilerecording()","stoprawoutputfilerecording()","stoprecording()","stream","stream()","stream)","stream.","streamrecorder(constav::encoderoptions&","success.","summari","terminate()","test","therefor","thread.","timeuntilnextprocess()","to","track)","track_to_render,const","trigger","type,const","type,uint16_t","uint32_t","us","video","videocaptur","videopacketsourc","videopacketsource()","videosinkinterfac","virtual","virtualvideopacketsource*","void","volume)","volume_left,uint16_t","volume_right)","waveoutvolume(uint16_t","way","webrtc","webrtc::audiodevicemodule.","webrtc::fakeconstraint","webrtc::icecandidateinterfac","webrtc::peerconnectionfactoryinterfac","webrtc::peerconnectioninterface::rtcconfigur","webrtc_ios.","~audiopacketmodule()","~dummysetsessiondescriptionobserver()","~imagesequencerecorder()","~multiplexmediacapturer()","~peerconnection()","~peerconnectionmanager()","~streamrecorder()","~videopacketsource()"],"LICENSE.html":["(1)","(2)","(also","(and","(becaus","(compiler,","(execut","(hereinafter,","(if","(in","(includ","(independ","(it","(not","(or","(ten","(whether","(which","0.","02110","1","1.","10.","11.","12.","13.","1301","14.","15.","16.","1991,","1999","1999copyright","2","2)","2,","2.","2.1,","2.1.","2d","3.","4.","5.","6","6,","6.","6.)","6a,","7.","8.","9.","a)","abov","above);","above,","above.","absenc","accept","access","accessors,","accompani","achiev","act","action","activ","add","addition,","address","advantag","advis","affect","aggreg","agre","agreement","all.","alleg","allow","allowed.","along","alreadi","also,","alter","although","and,","and/or","anoth","anyth","appeared,","appli","applic","application.","apply,","appropri","argument","aris","ask","associ","assum","attempt","attent","author","author'","author/donor","automat","away","b)","balanc","base","be","becom","believ","below,","below.","better","between","binari","bodi","boston,","both","bring","c","c)","call","carefulli","carri","case","case,","cases,","caus","certain","chang","change.","charg","charge,","choice,","choice.","choos","circumstance,","circumstances.","claim","claims;","clear","close","code","code,","code.","code”","collect","combin","compani","compat","compel","compet","compil","complet","complianc","compliance.","compon","comput","concerns.","condit","conditions.","conditions:","consequ","consequenti","consid","consist","conspicu","constant","constitut","contain","contains,","content","contest","contradict","contrast,","contribut","control","conveni","copi","copies,","copy,","copy.","copying,","copyright","correction.","correspond","cost","count","countri","countries,","court","cover","creat","criteria","customarili","customer'","d)","damag","damages,","damages.","data","data)","date","de","debug","decid","decis","defective,","defin","definit","definitions.)","deni","depend","deriv","design","detail","develop","differ","direct","directli","disadvantag","disclaim","display","distinguish","distribut","distribute,","distribute.","distribution.","distributor","distributor,","document,","does.","dure","e)","each","effect","effort","enabl","encourag","end","enforc","engin","ensur","entir","equival","especi","even","event","everyon","example,","except","exception,","exchang","exclud","excluded.","excus","execut","executable,","executable.","executables.","exercis","exist","explain","explan","explicit","express","expressli","extend","extent","facil","facilities.","facility,","fact","facto","failur","faith","fall","februari","fee","fee,","fee.","fifth","file","files,","finally,","find","first","fit","floor,","follow","follow.","forbid","form","form)","former","foundat","foundation,","foundation.","foundation;","franklin","free","freedom","freedom,","freedom.","frequent","full","function","further","gain","gave","gener","general,","generally.","geograph","give","given","gnu","gnu/linux","goal","good","gpl.","grant","grati","greater","guarante","guid","happen","header","held","henc","herein.","holder","holder,","holder.","however,","identifi","if,","implement","impli","implied,","impos","inabl","inaccur","inc.51","incident","includ","including,","incompat","incorpor","independ","indic","indirectli","induc","inform","infring","inlin","insist","instal","instead","intact","integr","intend","intent","interchange.","interfac","interfaces,","introduc","invalid","invoked,","irrevers","isolation,","issues),","is”","it).","it,","it.","it;","itself","itself.","job","judgment","keep","kernel,","kind,","know","language.","larg","later","latter","law","law.","law:","lax","layout","legal","length),","less","lesser","liabl","librari","libraries,","libraries.","library'","library)","library),","library,","library.","library”","library”,","library”.","licens","license","license,","license.","license;","license”).","licensor","limit","line","link","littl","long","loss","ma","machin","macro","made","major","make","mani","materi","mean","meaningful.(for","mechan","medium","medium,","meet","merchant","mere","method:","modif","modifi","modifications.","modify,","modul","more","necessari","necessarili","need","new","newer","non","normal","not.","noth","notic","notices,","notices.","number","number,","number.","numer","object","oblig","obligations,","obtain","occasions,","offer","offer,","on","on)","on,","onc","one,","only,","oper","operates,","opt","option","optional:","order","order,","ordinari","origin","others.","otherwis","otherwise)","otherwise,","out","output","outsid","over","packag","parameters,","part","parti","particular","pass","patent","pay","peopl","perform","permiss","permission.","permit","permitted,","pertin","physic","piec","place","place,","place.","plu","portion","pose","possibl","practices.","preambl","precis","prefer","prepar","present","preserv","price.","problem","produc","program","program.","programs.","programs;","prohibit","promin","promot","properli","properti","proprietari","protect","prove","provid","public","publish","purpos","purpose.","qualiti","quit","rang","rare","rather,","readabl","reason","receiv","recipi","recipients'","recipients,","recompil","redistribut","refer","refrain","regardless","releas","relianc","relink","remain","render","repair","reproduc","reput","requir","respons","rest","restrict","restricted,","reus","revers","revis","right","rights,","rights.","risk","root","roots.)","royalti","run","run.","runs,","same","satisfi","say","say,","scope","scope.","script","section","sent","separ","servic","servicing,","share","show","side","sign","signific","similar","simultan","singl","small","so,","softwar","software),","software,","software.","sole","someon","sometim","sourc","speak","special","special,","specifi","spirit","squar","standard.","state","static","statu","step","still","storag","straightforwardli","strategi","street,","structur","subject","sublicense,","subsect","subsequ","successor","such","suggest","suitabl","suppli","sure","surrend","sustain","system","system,","system.","system;","tabl","table,","take","term","termin","terms,","terms.","that,","them,","themselves,","therefor","therefore,","these,","they,","things.","things:","think","third","this,","this.","thoroughli","those","though","threat","three","threshold","through","thu","thus,","time","time.","to,","togeth","too,","tool","transfer","translat","true","two","typic","uncombin","under","understood","unenforc","unless","unrestricted,","up","us","usa","use,","user","user'","users'","users.","util","valid","variant,","verbatim","veri","verifi","version","version,","version”,","void,","volum","want","warranti","warranty;","way","well","whatev","wherea","wherewith","whether","whole","whole,","whole.","whose","wide","widest","will","wish","wish);","wish.)","with,","with.","without","work","work,","work.","works.","write","written","wrote","years,","you,","you.","you;","©","“a","“ani","“lesser”","“library”","“library”,","“modification”.)","“sourc","“thi","“work","“you”."]},"length":25},"tokenStore":{"root":{"0":{"0":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"1":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"2":{"1":{"1":{"0":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"api-base.html":{"ref":"api-base.html","tf":0.002505288943324797},"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}},".":{"0":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},".":{"0":{"docs":{},".":{"0":{"docs":{},":":{"0":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}},"docs":{}}},"docs":{}}},"docs":{}}},"8":{"docs":{},".":{"docs":{},"x":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}},"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},";":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},"x":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},"1":{"0":{"0":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"]":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}},"2":{"4":{"docs":{},"*":{"2":{"0":{"docs":{},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{},")":{"docs":{},":":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"1":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"2":{"8":{"0":{"0":{"0":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},")":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"3":{"0":{"1":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"docs":{}},"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"4":{"docs":{},".":{"0":{"4":{"docs":{},",":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}},"docs":{}},"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"5":{"8":{"2":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"docs":{}},"docs":{},".":{"0":{"4":{"docs":{},")":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}},"docs":{}},"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"6":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"9":{"2":{"docs":{},".":{"1":{"6":{"8":{"docs":{},".":{"1":{"docs":{},".":{"1":{"0":{"docs":{},":":{"8":{"0":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"7":{"0":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"docs":{}},"9":{"1":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"9":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.001670192628883198},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}},".":{"0":{"docs":{},")":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},".":{"1":{"docs":{},"g":{"docs":{},",":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}},"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},"8":{"docs":{},".":{"0":{"docs":{},",":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}},"docs":{}}},"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},"2":{"0":{"0":{"0":{"docs":{},")":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"5":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"7":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"docs":{},":":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}},"6":{"8":{"docs":{},")":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"docs":{}},"docs":{},"t":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"1":{"0":{"9":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"docs":{}},"docs":{},"t":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"3":{"docs":{},")":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}},"5":{"6":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"8":{"2":{"2":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},"docs":{}},"docs":{}},"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}},",":{"docs":{"./":{"ref":"./","tf":0.003125},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},".":{"1":{"docs":{},"+":{"docs":{"./":{"ref":"./","tf":0.0015625}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"8":{"docs":{},".":{"1":{"0":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}},"docs":{}},"3":{"docs":{},",":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}},"docs":{}}},"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"^":{"6":{"9":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"docs":{}},"docs":{}},"d":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"3":{"0":{"0":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"1":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},")":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}},"2":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.002258610954263128}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"9":{"8":{"6":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},"docs":{}},"docs":{}},"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}},".":{"0":{"docs":{},",":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}},"3":{"docs":{},".":{"1":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"docs":{}}},"6":{"docs":{},")":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}},"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"4":{"0":{"0":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}},")":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},":":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}},"1":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},":":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}},"docs":{}},"3":{"8":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"docs":{}},"4":{"1":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"docs":{}},"docs":{}},"3":{"docs":{},")":{"docs":{},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}},"docs":{}},"5":{"0":{"7":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},"docs":{}},"6":{"6":{"docs":{"./":{"ref":"./","tf":0.0015625}}},"docs":{}},"docs":{}},"8":{"0":{"0":{"0":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"docs":{}},"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"6":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.0015625},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},".":{"1":{"docs":{},".":{"2":{"docs":{},",":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}},"docs":{}}},"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"5":{"0":{"0":{"docs":{},":":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}},"docs":{}},"2":{"4":{"5":{"docs":{"./":{"ref":"./","tf":0.003125}}},"docs":{}},"docs":{}},"3":{"8":{"9":{"docs":{"./":{"ref":"./","tf":0.0015625}}},"docs":{}},"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"7":{"6":{"6":{"docs":{"./":{"ref":"./","tf":0.0015625},"examples.html":{"ref":"examples.html","tf":0.006622516556291391}}},"docs":{}},"docs":{}},"9":{"docs":{},")":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791}}}},"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.002495321272613849}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"6":{"0":{"0":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"6":{"2":{"docs":{"./":{"ref":"./","tf":0.0015625}}},"docs":{}},"docs":{}},"4":{"0":{"0":{"0":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"docs":{}},"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"5":{"5":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"docs":{}},"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}},"8":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"9":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"2":{"docs":{},")":{"docs":{},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}},"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},")":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"a":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"7":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"8":{"0":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},"6":{"0":{"1":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"docs":{}},"docs":{}},"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"9":{"9":{"9":{"9":{"9":{"9":{"docs":{},")":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"docs":{}},"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}},"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791}}}},"docs":{}},"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"docs":{},"\"":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"f":{"docs":{},"d":{"docs":{},"k":{"docs":{},"_":{"docs":{},"a":{"docs":{},"a":{"docs":{},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}},"x":{"2":{"6":{"4":{"docs":{},"\"":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"docs":{}},"docs":{}},"docs":{}}}}},"m":{"docs":{},"p":{"4":{"docs":{},"\"":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"docs":{}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069}}}}}}}}}}}}}}}},"s":{"1":{"6":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}},"docs":{}},"docs":{},"d":{"docs":{},"k":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}},"y":{"docs":{},"u":{"docs":{},"v":{"4":{"2":{"0":{"docs":{},"p":{"docs":{},"\"":{"docs":{},")":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}},"docs":{}},"docs":{}},"docs":{}}}},"\"":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"\"":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}},",":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"\"":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"\"":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.01}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"\"":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"\"":{"docs":{},".":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"x":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"\"":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}},"'":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},":":{"docs":{},"'":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"'":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"t":{"docs":{},"o":{"docs":{},"'":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}},"(":{"0":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0020042311546598374}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}},"1":{"0":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"9":{"6":{"9":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"docs":{}},"docs":{}},"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}},")":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"2":{"0":{"0":{"1":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"docs":{}},"docs":{}},"docs":{},")":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}},"3":{"2":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}},"docs":{}},"8":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"docs":{},">":{"docs":{},"=":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00808080808080808},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},"@":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"e":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"i":{"docs":{},"m":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}}},"y":{"docs":{},"u":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}}},"z":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"d":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}}}}},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"m":{"docs":{},"d":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"?":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"p":{"docs":{},"i":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"'":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},":":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0046875}}}},"c":{"docs":{},"c":{"docs":{},")":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}},"i":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"t":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"v":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}}},"p":{"docs":{},"v":{"4":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},"6":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},"docs":{}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.003125}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"d":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"g":{"docs":{},":":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}},".":{"docs":{},"g":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"x":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}},"v":{"docs":{},",":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}},"t":{"docs":{},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"w":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"i":{"docs":{},"n":{"3":{"2":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404}}},"docs":{}},"docs":{}},"t":{"docs":{},"h":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404}}}}}},".":{"docs":{},"d":{"docs":{},"l":{"docs":{},"l":{"docs":{},"/":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},")":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"/":{"docs":{},".":{"docs":{},"a":{"docs":{},")":{"docs":{},".":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404}}}}}}}}}}},"m":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},",":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}},"i":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}},"n":{"docs":{},"o":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},")":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.01129305477131564},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"a":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}},"o":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},":":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.009259259259259259}}}}}}}}}}},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}}}},"e":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},"m":{"docs":{},"a":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}},"x":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},",":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"a":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"m":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"n":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}},"f":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}},"l":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"o":{"docs":{},"c":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}},"s":{"docs":{},"o":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}}},"l":{"docs":{},"e":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}},"o":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}},"h":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"/":{"1":{"docs":{},".":{"0":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},"docs":{}}},"docs":{}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"r":{"docs":{},"f":{"docs":{},"c":{"5":{"3":{"8":{"9":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}}}},"docs":{}},"docs":{}},"7":{"6":{"6":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"/":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868}},"/":{"docs":{"./":{"ref":"./","tf":0.01875},"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.0015595757953836558}},"/":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.0008907694020710388},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"r":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"/":{"docs":{},"p":{"docs":{},"k":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{},".":{"docs":{},"p":{"docs":{},"c":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"/":{"docs":{},"l":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},".":{"docs":{},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"v":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"'":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.006129032258064516},"api-base.html":{"ref":"api-base.html","tf":0.003062019819619196},"api-http.html":{"ref":"api-http.html","tf":0.00322108345534407},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"api-net.html":{"ref":"api-net.html","tf":0.0033195020746887966},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0024580090126997134},"api-sked.html":{"ref":"api-sked.html","tf":0.008724100327153763},"api-socketio.html":{"ref":"api-socketio.html","tf":0.006514657980456026},"api-stun.html":{"ref":"api-stun.html","tf":0.006211180124223602},"api-symple.html":{"ref":"api-symple.html","tf":0.005604203152364273},"api-turn.html":{"ref":"api-turn.html","tf":0.0031191515907673115},"api-util.html":{"ref":"api-util.html","tf":0.009883198562443846},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00477326968973747}},")":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"=":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},">":{"docs":{"./":{"ref":"./","tf":0.003125},"installation-windows.html":{"ref":"installation-windows.html","tf":0.015}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"d":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},">":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0007237501391827191},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.0016597510373443983},"api-pacm.html":{"ref":"api-pacm.html","tf":0.004916018025399427},"api-stun.html":{"ref":"api-stun.html","tf":0.002258610954263128},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}}}},"=":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"o":{"docs":{},"v":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"e":{"docs":{},".":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},")":{"docs":{},";":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}}}}},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"r":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"s":{"docs":{},".":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"p":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0041753653444676405},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0028021015761821367}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}}}}}}}},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}},"v":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.002495321272613849},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},".":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}}}},"k":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.017915309446254073},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}}}},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"d":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"d":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.01},"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-http.html":{"ref":"api-http.html","tf":0.0013177159590043923},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-util.html":{"ref":"api-util.html","tf":0.0026954177897574125},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}},"i":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}},"/":{"docs":{},"c":{"docs":{},"r":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.009128630705394191},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013},"api-turn.html":{"ref":"api-turn.html","tf":0.0028072364316905803},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0016597510373443983}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.008298755186721992},"api-stun.html":{"ref":"api-stun.html","tf":0.002258610954263128},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934}}},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0016597510373443983},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}}}}}}}},"`":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},";":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}}},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.002904564315352697},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}},",":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}},"docs":{}},"docs":{}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"x":{"5":{"0":{"9":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868}}}}}}}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"g":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"x":{"5":{"0":{"9":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"*":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"*":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}},"i":{"docs":{},"s":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"z":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"e":{"docs":{},"'":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}},"g":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}},"s":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}},"r":{"docs":{},"e":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}}}},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"i":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-turn.html":{"ref":"api-turn.html","tf":0.012164691203992514}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0015625}}},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},"'":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0028072364316905803}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.002495321272613849}}}},"w":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}},"d":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"e":{"docs":{},"g":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}}}}},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"e":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"i":{"docs":{},"a":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0048712595685455815},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"v":{"docs":{},"e":{"docs":{},"\"":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},":":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"installation.html":{"ref":"installation.html","tf":0.006060606060606061}}}}}},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0037105751391465678}}}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},")":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0013361541031065582},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"LICENSE.html":{"ref":"LICENSE.html","tf":0.004174397031539889}},"c":{"docs":{"./":{"ref":"./","tf":0.003125},"installation.html":{"ref":"installation.html","tf":0.00808080808080808},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.004174397031539889}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003125}}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},".":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"/":{"docs":{},"o":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}},"'":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}},"y":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}},"i":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}},".":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"api-pluga.html":{"ref":"api-pluga.html","tf":0.02857142857142857}}}}}}},"t":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.013888888888888888}}}},"r":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}},"v":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0024580090126997134}},"e":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}},"o":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":10.007042253521126}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0046875},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"g":{"2":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},",":{"docs":{},"p":{"3":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159}}},"docs":{}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},"3":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},",":{"docs":{},"p":{"4":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}},"docs":{}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},"4":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}},"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"p":{"2":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0011134617525887986}}},"docs":{}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"c":{"docs":{},",":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}},"v":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}}}},"s":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"e":{"docs":{},":":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.0012804810154771183},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"a":{"docs":{},"p":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}}}}}}},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0036870135190495697}},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.001503173365994878},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-sked.html":{"ref":"api-sked.html","tf":0.003271537622682661},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"u":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"k":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.00625},"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"k":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"n":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-stun.html":{"ref":"api-stun.html","tf":0.01693958215697346}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}},"docs":{}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.001431980906921241}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}}}}}}}},";":{"docs":{"./":{"ref":"./","tf":0.0015625}}},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}},"docs":{}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.001431980906921241}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.001431980906921241}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.005417276720351391},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013},"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.002342606149341142}}}}}}},"o":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}},"'":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}},"o":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"v":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-av.html":{"ref":"api-av.html","tf":10.000322580645161}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"a":{"docs":{},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0015625}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"m":{"docs":{},"p":{"4":{"docs":{},"\"":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"docs":{}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},".":{"2":{"6":{"4":{"docs":{},"\"":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"examples.html":{"ref":"examples.html","tf":0.013245033112582781},"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0028676771814829987}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.008591885441527447}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},"y":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"m":{"docs":{},"f":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},"/":{"docs":{},"p":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}},")":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"6":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},"docs":{}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"b":{"docs":{"./":{"ref":"./","tf":0.0015625}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},")":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}},"s":{"docs":{},"e":{"6":{"4":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.0078125},"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444},"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742},"api-base.html":{"ref":"api-base.html","tf":10.001503173365995},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0074211502782931356}},")":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}},"d":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.013289036544850499}}}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}},"i":{"docs":{},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"d":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.002183406113537118}},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"e":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.0014522821576763486},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"e":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-linux.html":{"ref":"installation-linux.html","tf":0.009259259259259259},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"s":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}}}}}}},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}},"t":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-stun.html":{"ref":"api-stun.html","tf":0.0033879164313946925}},")":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"e":{"docs":{},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.0033879164313946925}}},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}},"o":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}},"l":{"docs":{},"a":{"docs":{},"z":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"c":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0041753653444676405},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}},"x":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}},"o":{"docs":{},"l":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.056338028169014086},"api-av.html":{"ref":"api-av.html","tf":0.04129032258064516},"api-base.html":{"ref":"api-base.html","tf":0.018316445830085737},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0041753653444676405},"api-http.html":{"ref":"api-http.html","tf":0.014494875549048316},"api-json.html":{"ref":"api-json.html","tf":0.026578073089700997},"api-net.html":{"ref":"api-net.html","tf":0.011618257261410789},"api-pacm.html":{"ref":"api-pacm.html","tf":0.02294141745186399},"api-sked.html":{"ref":"api-sked.html","tf":0.013086150490730643},"api-socketio.html":{"ref":"api-socketio.html","tf":0.014657980456026058},"api-stun.html":{"ref":"api-stun.html","tf":0.00564652738565782},"api-symple.html":{"ref":"api-symple.html","tf":0.018213660245183887},"api-turn.html":{"ref":"api-turn.html","tf":0.015595757953836557},"api-util.html":{"ref":"api-util.html","tf":0.028751123090745734},"api-uv.html":{"ref":"api-uv.html","tf":0.020202020202020204},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.016229116945107397}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},":":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}}}}}}},"d":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-stun.html":{"ref":"api-stun.html","tf":0.01129305477131564},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.003125}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"n":{"docs":{},"g":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003125},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}},"w":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391}},",":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},".":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391}}},"s":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"e":{"docs":{},"w":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.034482758620689655}}},"a":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.009375},"getting-started.html":{"ref":"getting-started.html","tf":0.020833333333333332},"installation.html":{"ref":"installation.html","tf":0.04242424242424243},"installation-linux.html":{"ref":"installation-linux.html","tf":0.023148148148148147},"installation-osx.html":{"ref":"installation-osx.html","tf":0.04597701149425287},"installation-windows.html":{"ref":"installation-windows.html","tf":0.025},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"_":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}},"s":{"docs":{},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}}}}}}}},"l":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}}}},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}},"s":{"docs":{},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}},"s":{"docs":{},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"s":{"docs":{},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}},"s":{"docs":{},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"examples.html":{"ref":"examples.html","tf":0.006622516556291391}},"i":{"docs":{},"n":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}},"a":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}},"g":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}},"f":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-stun.html":{"ref":"api-stun.html","tf":0.002258610954263128}}},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}},"docs":{}},"docs":{}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0022580645161290325},"api-base.html":{"ref":"api-base.html","tf":0.0017258657165126379},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0048712595685455815},"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069},"api-net.html":{"ref":"api-net.html","tf":0.0033195020746887966},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0024429967426710096},"api-stun.html":{"ref":"api-stun.html","tf":0.011857707509881422},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},";":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0014641288433382138},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-turn.html":{"ref":"api-turn.html","tf":0.0037429819089207735}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0016597510373443983}}}}}}}}}}}}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},",":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}},"c":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000835096314441599},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013},"api-stun.html":{"ref":"api-stun.html","tf":0.00282326369282891},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"s":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.002258610954263128}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}},"c":{"docs":{"./":{"ref":"./","tf":0.003125},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"+":{"docs":{},"+":{"1":{"1":{"docs":{"./":{"ref":"./","tf":0.003125},"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.0046875},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}},"a":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}},"l":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742},"api-base.html":{"ref":"api-base.html","tf":0.0036187506959135954},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0020876826722338203},"api-http.html":{"ref":"api-http.html","tf":0.0013177159590043923},"api-net.html":{"ref":"api-net.html","tf":0.004356846473029046},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567},"api-sked.html":{"ref":"api-sked.html","tf":0.0054525627044711015},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0024429967426710096},"api-stun.html":{"ref":"api-stun.html","tf":0.0016939582156973462},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934},"api-util.html":{"ref":"api-util.html","tf":0.004492362982929021},"api-uv.html":{"ref":"api-uv.html","tf":0.00808080808080808},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.002863961813842482},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-net.html":{"ref":"api-net.html","tf":0.0018672199170124482},"api-turn.html":{"ref":"api-turn.html","tf":0.0028072364316905803},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}},",":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}},";":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-uv.html":{"ref":"api-uv.html","tf":0.010101010101010102}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"o":{"docs":{},"c":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}}}}}}}},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0078125},"installation.html":{"ref":"installation.html","tf":0.006060606060606061},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-net.html":{"ref":"api-net.html","tf":0.0035269709543568465},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567}},"e":{"docs":{},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0024580090126997134}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493}}}}}}}},"v":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0016129032258064516}}}}}}},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0008907694020710388},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"*":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}},".":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"a":{"docs":{},"g":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"e":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"s":{"docs":{},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"s":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.0006124039639238393},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00463821892393321}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},"s":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"s":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}},".":{"docs":{},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"]":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"]":{"docs":{},".":{"docs":{},"[":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"]":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}},"r":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0025806451612903226},"api-base.html":{"ref":"api-base.html","tf":0.005845674201091193},"api-crypto.html":{"ref":"api-crypto.html","tf":0.009742519137091163},"api-http.html":{"ref":"api-http.html","tf":0.003513909224011713},"api-net.html":{"ref":"api-net.html","tf":0.0053941908713692945},"api-pluga.html":{"ref":"api-pluga.html","tf":0.11428571428571428},"api-socketio.html":{"ref":"api-socketio.html","tf":0.006514657980456026},"api-stun.html":{"ref":"api-stun.html","tf":0.0033879164313946925},"api-symple.html":{"ref":"api-symple.html","tf":0.0028021015761821367},"api-turn.html":{"ref":"api-turn.html","tf":0.0037429819089207735},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},"s":{"docs":{},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}},"e":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-av.html":{"ref":"api-av.html","tf":0.0016129032258064516},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},",":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}},"a":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}},"e":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"o":{"docs":{},"s":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"s":{"docs":{},"e":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-av.html":{"ref":"api-av.html","tf":0.01032258064516129},"api-base.html":{"ref":"api-base.html","tf":0.010076828860928626},"api-crypto.html":{"ref":"api-crypto.html","tf":0.003479471120389701},"api-http.html":{"ref":"api-http.html","tf":0.00951683748169839},"api-json.html":{"ref":"api-json.html","tf":0.009966777408637873},"api-net.html":{"ref":"api-net.html","tf":0.007676348547717842},"api-pacm.html":{"ref":"api-pacm.html","tf":0.004096681687832855},"api-sked.html":{"ref":"api-sked.html","tf":0.008724100327153763},"api-socketio.html":{"ref":"api-socketio.html","tf":0.007328990228013029},"api-stun.html":{"ref":"api-stun.html","tf":0.014116318464144552},"api-symple.html":{"ref":"api-symple.html","tf":0.008756567425569177},"api-turn.html":{"ref":"api-turn.html","tf":0.006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.017969451931716084},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.008591885441527447}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-pluga.html":{"ref":"api-pluga.html","tf":0.02857142857142857}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742},"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.004885993485342019},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}},"s":{"docs":{},"c":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}}}}}},"l":{"docs":{},"v":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}}}}},"p":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"x":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}},"e":{"6":{"4":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}}}}}},"docs":{}},"docs":{}}}},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}},"t":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}},"x":{"5":{"0":{"9":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"v":{"4":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}}},"docs":{}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}},"m":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"w":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"a":{"docs":{},"l":{"2":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"3":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"4":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}}}}}}}}}}}}}}},"docs":{}},"3":{"2":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}}}}}}}}}}},"docs":{}},"6":{"4":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}}}}}}}}}}},"docs":{}},"8":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}}}}}}}}}}},"docs":{}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}}}}}}}},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}}}}}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}}},"e":{"docs":{},"v":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"e":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}},"p":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"z":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}},"f":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}},"w":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},")":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}},"i":{"docs":{},"m":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"s":{"docs":{},";":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625}},"u":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"r":{"docs":{"./":{"ref":"./","tf":0.0015625},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0036870135190495697},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0046875},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.003074670571010249},"api-net.html":{"ref":"api-net.html","tf":0.004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.005700325732899023},"api-symple.html":{"ref":"api-symple.html","tf":0.0024518388791593695},"api-turn.html":{"ref":"api-turn.html","tf":0.007174048658764816}},"s":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},".":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0031191515907673115}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}},"'":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"]":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.009259259259259259},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"installation-windows.html":{"ref":"installation-windows.html","tf":0.01}},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742},"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.012422360248447204},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}},"s":{"docs":{},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006124039639238393},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.0031120331950207467},"api-uv.html":{"ref":"api-uv.html","tf":0.006060606060606061},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"(":{"docs":{},")":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521},"api-base.html":{"ref":"api-base.html","tf":0.0009464424897004788},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.0016597510373443983},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-uv.html":{"ref":"api-uv.html","tf":0.00808080808080808}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-uv.html":{"ref":"api-uv.html","tf":0.006060606060606061}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0016597510373443983},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}},"u":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"e":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0014522821576763486},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}},"c":{"docs":{},"k":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"_":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}},"s":{"docs":{},"s":{"docs":{},",":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0046875},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013},"LICENSE.html":{"ref":"LICENSE.html","tf":0.007884972170686457}},".":{"docs":{"./":{"ref":"./","tf":0.0015625},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}},"c":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742}}}}}}}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.002903225806451613}}}},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}},"”":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},"o":{"docs":{},"n":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.003125},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0037105751391465678}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003125}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}},",":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0046875},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation.html":{"ref":"installation.html","tf":0.006060606060606061},"installation-linux.html":{"ref":"installation-linux.html","tf":0.018518518518518517},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"examples.html":{"ref":"examples.html","tf":0.013245033112582781},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}},",":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}},"s":{"docs":{},".":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0020483408439164277},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0027829313543599257}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}},"s":{"docs":{},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}},"x":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"c":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"o":{"docs":{},"n":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}},"u":{"docs":{},"t":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"e":{"docs":{},"l":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.004392386530014641},"api-net.html":{"ref":"api-net.html","tf":0.0053941908713692945},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.0056144728633811605},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"examples.html":{"ref":"examples.html","tf":0.013245033112582781},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0014641288433382138}}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}},"w":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0026354319180087846},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0028072364316905803}}}}}},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0014641288433382138},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}},",":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.002863961813842482}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}},"p":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521},"api-av.html":{"ref":"api-av.html","tf":0.016774193548387096},"api-base.html":{"ref":"api-base.html","tf":0.03590914152098875},"api-crypto.html":{"ref":"api-crypto.html","tf":0.037578288100208766},"api-http.html":{"ref":"api-http.html","tf":0.02957540263543192},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-net.html":{"ref":"api-net.html","tf":0.03257261410788382},"api-pacm.html":{"ref":"api-pacm.html","tf":0.03850880786562884},"api-pluga.html":{"ref":"api-pluga.html","tf":0.11428571428571428},"api-sked.html":{"ref":"api-sked.html","tf":0.010905125408942203},"api-socketio.html":{"ref":"api-socketio.html","tf":0.04315960912052117},"api-stun.html":{"ref":"api-stun.html","tf":0.062111801242236024},"api-symple.html":{"ref":"api-symple.html","tf":0.03677758318739054},"api-turn.html":{"ref":"api-turn.html","tf":0.019962570180910792},"api-util.html":{"ref":"api-util.html","tf":0.02336028751123091},"api-uv.html":{"ref":"api-uv.html","tf":0.03838383838383838},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.043914081145584725}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"l":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"&":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0041753653444676405}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}},"u":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006124039639238393}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}},";":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}}},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"x":{"5":{"0":{"9":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}},"q":{"docs":{},"u":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-http.html":{"ref":"api-http.html","tf":0.0017569546120058566},"api-net.html":{"ref":"api-net.html","tf":0.0014522821576763486},"api-stun.html":{"ref":"api-stun.html","tf":0.0016939582156973462},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703},"LICENSE.html":{"ref":"LICENSE.html","tf":0.004174397031539889}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"s":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003125},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.009771986970684038}}}}}}}},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}}}},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521},"api-http.html":{"ref":"api-http.html","tf":0.002342606149341142},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0014641288433382138}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0011691348402182386},"api-net.html":{"ref":"api-net.html","tf":0.007053941908713693},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-net.html":{"ref":"api-net.html","tf":0.002904564315352697}}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}},"s":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000835096314441599}}}},"n":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.013888888888888888},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"u":{"docs":{},"r":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404},"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.01},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}}}}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.009259259259259259}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.004174397031539889}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},":":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"r":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},"d":{"docs":{},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}},"r":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"r":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}},"p":{"docs":{},"i":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.000835096314441599},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"LICENSE.html":{"ref":"LICENSE.html","tf":0.013450834879406308}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}},"s":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"y":{"docs":{},"/":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.002258610954263128}}}}}}}}}}}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00510204081632653}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0036603221083455345}},"e":{"docs":{},"'":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"n":{"docs":{},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0010248901903367497}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.004685212298682284}}},"s":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"s":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0027829313543599257}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0125},"api-base.html":{"ref":"api-base.html","tf":0.002449615855695357},"api-crypto.html":{"ref":"api-crypto.html","tf":0.006263048016701462},"api-http.html":{"ref":"api-http.html","tf":0.008052708638360176},"api-net.html":{"ref":"api-net.html","tf":0.0037344398340248964},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0020483408439164277},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.003341288782816229},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.013289036544850499}}},"d":{"docs":{},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}},".":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.001431980906921241}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},";":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}}},"o":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0046875},"installation.html":{"ref":"installation.html","tf":0.00404040404040404},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-crypto.html":{"ref":"api-crypto.html","tf":10.000695894224078}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}},"_":{"docs":{},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.017361111111111112},"installation.html":{"ref":"installation.html","tf":0.026262626262626262},"installation-linux.html":{"ref":"installation-linux.html","tf":0.013888888888888888},"installation-osx.html":{"ref":"installation-osx.html","tf":0.034482758620689655},"installation-windows.html":{"ref":"installation-windows.html","tf":0.025}},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"=":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"x":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation.html":{"ref":"installation.html","tf":0.00202020202020202}},":":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}},",":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}},":":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}}}}}},"u":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"examples.html":{"ref":"examples.html","tf":0.006622516556291391}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.0022269235051775972},"api-http.html":{"ref":"api-http.html","tf":0.0017569546120058566},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0020483408439164277},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-socketio.html":{"ref":"api-socketio.html","tf":0.004071661237785016},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"e":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}},"d":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.023148148148148147},"installation-osx.html":{"ref":"installation-osx.html","tf":0.034482758620689655}}},":":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{},"\\":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"\\":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0027829313543599257}}}}},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0041753653444676405}}},"i":{"docs":{},"f":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.020180932498260265},"api-net.html":{"ref":"api-net.html","tf":0.007261410788381743}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"'":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.009742519137091163},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493}}},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"e":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493}}}}}}}}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.009742519137091163},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0041753653444676405}},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}}},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.012526096033402923}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}},"s":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}},"r":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"s":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"d":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"a":{"docs":{},"g":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"t":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.003125},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-av.html":{"ref":"api-av.html","tf":0.0016129032258064516},"api-base.html":{"ref":"api-base.html","tf":0.002059904242289277},"api-crypto.html":{"ref":"api-crypto.html","tf":0.003479471120389701},"api-http.html":{"ref":"api-http.html","tf":0.006149341142020498},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-net.html":{"ref":"api-net.html","tf":0.0031120331950207467},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-symple.html":{"ref":"api-symple.html","tf":0.0028021015761821367},"api-turn.html":{"ref":"api-turn.html","tf":0.0015595757953836558},"api-util.html":{"ref":"api-util.html","tf":0.0026954177897574125},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0027829313543599257}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742},"api-base.html":{"ref":"api-base.html","tf":0.0013361541031065582},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608},"api-http.html":{"ref":"api-http.html","tf":0.002342606149341142},"api-net.html":{"ref":"api-net.html","tf":0.004979253112033195},"api-turn.html":{"ref":"api-turn.html","tf":0.002495321272613849}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-symple.html":{"ref":"api-symple.html","tf":0.0028021015761821367}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-symple.html":{"ref":"api-symple.html","tf":0.0028021015761821367},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-crypto.html":{"ref":"api-crypto.html","tf":0.003479471120389701},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}},"\"":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},":":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0014475002783654381},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}},"/":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"e":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"/":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.002449615855695357},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}},"y":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0012804810154771183},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966}}},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"o":{"docs":{},"f":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},"y":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"i":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}}}},"e":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003125},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.0011134617525887986},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0031120331950207467},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},".":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-sked.html":{"ref":"api-sked.html","tf":0.003271537622682661}}},"_":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.01616161616161616},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"e":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0008907694020710388}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}}}}}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},")":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.0009464424897004788},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934}}},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"_":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}},"i":{"docs":{},"m":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"i":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}}}},"m":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}}}},"r":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0015625}},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"p":{"docs":{},"t":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.02112676056338028},"api-av.html":{"ref":"api-av.html","tf":0.00935483870967742},"api-base.html":{"ref":"api-base.html","tf":0.00734884756708607},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0041753653444676405},"api-http.html":{"ref":"api-http.html","tf":0.005270863836017569},"api-json.html":{"ref":"api-json.html","tf":0.013289036544850499},"api-net.html":{"ref":"api-net.html","tf":0.004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.004916018025399427},"api-pluga.html":{"ref":"api-pluga.html","tf":0.04285714285714286},"api-sked.html":{"ref":"api-sked.html","tf":0.009814612868047983},"api-socketio.html":{"ref":"api-socketio.html","tf":0.006514657980456026},"api-stun.html":{"ref":"api-stun.html","tf":0.007905138339920948},"api-symple.html":{"ref":"api-symple.html","tf":0.0070052539404553416},"api-turn.html":{"ref":"api-turn.html","tf":0.006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.014375561545372867},"api-uv.html":{"ref":"api-uv.html","tf":0.00808080808080808},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00477326968973747}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}},".":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0013361541031065582},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608},"api-http.html":{"ref":"api-http.html","tf":0.0029282576866764276},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-net.html":{"ref":"api-net.html","tf":0.002074688796680498},"api-sked.html":{"ref":"api-sked.html","tf":0.003271537622682661},"api-turn.html":{"ref":"api-turn.html","tf":0.0015595757953836558},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-sked.html":{"ref":"api-sked.html","tf":0.0054525627044711015}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-sked.html":{"ref":"api-sked.html","tf":0.008724100327153763}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.032407407407407406},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0078125},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"i":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.00625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"examples.html":{"ref":"examples.html","tf":0.019867549668874173},"api-av.html":{"ref":"api-av.html","tf":0.002903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0015625}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391}}}}}}}},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.005161290322580645},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}},"s":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.004516129032258065}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}},"s":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.005161290322580645}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-linux.html":{"ref":"installation-linux.html","tf":0.018518518518518517},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}},".":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795}},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.003479471120389701}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0020876826722338203}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493}}},"d":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},"s":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},".":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}},"l":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795}}}},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"a":{"docs":{},"l":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"LICENSE.html":{"ref":"LICENSE.html","tf":0.006957328385899814}},"e":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"s":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}},"e":{"docs":{},"t":{"docs":{},"z":{"docs":{},"d":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}},"o":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}},"c":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}},":":{"docs":{"./":{"ref":"./","tf":0.0015625}}},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"n":{"docs":{},"e":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"!":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}},",":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}},"'":{"docs":{},"t":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}},"w":{"docs":{},"n":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.04},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0020483408439164277}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0032258064516129032},"api-base.html":{"ref":"api-base.html","tf":0.0010577886649593587},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-util.html":{"ref":"api-util.html","tf":0.005390835579514825}},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567}}}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.003125},"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.010416666666666666},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0032773453502662844}}},"y":{"docs":{},".":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0020483408439164277}}}}}},"l":{"docs":{},"i":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},"y":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}},",":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006124039639238393}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00808080808080808},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}},"s":{"docs":{},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0016129032258064516},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}},"(":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0048712595685455815},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.021799628942486084}},"e":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"o":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0041753653444676405},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.005390835579514825}},"i":{"docs":{},"c":{"docs":{},".":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"=":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{"installation.html":{"ref":"installation.html","tf":0.006060606060606061}}}},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00808080808080808}}}}}}}}},"v":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00808080808080808}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.01616161616161616}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.012121212121212121}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.010101010101010102}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.010101010101010102}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.012121212121212121}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"m":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"a":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}}}},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00808080808080808}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404}}}}}}}},"y":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00808080808080808}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"=":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.010101010101010102}}}}}}}},"v":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.01616161616161616}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404}}}}}}}}}}}},"s":{"docs":{},"=":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{"installation.html":{"ref":"installation.html","tf":0.01616161616161616}}}},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"=":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.012121212121212121}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"s":{"docs":{},"=":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{"installation.html":{"ref":"installation.html","tf":0.01616161616161616}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"=":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.012121212121212121}}}}}}}}}}}}}}},"l":{"docs":{},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}},"p":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"=":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"installation.html":{"ref":"installation.html","tf":0.01818181818181818}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"f":{"docs":{},"f":{"docs":{},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.012121212121212121}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"v":{"docs":{},"=":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00808080808080808}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"=":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404}}}},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}}}}}}}}}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},"m":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"n":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}},"e":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}},"a":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0015625}},"i":{"docs":{"./":{"ref":"./","tf":0.0015625}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"i":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}},"c":{"docs":{},"h":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934},"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}}}},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"y":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}},"s":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0109375},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-av.html":{"ref":"api-av.html","tf":0.002903225806451613},"api-crypto.html":{"ref":"api-crypto.html","tf":0.006263048016701462},"api-http.html":{"ref":"api-http.html","tf":0.0026354319180087846}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742}}}}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.006263048016701462},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-crypto.html":{"ref":"api-crypto.html","tf":0.007654836464857342},"api-net.html":{"ref":"api-net.html","tf":0.0014522821576763486}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},",":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}}}}}}},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}},"u":{"docs":{},"m":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0015625},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00808080808080808},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"examples.html":{"ref":"examples.html","tf":0.013245033112582781},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.005727923627684964}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00954653937947494}}},",":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"e":{"docs":{},"c":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}},"g":{"docs":{},"c":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"s":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"i":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0027829313543599257}}},"t":{"docs":{},"i":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}}},"y":{"docs":{},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"t":{"docs":{"./":{"ref":"./","tf":0.003125},"api-base.html":{"ref":"api-base.html","tf":0.0013918271907359982},"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069},"api-net.html":{"ref":"api-net.html","tf":0.002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-socketio.html":{"ref":"api-socketio.html","tf":0.005700325732899023},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-uv.html":{"ref":"api-uv.html","tf":0.00808080808080808},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.009771986970684038}}}}}}}},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}},"r":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"t":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"p":{"docs":{},"_":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"t":{"docs":{},"x":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}}}}}}}}}}}},"m":{"docs":{},"d":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}},"_":{"docs":{},"c":{"docs":{},"t":{"docs":{},"x":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0046875},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"examples.html":{"ref":"examples.html","tf":10.013245033112582},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625},"LICENSE.html":{"ref":"LICENSE.html","tf":0.002319109461966605}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}},"s":{"docs":{},",":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}},":":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},":":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0024580090126997134},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006124039639238393},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0015625}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"d":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"r":{"docs":{},"n":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.0015595757953836558}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},"p":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}},"i":{"docs":{},"p":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},"|":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}},"r":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.003125},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"c":{"docs":{},"t":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.01},"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-crypto.html":{"ref":"api-crypto.html","tf":0.003479471120389701},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"h":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00463821892393321}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"s":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"r":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}},"c":{"docs":{},"e":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"p":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000835096314441599},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0031120331950207467},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0036870135190495697},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"u":{"docs":{},"s":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0041753653444676405},"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"n":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"i":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-sked.html":{"ref":"api-sked.html","tf":0.003271537622682661},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-sked.html":{"ref":"api-sked.html","tf":0.006543075245365322},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}},"i":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167}}},"y":{"docs":{},";":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"l":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"o":{"docs":{},"s":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{"examples.html":{"ref":"examples.html","tf":0.033112582781456956}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0020042311546598374},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"c":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"v":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"t":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},"y":{"2":{"docs":{},",":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}}}}}}}},"3":{"docs":{},",":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}}}}}}}},"4":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}}}},"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006124039639238393}},";":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}},".":{"docs":{},"g":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0008907694020710388},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.006016597510373444},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0024429967426710096},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-uv.html":{"ref":"api-uv.html","tf":0.014141414141414142}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-uv.html":{"ref":"api-uv.html","tf":0.006060606060606061}}},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"n":{"docs":{},"o":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},")":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.012121212121212121}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.002863961813842482}}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}},"s":{"docs":{},"c":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}},"o":{"docs":{},"d":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}},"docs":{}}}}}}}}}}},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}},")":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"f":{"docs":{},"a":{"docs":{},"r":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003125},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"l":{"docs":{},"v":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}}}},"i":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}},"l":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}},"u":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},".":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}},"t":{"docs":{},"h":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}},"s":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0020483408439164277},"api-sked.html":{"ref":"api-sked.html","tf":0.0054525627044711015},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"e":{"docs":{},")":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}},"c":{"docs":{},"i":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0027829313543599257}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"y":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"o":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"r":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}}},"y":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}},",":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.00625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"e":{"docs":{},"'":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},")":{"docs":{"./":{"ref":"./","tf":0.003125}}}}}}}},"e":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"l":{"docs":{"./":{"ref":"./","tf":0.0015625}}},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"w":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}},"b":{"docs":{},"r":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"d":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}},"f":{"docs":{},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.003125},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-linux.html":{"ref":"installation-linux.html","tf":0.05092592592592592},"installation-windows.html":{"ref":"installation-windows.html","tf":0.01},"examples.html":{"ref":"examples.html","tf":0.013245033112582781}},",":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}},".":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}},"i":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0015625}},")":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"l":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0015625},"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-windows.html":{"ref":"installation-windows.html","tf":0.025},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-pacm.html":{"ref":"api-pacm.html","tf":0.006964358869315854},"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}},"(":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069}}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},")":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.028169014084507043},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-pluga.html":{"ref":"api-pluga.html","tf":0.02857142857142857}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"x":{"docs":{"./":{"ref":"./","tf":0.00625}}},"n":{"docs":{},"d":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}}},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},"(":{"docs":{},"$":{"docs":{},"{":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"}":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"a":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993}}}}}}},"d":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.003479471120389701}}},"o":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"f":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"f":{"docs":{},"o":{"docs":{},"x":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}},"f":{"docs":{},"o":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"t":{"docs":{},"h":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-symple.html":{"ref":"api-symple.html","tf":0.0024518388791593695}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571}}},"'":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"s":{"docs":{},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.003125},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-http.html":{"ref":"api-http.html","tf":0.0013177159590043923},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0013361541031065582},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159},"api-http.html":{"ref":"api-http.html","tf":0.0014641288433382138},"api-net.html":{"ref":"api-net.html","tf":0.0053941908713692945},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}},",":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}},".":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}},"s":{"docs":{},"e":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}},"h":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},"w":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"t":{"docs":{},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}},"p":{"docs":{},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}},"v":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"b":{"docs":{},"i":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"b":{"docs":{},"i":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0015625}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}},"c":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"y":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.004099560761346999},"api-symple.html":{"ref":"api-symple.html","tf":0.005604203152364273},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0027829313543599257}},"a":{"docs":{},"t":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-av.html":{"ref":"api-av.html","tf":0.004838709677419355},"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0016129032258064516},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"'":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069},"api-symple.html":{"ref":"api-symple.html","tf":0.0017513134851138354}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}},"s":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}},",":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}},")":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"b":{"docs":{},"i":{"docs":{},"d":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"s":{"docs":{},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"examples.html":{"ref":"examples.html","tf":0.006622516556291391}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"a":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},";":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"c":{"docs":{},"c":{"docs":{},"s":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.014842300556586271}},"d":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"a":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"m":{"docs":{},"e":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742},"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069},"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},";":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}},",":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},".":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"n":{"docs":{},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},"m":{"docs":{},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}}}},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0015625},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"i":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.002863961813842482},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00463821892393321}},",":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},":":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0020876826722338203},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"p":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521},"api-av.html":{"ref":"api-av.html","tf":0.002903225806451613}},"s":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"p":{"docs":{"./":{"ref":"./","tf":0.0015625}}},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}}}},"i":{"docs":{},"n":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"v":{"docs":{},"e":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"i":{"docs":{},"t":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.013888888888888888},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"installation-windows.html":{"ref":"installation-windows.html","tf":0.025}},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{"./":{"ref":"./","tf":0.0015625}},".":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}},"@":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},":":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{},"/":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"LICENSE.html":{"ref":"LICENSE.html","tf":0.002319109461966605}},"n":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521},"api-av.html":{"ref":"api-av.html","tf":0.0022580645161290325},"api-base.html":{"ref":"api-base.html","tf":0.006792116690791671},"api-crypto.html":{"ref":"api-crypto.html","tf":0.014613778705636743},"api-http.html":{"ref":"api-http.html","tf":0.012152269399707174},"api-json.html":{"ref":"api-json.html","tf":0.009966777408637873},"api-net.html":{"ref":"api-net.html","tf":0.005809128630705394},"api-pacm.html":{"ref":"api-pacm.html","tf":0.006554690700532569},"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013},"api-stun.html":{"ref":"api-stun.html","tf":0.011857707509881422},"api-symple.html":{"ref":"api-symple.html","tf":0.0070052539404553416},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}},"o":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0015625},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"u":{"docs":{},"p":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}},"e":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}},"t":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"u":{"docs":{},"i":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.01}},"d":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-linux.html":{"ref":"installation-linux.html","tf":5.0092592592592595},"installation-osx.html":{"ref":"installation-osx.html","tf":3.3448275862068964},"installation-windows.html":{"ref":"installation-windows.html","tf":5},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625}}},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"c":{"docs":{},"c":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}},")":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}},":":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}},"e":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":5.003472222222222},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0011134617525887986}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742}}}}}}},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0025806451612903226}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},">":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0025806451612903226}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},">":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.0033879164313946925}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},">":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{},"e":{"docs":{},">":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},">":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"x":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},">":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0025806451612903226}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},">":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}},"v":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"d":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}},"x":{"docs":{},"y":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"c":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"api-pluga.html":{"ref":"api-pluga.html","tf":0.02857142857142857}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"1":{"6":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"2":{"4":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"3":{"2":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"6":{"4":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"8":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}}}}}}}}}}}},"docs":{},"r":{"docs":{},"i":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"installation-windows.html":{"ref":"installation-windows.html","tf":0.03},"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0041753653444676405},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"LICENSE.html":{"ref":"LICENSE.html","tf":0.01020408163265306}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}},"l":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}},"n":{"docs":{},"u":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0055658627087198514}},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"x":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"h":{"docs":{},".":{"2":{"6":{"4":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"docs":{}},"docs":{}},"docs":{}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}},"e":{"docs":{},"r":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.013888888888888888},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.005417276720351391},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0021961932650073207}}}}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"p":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"v":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}},"r":{"docs":{},"e":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-windows.html":{"ref":"installation-windows.html","tf":0.01},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},",":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}}},"i":{"docs":{},"n":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}},",":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"s":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}},"d":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"x":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0015625}},"l":{"docs":{},"i":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}},"c":{"docs":{},"h":{"docs":{},".":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}},"n":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0015625}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}}}}}}}},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"l":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"e":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"u":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0014475002783654381}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.0024896265560165973},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}},",":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}}}},"docs":{}},"docs":{}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"'":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"s":{"docs":{},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}},"w":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.002319109461966605}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.003125},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"examples.html":{"ref":"examples.html","tf":0.019867549668874173},"api-http.html":{"ref":"api-http.html","tf":10.013177159590043},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"m":{"docs":{},"/":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"w":{"docs":{},"i":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"w":{"docs":{},"i":{"docs":{},"k":{"docs":{},"i":{"docs":{},"/":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"_":{"8":{"6":{"0":{"1":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"j":{"docs":{},"u":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"s":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"~":{"docs":{},"p":{"docs":{},"b":{"docs":{},"a":{"docs":{},"u":{"docs":{},"m":{"docs":{},"/":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"0":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"docs":{}}}}},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"w":{"3":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"r":{"docs":{},"f":{"docs":{},"c":{"2":{"6":{"1":{"6":{"docs":{},"/":{"docs":{},"r":{"docs":{},"f":{"docs":{},"c":{"2":{"6":{"1":{"6":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.0015625}},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}},".":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}}},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}},",":{"docs":{"examples.html":{"ref":"examples.html","tf":0.013245033112582781}}},"/":{"1":{"docs":{},".":{"0":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},":":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"1":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}},")":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},":":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"docs":{},"x":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}},"docs":{}},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"n":{"docs":{},"o":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}},"m":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}},"y":{"docs":{},"u":{"docs":{},"n":{"docs":{},"u":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}},"n":{"docs":{},"d":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006124039639238393},"api-net.html":{"ref":"api-net.html","tf":0.0035269709543568465},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-uv.html":{"ref":"api-uv.html","tf":0.01818181818181818},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{},")":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}}}}}}}}}},"u":{"docs":{},"v":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-uv.html":{"ref":"api-uv.html","tf":0.020202020202020204}}},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.002495321272613849}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}}}}},"d":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"k":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249}}}}}}}},"i":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"k":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"h":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"r":{"docs":{},"o":{"docs":{},"x":{"docs":{},"y":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}},"r":{"docs":{},"d":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}},"i":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.009375}},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.00625},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.0013361541031065582},"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"api-net.html":{"ref":"api-net.html","tf":0.0014522821576763486},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-stun.html":{"ref":"api-stun.html","tf":0.010163749294184076},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934},"api-util.html":{"ref":"api-util.html","tf":0.0026954177897574125},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.001431980906921241},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0038186157517899762}}},"s":{"docs":{},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}}},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}},"s":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0046875},"getting-started.html":{"ref":"getting-started.html","tf":0.034722222222222224},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},".":{"docs":{},".":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"\"":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"$":{"docs":{},"{":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"}":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"}":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"r":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"o":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"a":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}}}}}}},".":{"5":{"1":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"docs":{}},"docs":{}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}},"x":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-stun.html":{"ref":"api-stun.html","tf":0.007905138339920948},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.0033879164313946925}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}},"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"u":{"docs":{},"c":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.003341288782816229}}}}}},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},">":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}},"o":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.003125},"getting-started.html":{"ref":"getting-started.html","tf":0.017361111111111112},"installation.html":{"ref":"installation.html","tf":10.004040404040405},"installation-linux.html":{"ref":"installation-linux.html","tf":0.06018518518518518},"installation-osx.html":{"ref":"installation-osx.html","tf":0.06896551724137931},"installation-windows.html":{"ref":"installation-windows.html","tf":0.045},"api-pacm.html":{"ref":"api-pacm.html","tf":0.017206063088897994},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0024580090126997134}}},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"`":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567}},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0032773453502662844}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}},"r":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0032773453502662844}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.003125},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"e":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}}}}}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"i":{"docs":{},"d":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}},"s":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}},"docs":{}},"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.06873508353221958}}}}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{"api-av.html":{"ref":"api-av.html","tf":0.01096774193548387},"api-base.html":{"ref":"api-base.html","tf":0.010911925175370226},"api-crypto.html":{"ref":"api-crypto.html","tf":0.013917884481558803},"api-http.html":{"ref":"api-http.html","tf":0.00322108345534407},"api-net.html":{"ref":"api-net.html","tf":0.007468879668049793},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0032773453502662844},"api-pluga.html":{"ref":"api-pluga.html","tf":0.02857142857142857},"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881},"api-socketio.html":{"ref":"api-socketio.html","tf":0.019543973941368076},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.00840630472854641},"api-turn.html":{"ref":"api-turn.html","tf":0.004366812227074236},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0038186157517899762}},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.003125},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.0033879164313946925}}}}}},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"n":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.0006124039639238393},"api-http.html":{"ref":"api-http.html","tf":0.001903367496339678},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.0015595757953836558}},"e":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}},":":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"v":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}},"n":{"docs":{},"d":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"t":{"docs":{"./":{"ref":"./","tf":10}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},"o":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-crypto.html":{"ref":"api-crypto.html","tf":0.009046624913013222},"api-http.html":{"ref":"api-http.html","tf":0.0014641288433382138},"api-net.html":{"ref":"api-net.html","tf":0.0037344398340248964},"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742}}}}}}}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0025806451612903226},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-uv.html":{"ref":"api-uv.html","tf":0.00808080808080808}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"api-pluga.html":{"ref":"api-pluga.html","tf":0.02857142857142857}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},",":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"r":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.003513909224011713},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},";":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.04967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.053112125598485695},"api-crypto.html":{"ref":"api-crypto.html","tf":0.006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.012591508052708639},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-net.html":{"ref":"api-net.html","tf":0.02033195020746888},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-sked.html":{"ref":"api-sked.html","tf":0.017448200654307525},"api-socketio.html":{"ref":"api-socketio.html","tf":0.006514657980456026},"api-stun.html":{"ref":"api-stun.html","tf":0.028232636928289104},"api-symple.html":{"ref":"api-symple.html","tf":0.011908931698774081},"api-turn.html":{"ref":"api-turn.html","tf":0.015595757953836557},"api-util.html":{"ref":"api-util.html","tf":0.05390835579514825},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00954653937947494},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}}}}}}}}},"n":{"docs":{},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"*":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"f":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"y":{"docs":{},"f":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"+":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"d":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},",":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"b":{"docs":{},"l":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}},"o":{"docs":{"./":{"ref":"./","tf":0.0046875},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}},"s":{"docs":{},")":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404}}}}},"t":{"docs":{},"'":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}},"e":{"docs":{},"r":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}}}}}},"m":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-util.html":{"ref":"api-util.html","tf":0.006289308176100629}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0011134617525887986},"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.005390835579514825}}}}}}},"a":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}},".":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"examples.html":{"ref":"examples.html","tf":0.013245033112582781},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"LICENSE.html":{"ref":"LICENSE.html","tf":0.004174397031539889}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},")":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0027829313543599257}}},";":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},".":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},"d":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.01032258064516129},"api-base.html":{"ref":"api-base.html","tf":0.0014475002783654381},"api-pacm.html":{"ref":"api-pacm.html","tf":0.004096681687832855},"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0035026269702276708}},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"(":{"docs":{},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167}},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"e":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"p":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0024896265560165973},"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"v":{"4":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}}}}}},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}},"6":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}},"docs":{}},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.002495321272613849}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}},"s":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}},"'":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}},"u":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"x":{"5":{"0":{"9":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"r":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.003479471120389701}},"'":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"o":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}},"p":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"m":{"docs":{},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}}}}}},"w":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},":":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"docs":{}},"docs":{}}}}},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}},"”":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},".":{"docs":{},"e":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}},"v":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0041753653444676405}},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}},"k":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"i":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0015625}}},"l":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"n":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"c":{"docs":{},"k":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}},"e":{"docs":{},"y":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0018372118917715176},"api-crypto.html":{"ref":"api-crypto.html","tf":0.009046624913013222},"api-json.html":{"ref":"api-json.html","tf":0.009966777408637873},"api-net.html":{"ref":"api-net.html","tf":0.0018672199170124482},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.002338269680436477},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-stun.html":{"ref":"api-stun.html","tf":0.002258610954263128}}},",":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0008907694020710388},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"&":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}},"docs":{}},"docs":{}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}}}}}},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}}}}}}}}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"e":{"docs":{},"p":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"a":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}},"l":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0020483408439164277}}}},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.00625}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}},"c":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"api-uv.html":{"ref":"api-uv.html","tf":0.006060606060606061}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}},"r":{"docs":{},"g":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0035026269702276708}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"w":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},":":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"x":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"examples.html":{"ref":"examples.html","tf":0.019867549668874173}}},"a":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"v":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},"g":{"docs":{},"a":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}}},"n":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.0016597510373443983}}},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0014641288433382138},"api-net.html":{"ref":"api-net.html","tf":0.0016597510373443983}}}}}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0020497803806734994},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493}},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0055671537926235215},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0008907694020710388}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}},"e":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00463821892393321}}}}}}},"g":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"i":{"docs":{},"b":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.00625},"getting-started.html":{"ref":"getting-started.html","tf":0.010416666666666666},"installation.html":{"ref":"installation.html","tf":0.00808080808080808},"installation-linux.html":{"ref":"installation-linux.html","tf":0.013888888888888888},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"LICENSE.html":{"ref":"LICENSE.html","tf":0.036641929499072357}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}},"y":{"docs":{},")":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},".":{"docs":{"./":{"ref":"./","tf":0.0015625}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0074211502782931356}}},"'":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.010667903525046383}}},"”":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0027829313543599257}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.009375},"getting-started.html":{"ref":"getting-started.html","tf":0.05555555555555555},"installation.html":{"ref":"installation.html","tf":0.012121212121212121},"installation-linux.html":{"ref":"installation-linux.html","tf":0.009259259259259259},"installation-osx.html":{"ref":"installation-osx.html","tf":0.022988505747126436},"installation-windows.html":{"ref":"installation-windows.html","tf":0.015},"examples.html":{"ref":"examples.html","tf":0.013245033112582781},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"'":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}},".":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}},"x":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},".":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"n":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}},":":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}},",":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391}}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}},"s":{"docs":{},"l":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}},"t":{"docs":{},"d":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}}},"w":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}}}}}},"c":{"docs":{},"y":{"docs":{},"*":{"docs":{},".":{"docs":{},"d":{"docs":{},"l":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}},"d":{"docs":{},".":{"docs":{},"d":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}}}}}},"u":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.0046875},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-uv.html":{"ref":"api-uv.html","tf":0.024242424242424242}},".":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}}},"a":{"docs":{},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"s":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":10.019016697588127}},"e":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.006029684601113173}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00927643784786642}}},";":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"”":{"docs":{},")":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"o":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"v":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0046875},"examples.html":{"ref":"examples.html","tf":0.013245033112582781},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013}},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},",":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}},"n":{"docs":{},"e":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}},"f":{"docs":{},"e":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}},"k":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"LICENSE.html":{"ref":"LICENSE.html","tf":0.007884972170686457}},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"$":{"docs":{},"{":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"}":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"x":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404},"installation-linux.html":{"ref":"installation-linux.html","tf":5.0092592592592595},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}},".":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.004096681687832855},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0017513134851138354},"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},".":{"docs":{},".":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}}}},"e":{"docs":{},"n":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}},",":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-turn.html":{"ref":"api-turn.html","tf":0.0015595757953836558},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000835096314441599}}}}}},"d":{"docs":{},",":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0031191515907673115}}}}}}},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0015625},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-uv.html":{"ref":"api-uv.html","tf":0.01616161616161616}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0024896265560165973},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006124039639238393},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}},"w":{"docs":{"./":{"ref":"./","tf":0.0015625}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.010416666666666666},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"e":{"docs":{},"d":{"docs":{},"?":{"docs":{},"\"":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-pacm.html":{"ref":"api-pacm.html","tf":0.010651372388365424},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}}}}}}},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}},"n":{"docs":{},"g":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"e":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}},"a":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0012804810154771183}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}}}}}},"m":{"docs":{},"a":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"k":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.003125},"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-linux.html":{"ref":"installation-linux.html","tf":0.018518518518518517},"installation-osx.html":{"ref":"installation-osx.html","tf":0.022988505747126436},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0055658627087198514}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0015625},"examples.html":{"ref":"examples.html","tf":0.013245033112582781},"api-base.html":{"ref":"api-base.html","tf":0.0012804810154771183},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0028676771814829987},"api-sked.html":{"ref":"api-sked.html","tf":0.003271537622682661},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"api-uv.html":{"ref":"api-uv.html","tf":0.014141414141414142},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}},",":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}},"i":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"f":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0020483408439164277}},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},"s":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567}}}}}}}},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}}}}}}},"x":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"u":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}},"_":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-uv.html":{"ref":"api-uv.html","tf":0.00808080808080808}},"l":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}},"c":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"e":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}},"r":{"docs":{},"o":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0014522821576763486},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.002319109461966605}}}}}},"d":{"docs":{},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0027829313543599257}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"l":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}},"r":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"y":{"docs":{},"b":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.009375},"installation.html":{"ref":"installation.html","tf":0.00404040404040404},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"examples.html":{"ref":"examples.html","tf":0.013245033112582781},"api-av.html":{"ref":"api-av.html","tf":0.0025806451612903226},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}},")":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}},"r":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}},"docs":{}}}}}}}}}}}}}}}}},",":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}},"u":{"docs":{},"m":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.00625},"api-base.html":{"ref":"api-base.html","tf":0.000835096314441599},"api-http.html":{"ref":"api-http.html","tf":0.0021961932650073207},"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.017915309446254073},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.001903367496339678},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.003125},"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444},"api-av.html":{"ref":"api-av.html","tf":0.0025806451612903226},"api-base.html":{"ref":"api-base.html","tf":0.001614519541253758},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.001903367496339678},"api-net.html":{"ref":"api-net.html","tf":0.002904564315352697},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},":":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.028169014084507043},"api-av.html":{"ref":"api-av.html","tf":0.017741935483870968},"api-base.html":{"ref":"api-base.html","tf":0.014363656608395501},"api-crypto.html":{"ref":"api-crypto.html","tf":0.006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.010248901903367497},"api-json.html":{"ref":"api-json.html","tf":0.019933554817275746},"api-net.html":{"ref":"api-net.html","tf":0.007883817427385892},"api-pacm.html":{"ref":"api-pacm.html","tf":0.008603031544448997},"api-pluga.html":{"ref":"api-pluga.html","tf":0.05714285714285714},"api-sked.html":{"ref":"api-sked.html","tf":0.017448200654307525},"api-socketio.html":{"ref":"api-socketio.html","tf":0.011400651465798045},"api-stun.html":{"ref":"api-stun.html","tf":0.014680971202710334},"api-symple.html":{"ref":"api-symple.html","tf":0.013309982486865149},"api-turn.html":{"ref":"api-turn.html","tf":0.011852776044915784},"api-util.html":{"ref":"api-util.html","tf":0.02336028751123091},"api-uv.html":{"ref":"api-uv.html","tf":0.012121212121212121},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.008591885441527447}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}},"y":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}},"a":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"LICENSE.html":{"ref":"LICENSE.html","tf":0.002319109461966605}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},".":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},".":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"e":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"e":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625},"examples.html":{"ref":"examples.html","tf":0.013245033112582781}},"e":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187}},"s":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0018928849794009575}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"u":{"docs":{},"m":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"u":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},")":{"docs":{},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}},"_":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}},"d":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}},"n":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.001610541727672035}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}},"t":{"docs":{},"i":{"docs":{},"g":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"d":{"docs":{},"e":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.003125},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"l":{"docs":{},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"s":{"docs":{},".":{"docs":{},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"]":{"docs":{},".":{"docs":{},"[":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"]":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0046875},"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444},"installation.html":{"ref":"installation.html","tf":0.024242424242424242},"examples.html":{"ref":"examples.html","tf":0.013245033112582781},"api-archo.html":{"ref":"api-archo.html","tf":0.007042253521126761},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-pluga.html":{"ref":"api-pluga.html","tf":0.014285714285714285},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"a":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.003125}}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},":":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"o":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"i":{"docs":{},"f":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}},"i":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00927643784786642}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}},"y":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}},"r":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0046875},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}},".":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"v":{"docs":{},"e":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"i":{"docs":{},"c":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"t":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791}}}}}},"s":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0032773453502662844}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}},"p":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0020483408439164277},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"e":{"docs":{},"x":{"docs":{"./":{"ref":"./","tf":0.0015625},"examples.html":{"ref":"examples.html","tf":0.013245033112582781}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},",":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0012248079278476785},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0024580090126997134},"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"t":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}},"k":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}}}}},"s":{"docs":{},"g":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"d":{"5":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"docs":{}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625}},")":{"docs":{"./":{"ref":"./","tf":0.0015625}}},"i":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.003125},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-net.html":{"ref":"api-net.html","tf":0.002282157676348548}}}}},"m":{"docs":{},"e":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.004193548387096774},"api-base.html":{"ref":"api-base.html","tf":0.001670192628883198},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0048712595685455815},"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-sked.html":{"ref":"api-sked.html","tf":0.0054525627044711015},"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167}},".":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00808080808080808},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.000835096314441599},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0048712595685455815},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.007042253521126761},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-pluga.html":{"ref":"api-pluga.html","tf":0.014285714285714285},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.007042253521126761}}}}}},"v":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"6":{"4":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"docs":{}},"docs":{}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},":":{"docs":{},":":{"docs":{},"w":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"v":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"m":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"a":{"docs":{"api-pluga.html":{"ref":"api-pluga.html","tf":0.014285714285714285}}}}}}},"s":{"docs":{},"k":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"o":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}}}}}}},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}}},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}},".":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0032258064516129032},"api-base.html":{"ref":"api-base.html","tf":0.0011134617525887986},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-sked.html":{"ref":"api-sked.html","tf":0.008724100327153763},"api-symple.html":{"ref":"api-symple.html","tf":0.004903677758318739},"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.004516129032258065},"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"&":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0025806451612903226}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0064516129032258064},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"l":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"examples.html":{"ref":"examples.html","tf":0.013245033112582781},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}},"\"":{"docs":{"./":{"ref":"./","tf":0.0015625}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-net.html":{"ref":"api-net.html","tf":10.000207468879669}},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.002342606149341142},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868}},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-turn.html":{"ref":"api-turn.html","tf":0.007485963817841547}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0016597510373443983},"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868}}}}}}}}}}}}}},"d":{"docs":{},"n":{"docs":{},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"\"":{"docs":{},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.009375},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"e":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}},"w":{"docs":{"./":{"ref":"./","tf":0.0046875},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0020876826722338203},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}},"e":{"docs":{},"r":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-linux.html":{"ref":"installation-linux.html","tf":0.009259259259259259},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.002863961813842482}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.0011134617525887986},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-sked.html":{"ref":"api-sked.html","tf":0.008724100327153763},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"x":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}},"_":{"docs":{},"r":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},":":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}},"s":{"docs":{},":":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}},"i":{"docs":{},"c":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0037105751391465678}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"i":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}},"h":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0027829313543599257}},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"c":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"e":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}},"w":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},"y":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-base.html":{"ref":"api-base.html","tf":0.0033960583453958356},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.002904564315352697},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0024429967426710096},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0017513134851138354},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},",":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}},".":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}},",":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}},"v":{"docs":{},"c":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}},"y":{"docs":{},"b":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}},"s":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}},"o":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0024429967426710096},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},"y":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"c":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.010416666666666666},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0014641288433382138},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"v":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}}}}}},".":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742},"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"c":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"v":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"*":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"u":{"docs":{},"v":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}},")":{"docs":{},";":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}},"e":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0010577886649593587},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"*":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}}}}}},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"*":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{},",":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"v":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0015595757953836558}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}},"o":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"c":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}},")":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"installation-windows.html":{"ref":"installation-windows.html","tf":0.01},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"c":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.003125},"installation.html":{"ref":"installation.html","tf":0.00404040404040404}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-osx.html":{"ref":"installation-osx.html","tf":0.022988505747126436},"installation-windows.html":{"ref":"installation-windows.html","tf":0.015},"api-crypto.html":{"ref":"api-crypto.html","tf":0.003479471120389701},"api-net.html":{"ref":"api-net.html","tf":0.0024896265560165973}},":":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0017815388041420776},"api-crypto.html":{"ref":"api-crypto.html","tf":0.003479471120389701},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0027829313543599257}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"n":{"docs":{},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"r":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}}},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"x":{"5":{"0":{"9":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{},")":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"v":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}},"!":{"docs":{},"=":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{},"(":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}},"+":{"docs":{},"=":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"d":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},">":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"=":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},">":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}}}}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625},"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444},"installation.html":{"ref":"installation.html","tf":0.006060606060606061},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"s":{"docs":{},".":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}},"o":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},";":{"docs":{"./":{"ref":"./","tf":0.0015625}}},",":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}}}}}}}}}}}},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.004096681687832855},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.002495321272613849},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"installation.html":{"ref":"installation.html","tf":0.006060606060606061}}},":":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"a":{"docs":{},"q":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}},"e":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},",":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.002319109461966605}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}},"l":{"docs":{},"i":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00463821892393321}}}}}}}}},"s":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00404040404040404},"installation-osx.html":{"ref":"installation-osx.html","tf":3.333333333333333}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0028021015761821367},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}},"t":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.003870967741935484},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}},"r":{"docs":{},"m":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0026354319180087846}}}}}},"u":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0046875},"examples.html":{"ref":"examples.html","tf":0.013245033112582781},"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.0021961932650073207},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}},",":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0025806451612903226},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.004516129032258065}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.004516129032258065}}}}}},"g":{"docs":{},"o":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0016129032258064516},"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159}}},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.00625},"examples.html":{"ref":"examples.html","tf":0.013245033112582781},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0018672199170124482},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"api-uv.html":{"ref":"api-uv.html","tf":0.006060606060606061}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567}}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"e":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0027829313543599257}},".":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},":":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}},"i":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"e":{"docs":{},",":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.0006124039639238393},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"e":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}},")":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}},"s":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"l":{"docs":{},"'":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391}}},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.0017569546120058566},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00463821892393321}},"'":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},",":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608},"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0035026269702276708}}},"s":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0014522821576763486}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}},"s":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"k":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"p":{"2":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"p":{"docs":{"./":{"ref":"./","tf":0.003125},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"3":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"4":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0046875},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-av.html":{"ref":"api-av.html","tf":0.006129032258064516},"api-base.html":{"ref":"api-base.html","tf":0.004231154659837435},"api-http.html":{"ref":"api-http.html","tf":0.0017569546120058566},"api-net.html":{"ref":"api-net.html","tf":0.002282157676348548},"api-socketio.html":{"ref":"api-socketio.html","tf":0.004071661237785016},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.0006124039639238393}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.003125},"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993}},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"'":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{},"/":{"docs":{},"/":{"docs":{},"/":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"a":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.0014475002783654381},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-socketio.html":{"ref":"api-socketio.html","tf":0.009771986970684038},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.002863961813842482}}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-socketio.html":{"ref":"api-socketio.html","tf":0.004885993485342019},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.006514657980456026}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}},"a":{"docs":{},"g":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"examples.html":{"ref":"examples.html","tf":0.013245033112582781},"api-pacm.html":{"ref":"api-pacm.html","tf":0.03031544448996313},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.006964358869315854}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.005325686194182712}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}},"m":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-pacm.html":{"ref":"api-pacm.html","tf":10.000819336337566}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625}}},",":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},"s":{"docs":{},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}},"r":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}},"i":{"docs":{"installation.html":{"ref":"installation.html","tf":0.006060606060606061},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00463821892393321}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}}}}}}},"a":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013}},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0028021015761821367}}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571}}},"/":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"s":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"s":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"s":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0020483408439164277},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"p":{"docs":{},"h":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}}}}}}},"s":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0017569546120058566}}},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"s":{"docs":{},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}},"t":{"docs":{},"h":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-windows.html":{"ref":"installation-windows.html","tf":0.015},"api-http.html":{"ref":"api-http.html","tf":0.0010248901903367497},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"s":{"docs":{},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}},")":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0041753653444676405},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}},".":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0037105751391465678}}}}}},"i":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0011134617525887986},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}},"s":{"docs":{},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}},"u":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"d":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.003479471120389701}},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}}}},"y":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"e":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0046875},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0015595757953836558},"LICENSE.html":{"ref":"LICENSE.html","tf":0.002319109461966605}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},";":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.004174397031539889}},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"e":{"docs":{},"r":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.004149377593360996},"api-symple.html":{"ref":"api-symple.html","tf":0.005954465849387041},"api-turn.html":{"ref":"api-turn.html","tf":0.004990642545227698},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.001431980906921241}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.0010248901903367497},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-turn.html":{"ref":"api-turn.html","tf":0.011228945726762321}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0024896265560165973}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}},"'":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.001431980906921241}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},"i":{"docs":{},"p":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}},"s":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"u":{"1":{"6":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"2":{"4":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"3":{"2":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"6":{"4":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"8":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"m":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0041753653444676405},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}}}},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}},"e":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}},"x":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},"m":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}}}}},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"e":{"docs":{},"c":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0078125},"installation.html":{"ref":"installation.html","tf":0.006060606060606061},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625}}},":":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}}}}},"y":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"e":{"docs":{},"r":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}},"c":{"docs":{},"e":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0015625},"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0015625},"examples.html":{"ref":"examples.html","tf":0.006622516556291391}}}}}},"u":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"g":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}},"a":{"docs":{"api-pluga.html":{"ref":"api-pluga.html","tf":10.014285714285714}}},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-pluga.html":{"ref":"api-pluga.html","tf":0.02857142857142857}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"api-pluga.html":{"ref":"api-pluga.html","tf":0.02857142857142857}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.002282596592807037},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.002074688796680498},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-uv.html":{"ref":"api-uv.html","tf":0.012121212121212121}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0014522821576763486},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}},";":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0015625},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"e":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159}}},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993}}}}}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}},")":{"docs":{},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}},"e":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.003125}}}}},"r":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0031120331950207467}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.002074688796680498}},";":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0037105751391465678}}}}}}},"p":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},",":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}}}}}}}},"r":{"docs":{},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}},",":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}}}}},"r":{"docs":{},"v":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"s":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.01}}}},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}},"i":{"docs":{},"s":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}},"i":{"docs":{},"x":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.012121212121212121}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}},"v":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.004516129032258065},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0028021015761821367},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0016129032258064516},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},"y":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742},"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-net.html":{"ref":"api-net.html","tf":0.0018672199170124482}},"e":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"e":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"p":{"docs":{},"h":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.003125},"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.0012804810154771183},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-symple.html":{"ref":"api-symple.html","tf":0.0017513134851138354},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.0006124039639238393}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}},"p":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"(":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.024305555555555556},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"installation-windows.html":{"ref":"installation-windows.html","tf":0.02}},"s":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}}}},".":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444}}},":":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.003125},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"s":{"docs":{},".":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391}},".":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}},":":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}},")":{"docs":{},";":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.00967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.019095869056897894},"api-crypto.html":{"ref":"api-crypto.html","tf":0.023660403618649965},"api-http.html":{"ref":"api-http.html","tf":0.020790629575402637},"api-json.html":{"ref":"api-json.html","tf":0.03322259136212625},"api-net.html":{"ref":"api-net.html","tf":0.014315352697095435},"api-pacm.html":{"ref":"api-pacm.html","tf":0.017206063088897994},"api-sked.html":{"ref":"api-sked.html","tf":0.026172300981461286},"api-socketio.html":{"ref":"api-socketio.html","tf":0.05374592833876222},"api-stun.html":{"ref":"api-stun.html","tf":0.01129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0070052539404553416},"api-turn.html":{"ref":"api-turn.html","tf":0.010917030567685589},"api-util.html":{"ref":"api-util.html","tf":0.030548068283917342},"api-uv.html":{"ref":"api-uv.html","tf":0.028282828282828285},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.03532219570405728},"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"c":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"p":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}},"f":{"docs":{},"p":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}}}}},"c":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"_":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}}}}}}}}}}}}}},"r":{"docs":{},"l":{"docs":{},"_":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"_":{"docs":{},"i":{"docs":{},"v":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"&":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}},"w":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"w":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"*":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.00625},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-base.html":{"ref":"api-base.html","tf":0.0009464424897004788},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00510204081632653}}}},"e":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"l":{"docs":{},"y":{"docs":{},":":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"t":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0017815388041420776},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"y":{"docs":{},"'":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.007884972170686457}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"s":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},";":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0032773453502662844}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}},"x":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.001903367496339678},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},"y":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}},"e":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}},"h":{"docs":{},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}},"o":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.003125}}}},"m":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"s":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.003125},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.2112676056338028},"api-av.html":{"ref":"api-av.html","tf":0.13838709677419356},"api-base.html":{"ref":"api-base.html","tf":0.10093530787217458},"api-crypto.html":{"ref":"api-crypto.html","tf":0.07306889352818371},"api-http.html":{"ref":"api-http.html","tf":0.09546120058565154},"api-json.html":{"ref":"api-json.html","tf":0.10963455149501661},"api-net.html":{"ref":"api-net.html","tf":0.08921161825726141},"api-pacm.html":{"ref":"api-pacm.html","tf":0.10405571487095452},"api-pluga.html":{"ref":"api-pluga.html","tf":0.17142857142857143},"api-sked.html":{"ref":"api-sked.html","tf":0.1134133042529989},"api-socketio.html":{"ref":"api-socketio.html","tf":0.09283387622149837},"api-stun.html":{"ref":"api-stun.html","tf":0.1417278373800113},"api-symple.html":{"ref":"api-symple.html","tf":0.1352014010507881},"api-turn.html":{"ref":"api-turn.html","tf":0.12133499688084841},"api-util.html":{"ref":"api-util.html","tf":0.11590296495956873},"api-uv.html":{"ref":"api-uv.html","tf":0.08080808080808081},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.1441527446300716},"LICENSE.html":{"ref":"LICENSE.html","tf":0.010667903525046383}},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"y":{"docs":{},"f":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.002258610954263128}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742},"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"g":{"docs":{},"o":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"*":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"g":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0024580090126997134},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-util.html":{"ref":"api-util.html","tf":0.005390835579514825}},"a":{"docs":{},"l":{"2":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}},"docs":{}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0008907694020710388}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"+":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},"*":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"+":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0008907694020710388}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"+":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}}},"r":{"docs":{},"l":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}}}}},"x":{"5":{"0":{"9":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"`":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"2":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}},"3":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}},"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"`":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"`":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"`":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"`":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"`":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"`":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"`":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"`":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}},"w":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}}}}}}},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},"u":{"1":{"6":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"2":{"4":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"3":{"2":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"6":{"4":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"8":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}}}}}}}}}}}},"docs":{}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}},"e":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"k":{"docs":{},"g":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.010416666666666666},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}},"t":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}},";":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00808080808080808}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}},"m":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"u":{"docs":{},"t":{"docs":{},"f":{"8":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}},"docs":{}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"u":{"docs":{},"d":{"docs":{},"o":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187}}}}}}},"h":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0017569546120058566}}}}}}},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"d":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"r":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"s":{"docs":{},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}},"w":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.0010248901903367497},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0041753653444676405},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966}}}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0010577886649593587},"api-crypto.html":{"ref":"api-crypto.html","tf":0.003479471120389701}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0022580645161290325},"api-util.html":{"ref":"api-util.html","tf":0.0026954177897574125}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},",":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"r":{"docs":{},"e":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.0010248901903367497},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-stun.html":{"ref":"api-stun.html","tf":0.00564652738565782},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0046875},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}}},"i":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}},"(":{"docs":{},")":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.01129305477131564}}}}}}}}}}}}},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},";":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}},".":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.012422360248447204}}}}}},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.00625},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-http.html":{"ref":"api-http.html","tf":0.0020497803806734994},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},")":{"docs":{},".":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}},"c":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0015625},"examples.html":{"ref":"examples.html","tf":0.033112582781456956},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-linux.html":{"ref":"installation-linux.html","tf":0.009259259259259259},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}},".":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.002863961813842482},"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"v":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}},"d":{"docs":{},"p":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"w":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"'":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"a":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.003125},"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868}}},"t":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0015625},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"n":{"docs":{},"k":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"*":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00808080808080808},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}}}}}}},"y":{"docs":{},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"u":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003125},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.006588579795021962},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.004678727386150967}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.0026354319180087846},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-turn.html":{"ref":"api-turn.html","tf":0.002183406113537118}}},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}},"'":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.002342606149341142},"api-turn.html":{"ref":"api-turn.html","tf":0.008733624454148471}}},";":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"s":{"docs":{},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}},"i":{"docs":{},"r":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-linux.html":{"ref":"installation-linux.html","tf":0.009259259259259259},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}},",":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"o":{"docs":{},"u":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-base.html":{"ref":"api-base.html","tf":0.000835096314441599},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941},"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.007905138339920948}}}},"x":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868}},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"(":{"docs":{},")":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.006554690700532569},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0038186157517899762}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-http.html":{"ref":"api-http.html","tf":0.004099560761346999},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0024429967426710096},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.0010248901903367497},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0026354319180087846},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-turn.html":{"ref":"api-turn.html","tf":0.008733624454148471}}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"s":{"docs":{},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934}},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},"s":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0018672199170124482},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0020876826722338203},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}},"i":{"docs":{},"z":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},"d":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},"v":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}},"e":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.013695579556842223},"api-crypto.html":{"ref":"api-crypto.html","tf":0.024356297842727904},"api-http.html":{"ref":"api-http.html","tf":0.015080527086383601},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-net.html":{"ref":"api-net.html","tf":0.01929460580912863},"api-pacm.html":{"ref":"api-pacm.html","tf":0.015567390413764851},"api-sked.html":{"ref":"api-sked.html","tf":0.013086150490730643},"api-socketio.html":{"ref":"api-socketio.html","tf":0.011400651465798045},"api-stun.html":{"ref":"api-stun.html","tf":0.011857707509881422},"api-symple.html":{"ref":"api-symple.html","tf":0.009106830122591943},"api-turn.html":{"ref":"api-turn.html","tf":0.002183406113537118},"api-util.html":{"ref":"api-util.html","tf":0.0026954177897574125},"api-uv.html":{"ref":"api-uv.html","tf":0.026262626262626262},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},",":{"docs":{},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}},"v":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}},"u":{"docs":{},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}},"e":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}},"f":{"docs":{},"c":{"5":{"7":{"6":{"6":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.009375},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0017513134851138354}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}}}}}}},"o":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},")":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.013289036544850499},"api-sked.html":{"ref":"api-sked.html","tf":0.017448200654307525},"api-symple.html":{"ref":"api-symple.html","tf":0.007705779334500876}}},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}}}}}}},"s":{"docs":{},".":{"docs":{},")":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"m":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"d":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"y":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"!":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.004174397031539889}},"s":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}},"s":{"docs":{},"k":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"u":{"docs":{},"n":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.0012248079278476785},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-sked.html":{"ref":"api-sked.html","tf":0.007633587786259542},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0012804810154771183},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"'":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}}}}}}}},",":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}},"p":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00954653937947494}},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},">":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0032258064516129032},"api-base.html":{"ref":"api-base.html","tf":0.0012248079278476785},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013},"api-stun.html":{"ref":"api-stun.html","tf":0.009034443817052512},"api-symple.html":{"ref":"api-symple.html","tf":0.0070052539404553416},"api-turn.html":{"ref":"api-turn.html","tf":0.002495321272613849}},";":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},",":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"c":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}},"s":{"1":{"6":{"docs":{},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}},"p":{"docs":{},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}},"docs":{}},"3":{"2":{"docs":{},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}},"p":{"docs":{},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}},"docs":{}},"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"examples.html":{"ref":"examples.html","tf":0.026490066225165563},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"e":{"docs":{},"f":{"docs":{},"m":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}},"r":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0025806451612903226}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0038186157517899762}}}}}}}}}}}},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}},"e":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}}}},"v":{"docs":{},"e":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}},")":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}}}}},"l":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0020876826722338203}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}}}}}}},"y":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"d":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0038186157517899762}}}},"k":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0024580090126997134}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}},"e":{"docs":{},"c":{"1":{"0":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}},"docs":{}},"docs":{},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"e":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0009464424897004788},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00974025974025974}},",":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}},"e":{"docs":{"./":{"ref":"./","tf":0.0015625},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-linux.html":{"ref":"installation-linux.html","tf":0.009259259259259259},"installation-osx.html":{"ref":"installation-osx.html","tf":0.022988505747126436},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},":":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},",":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"k":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}}}},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0078125},"examples.html":{"ref":"examples.html","tf":0.059602649006622516},"api-http.html":{"ref":"api-http.html","tf":0.0010248901903367497},"api-net.html":{"ref":"api-net.html","tf":0.0033195020746887966},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.004678727386150967}},"s":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"?":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391}}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"f":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-sked.html":{"ref":"api-sked.html","tf":0.008724100327153763}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-windows.html":{"ref":"installation-windows.html","tf":0.02},"api-av.html":{"ref":"api-av.html","tf":0.0025806451612903226},"api-base.html":{"ref":"api-base.html","tf":0.0021155773299187173},"api-crypto.html":{"ref":"api-crypto.html","tf":0.006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.010980966325036604},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"api-net.html":{"ref":"api-net.html","tf":0.004356846473029046},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0032773453502662844},"api-symple.html":{"ref":"api-symple.html","tf":0.0024518388791593695},"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868},"api-uv.html":{"ref":"api-uv.html","tf":0.014141414141414142},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"u":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}},"h":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0035026269702276708}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}},"v":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"x":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"k":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.0033879164313946925}}}}}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"s":{"docs":{},"c":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},"u":{"docs":{},"v":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"x":{"docs":{},"y":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"v":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}}}}}}}}}}},"o":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}},"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"c":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.022988505747126436},"installation-windows.html":{"ref":"installation-windows.html","tf":0.01}}}}},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}},"n":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-http.html":{"ref":"api-http.html","tf":0.003074670571010249},"api-net.html":{"ref":"api-net.html","tf":0.0024896265560165973},"api-socketio.html":{"ref":"api-socketio.html","tf":0.006514657980456026},"api-symple.html":{"ref":"api-symple.html","tf":0.0024518388791593695},"api-turn.html":{"ref":"api-turn.html","tf":0.0028072364316905803},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.0014641288433382138},"api-net.html":{"ref":"api-net.html","tf":0.0033195020746887966},"api-socketio.html":{"ref":"api-socketio.html","tf":0.008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-turn.html":{"ref":"api-turn.html","tf":0.004990642545227698}}},",":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0031191515907673115}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0028021015761821367}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},";":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},".":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"d":{"docs":{},"p":{"docs":{},"(":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-http.html":{"ref":"api-http.html","tf":0.0013177159590043923},"api-net.html":{"ref":"api-net.html","tf":0.0014522821576763486},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.006639004149377593},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493}},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}},"s":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"e":{"docs":{},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}},"h":{"docs":{},"u":{"docs":{},"l":{"docs":{},"b":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.002074688796680498},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}},"docs":{}},"docs":{}}}}}}}}}}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404},"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"LICENSE.html":{"ref":"LICENSE.html","tf":0.002319109461966605}},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404}}}}}}},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.003125},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0018672199170124482},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},".":{"docs":{"./":{"ref":"./","tf":0.0015625},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"l":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"g":{"docs":{},"n":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"a":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.001503173365994878},"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571},"api-net.html":{"ref":"api-net.html","tf":0.002282157676348548},"api-pacm.html":{"ref":"api-pacm.html","tf":0.005735354362965997},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"c":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"u":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}},"z":{"docs":{},"e":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0048712595685455815},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-stun.html":{"ref":"api-stun.html","tf":0.0016939582156973462},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}},"docs":{}},"docs":{}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.002495321272613849}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0016129032258064516},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.0033879164313946925},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-stun.html":{"ref":"api-stun.html","tf":0.019198193111236588}}},"s":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},"_":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"k":{"docs":{},",":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0046875},"examples.html":{"ref":"examples.html","tf":0.019867549668874173},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.003513909224011713},"api-net.html":{"ref":"api-net.html","tf":0.016390041493775934},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0007320644216691069},"api-net.html":{"ref":"api-net.html","tf":0.004979253112033195}},"i":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0046875}},".":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}},"/":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-turn.html":{"ref":"api-turn.html","tf":0.002495321272613849}},";":{"docs":{},".":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}},"w":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},",":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0014522821576763486}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}},"s":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},"i":{"docs":{},"o":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":10.000814332247558}}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0016597510373443983}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation-windows.html":{"ref":"installation-windows.html","tf":0.015},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"e":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.010416666666666666},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-base.html":{"ref":"api-base.html","tf":0.0011134617525887986},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"LICENSE.html":{"ref":"LICENSE.html","tf":0.006029684601113173}},"e":{"docs":{},"y":{"docs":{},"'":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"'":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"'":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}},"i":{"docs":{},"m":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"o":{"docs":{},"n":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},":":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"LICENSE.html":{"ref":"LICENSE.html","tf":0.012523191094619666}},"e":{"docs":{},")":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"o":{"docs":{},"n":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"installation.html":{"ref":"installation.html","tf":0.010101010101010102},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}},"i":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0026970954356846473},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0027829313543599257}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"a":{"docs":{},"l":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"a":{"docs":{},"k":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0008907694020710388}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}},"w":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}},"i":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"s":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.007053941908713693}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},"(":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}}}},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}},"_":{"docs":{},"c":{"docs":{},"t":{"docs":{},"x":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0016597510373443983}},"'":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"*":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}}}}}},",":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0016597510373443983}},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0046875},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}},"r":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0046875},"getting-started.html":{"ref":"getting-started.html","tf":5.010416666666667},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.002059904242289277},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742},"api-base.html":{"ref":"api-base.html","tf":0.0007237501391827191},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}},"docs":{}},"docs":{}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0020483408439164277}}},",":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}}}}},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}},"a":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00404040404040404},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"e":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.002171250417548157},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.0014641288433382138},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0024580090126997134},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000835096314441599},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567},"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013}}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}},"u":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0017569546120058566},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987}}},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"v":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.07042253521126761},"api-av.html":{"ref":"api-av.html","tf":0.036774193548387096},"api-base.html":{"ref":"api-base.html","tf":0.01564413762387262},"api-crypto.html":{"ref":"api-crypto.html","tf":0.03618649965205289},"api-http.html":{"ref":"api-http.html","tf":0.038799414348462666},"api-json.html":{"ref":"api-json.html","tf":0.07308970099667775},"api-net.html":{"ref":"api-net.html","tf":0.008713692946058092},"api-pacm.html":{"ref":"api-pacm.html","tf":0.03768947152806227},"api-sked.html":{"ref":"api-sked.html","tf":0.04143947655398037},"api-socketio.html":{"ref":"api-socketio.html","tf":0.04234527687296417},"api-stun.html":{"ref":"api-stun.html","tf":0.018068887634105024},"api-symple.html":{"ref":"api-symple.html","tf":0.060245183887915936},"api-turn.html":{"ref":"api-turn.html","tf":0.014348097317529632},"api-util.html":{"ref":"api-util.html","tf":0.034141958670260555},"api-uv.html":{"ref":"api-uv.html","tf":0.012121212121212121},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.01909307875894988}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}}},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.003173365994878076},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-socketio.html":{"ref":"api-socketio.html","tf":0.005700325732899023},"api-stun.html":{"ref":"api-stun.html","tf":0.0033879164313946925},"api-symple.html":{"ref":"api-symple.html","tf":0.0024518388791593695}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},">":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},">":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742}}}}}}}},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},">":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.002258610954263128}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.003870967741935484},"api-base.html":{"ref":"api-base.html","tf":0.0008907694020710388},"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881},"api-turn.html":{"ref":"api-turn.html","tf":0.006238303181534623}}}}},"docs":{}},"docs":{}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},"f":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0016597510373443983},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.009034443817052512},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}},"docs":{}},"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-turn.html":{"ref":"api-turn.html","tf":0.004990642545227698}}}}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00322108345534407},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}},"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-stun.html":{"ref":"api-stun.html","tf":0.004517221908526256}}}}},"docs":{}}}}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},">":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},">":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}},"d":{"docs":{},"n":{"docs":{},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}}}}}}}}}}}},"l":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.009375},"examples.html":{"ref":"examples.html","tf":0.026490066225165563},"api-av.html":{"ref":"api-av.html","tf":0.002903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.003117692907248636},"api-crypto.html":{"ref":"api-crypto.html","tf":0.003479471120389701},"api-http.html":{"ref":"api-http.html","tf":0.0013177159590043923},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-util.html":{"ref":"api-util.html","tf":0.005390835579514825},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.001431980906921241}},",":{"docs":{"./":{"ref":"./","tf":0.0015625}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0014475002783654381},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.0024890190336749633},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}},";":{"docs":{"./":{"ref":"./","tf":0.0015625}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.003125}}}}}},"e":{"docs":{},"r":{"docs":{"examples.html":{"ref":"examples.html","tf":0.013245033112582781}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0011134617525887986},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00477326968973747}}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.0006124039639238393},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}},"s":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}},":":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0024580090126997134},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.007042253521126761},"api-av.html":{"ref":"api-av.html","tf":0.005483870967741935},"api-base.html":{"ref":"api-base.html","tf":0.002338269680436477},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0035269709543568465},"api-pacm.html":{"ref":"api-pacm.html","tf":0.004096681687832855},"api-pluga.html":{"ref":"api-pluga.html","tf":0.014285714285714285},"api-sked.html":{"ref":"api-sked.html","tf":0.008724100327153763},"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013},"api-symple.html":{"ref":"api-symple.html","tf":0.0035026269702276708},"api-turn.html":{"ref":"api-turn.html","tf":0.0028072364316905803},"api-util.html":{"ref":"api-util.html","tf":0.0026954177897574125},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}},"u":{"docs":{},"r":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"s":{"docs":{},"c":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.007042253521126761}}}}}}}}}}}}}},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"c":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"p":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}},"docs":{}},"docs":{}}}},"i":{"docs":{},"t":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0007237501391827191}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"u":{"docs":{},"s":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}},"m":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"a":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"api-pluga.html":{"ref":"api-pluga.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}},"p":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"c":{"docs":{},"m":{"docs":{},"d":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"n":{"docs":{},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},",":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-stun.html":{"ref":"api-stun.html","tf":10.001693958215697}},"/":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-stun.html":{"ref":"api-stun.html","tf":0.012987012987012988}}}}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}},",":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}},".":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}},"e":{"docs":{},"p":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.0010577886649593587},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742},"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}},"a":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}}}},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.009375},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},":":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},")":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493}}}}}}}}},"l":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.002319109461966605}}}}}},"b":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-symple.html":{"ref":"api-symple.html","tf":0.0024518388791593695}}},"s":{"docs":{},"s":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"'":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"c":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}},",":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0024429967426710096},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567}}},"y":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-stun.html":{"ref":"api-stun.html","tf":0.01129305477131564}}},",":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},".":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}},"o":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.007884972170686457}}}},"d":{"docs":{},"o":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.023148148148148147},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}}},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.02112676056338028},"api-av.html":{"ref":"api-av.html","tf":0.00935483870967742},"api-base.html":{"ref":"api-base.html","tf":0.00734884756708607},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0041753653444676405},"api-http.html":{"ref":"api-http.html","tf":0.005270863836017569},"api-json.html":{"ref":"api-json.html","tf":0.013289036544850499},"api-net.html":{"ref":"api-net.html","tf":0.004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.004506349856616141},"api-pluga.html":{"ref":"api-pluga.html","tf":0.04285714285714286},"api-sked.html":{"ref":"api-sked.html","tf":0.009814612868047983},"api-socketio.html":{"ref":"api-socketio.html","tf":0.006514657980456026},"api-stun.html":{"ref":"api-stun.html","tf":0.007905138339920948},"api-symple.html":{"ref":"api-symple.html","tf":0.0070052539404553416},"api-turn.html":{"ref":"api-turn.html","tf":0.006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.014375561545372867},"api-uv.html":{"ref":"api-uv.html","tf":0.00808080808080808},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00477326968973747}}},"y":{"docs":{},",":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}},".":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"y":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00404040404040404},"api-symple.html":{"ref":"api-symple.html","tf":10.000700525394045}},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0015625}}},")":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.003125},"getting-started.html":{"ref":"getting-started.html","tf":0.010416666666666666},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-windows.html":{"ref":"installation-windows.html","tf":0.01},"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}},".":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},"'":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}},"s":{"docs":{},"'":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},";":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"(":{"docs":{},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.001503173365994878},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}},"e":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"x":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-linux.html":{"ref":"installation-linux.html","tf":0.009259259259259259},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"m":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.007042253521126761}},":":{"docs":{},":":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.007042253521126761}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}},"v":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}},"l":{"docs":{},"v":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}}}}},"p":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"p":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"x":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}}}}}}}}}}}}},"m":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"a":{"docs":{"api-pluga.html":{"ref":"api-pluga.html","tf":0.014285714285714285}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"api-pluga.html":{"ref":"api-pluga.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.00564652738565782}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}},"docs":{}},"3":{"2":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}},"docs":{}},"6":{"4":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}},"docs":{}},"8":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}},"docs":{}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"a":{"docs":{},"l":{"2":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"3":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"4":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}},"e":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}}}}}},"k":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0054525627044711015}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"o":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}}}}}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"e":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0017513134851138354}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0017513134851138354}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"6":{"4":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}},"docs":{}},"docs":{}},"i":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"t":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}},"x":{"5":{"0":{"9":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0007237501391827191}}}}}}}}}}}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}},"w":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0026954177897574125}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}}}},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493}}}}}}}}}}}},"d":{"docs":{},"n":{"docs":{},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"v":{"4":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}},"docs":{}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"z":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}},"p":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}},"v":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}},":":{"docs":{},":":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"c":{"docs":{},"m":{"docs":{},"d":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"api-sked.html":{"ref":"api-sked.html","tf":0.003271537622682661}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-sked.html":{"ref":"api-sked.html","tf":0.011995637949836423}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"*":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881}}}},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881}}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0010248901903367497}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0017569546120058566}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}}}}}}}}}}}}}},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}},"r":{"docs":{},"c":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0032773453502662844}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":10.001090512540895}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.003271537622682661}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"(":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"x":{"5":{"0":{"9":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.005390835579514825}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.001558846453624318},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"n":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"g":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"s":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.002338269680436477},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00819336337566571},"api-sked.html":{"ref":"api-sked.html","tf":0.025081788440567066}},"'":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0013361541031065582},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881},"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0036870135190495697},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881}}}}}}},"b":{"docs":{},"l":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"e":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"c":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.003125},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.002074688796680498},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934}},",":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},"(":{"docs":{},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation.html":{"ref":"installation.html","tf":0.00808080808080808},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-base.html":{"ref":"api-base.html","tf":0.0011691348402182386},"api-util.html":{"ref":"api-util.html","tf":0.0026954177897574125},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}},"'":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}},"l":{"docs":{},"l":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0022269235051775972},"api-crypto.html":{"ref":"api-crypto.html","tf":0.006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-sked.html":{"ref":"api-sked.html","tf":0.006543075245365322},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}},"r":{"docs":{},"m":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00927643784786642}},"i":{"docs":{},"n":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}},"s":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"x":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0028021015761821367},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}},",":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"t":{"docs":{},"'":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-stun.html":{"ref":"api-stun.html","tf":0.002258610954263128}}},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625}},"k":{"docs":{"./":{"ref":"./","tf":0.0015625},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"g":{"docs":{},"s":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},":":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}},"r":{"docs":{},"d":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation.html":{"ref":"installation.html","tf":0.006060606060606061},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}}}},"s":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003125}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}},"w":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.001503173365994878},"api-http.html":{"ref":"api-http.html","tf":0.0020497803806734994},"api-net.html":{"ref":"api-net.html","tf":0.002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0028676771814829987},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}},"n":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0016129032258064516},"api-base.html":{"ref":"api-base.html","tf":0.002393942768065917},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006124039639238393},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"e":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"s":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"LICENSE.html":{"ref":"LICENSE.html","tf":0.002319109461966605}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},"e":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}}}}}}},"m":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"y":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"o":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}},".":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}},"p":{"docs":{"./":{"ref":"./","tf":0.003125}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0025806451612903226},"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},":":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},")":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0013177159590043923},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"s":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.000967741935483871},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}}}}},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013}}}}}}}}}}}}}}}}}},".":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}},"i":{"docs":{},"d":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.002258610954263128},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0031191515907673115}}},"s":{"docs":{},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0016597510373443983},"api-turn.html":{"ref":"api-turn.html","tf":0.004366812227074236}},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0016597510373443983},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0027836543814719963},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.004538799414348462},"api-net.html":{"ref":"api-net.html","tf":0.0031120331950207467},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0032773453502662844},"api-sked.html":{"ref":"api-sked.html","tf":0.006543075245365322},"api-socketio.html":{"ref":"api-socketio.html","tf":0.004885993485342019},"api-stun.html":{"ref":"api-stun.html","tf":0.01129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0028021015761821367},"api-turn.html":{"ref":"api-turn.html","tf":0.002183406113537118},"api-uv.html":{"ref":"api-uv.html","tf":0.006060606060606061},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.003125}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247}}}},"s":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}},"e":{"docs":{},"e":{"docs":{},":":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}},"a":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"(":{"docs":{},")":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}},")":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}},".":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0046875},"examples.html":{"ref":"examples.html","tf":0.019867549668874173},"api-turn.html":{"ref":"api-turn.html","tf":10.004054897067997}}}},"p":{"docs":{},"l":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.002183406113537118}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.002495321272613849}}}}}}}},":":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}},"m":{"docs":{},"e":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.004342500835096314},"api-crypto.html":{"ref":"api-crypto.html","tf":0.003479471120389701},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-sked.html":{"ref":"api-sked.html","tf":0.009814612868047983},"api-turn.html":{"ref":"api-turn.html","tf":0.0028072364316905803},"api-util.html":{"ref":"api-util.html","tf":0.0026954177897574125},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},",":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0009464424897004788},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"v":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0007237501391827191}}}}}}},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594}}}}}},".":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0011134617525887986},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-socketio.html":{"ref":"api-socketio.html","tf":0.004885993485342019},"api-util.html":{"ref":"api-util.html","tf":0.0071877807726864335}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934},"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0024429967426710096},"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}}}},"e":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0005010577886649594},"api-http.html":{"ref":"api-http.html","tf":0.0013177159590043923},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881},"api-socketio.html":{"ref":"api-socketio.html","tf":0.004071661237785016},"api-stun.html":{"ref":"api-stun.html","tf":0.01693958215697346},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.006543075245365322},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0035026269702276708},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.0033879164313946925}}}}},"docs":{}},"docs":{}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}},"docs":{}},"docs":{}}}}}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0041753653444676405}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283},"api-sked.html":{"ref":"api-sked.html","tf":0.013086150490730643},"api-stun.html":{"ref":"api-stun.html","tf":0.00564652738565782},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}},"u":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}},"i":{"docs":{},"c":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0022269235051775972},"api-util.html":{"ref":"api-util.html","tf":0.005390835579514825}}}}},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0014475002783654381}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0013361541031065582},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}}}}},"w":{"docs":{},"o":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0018552875695732839}}}},"z":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"l":{"docs":{},"s":{"docs":{},"v":{"1":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},"docs":{}}}},"t":{"docs":{},"l":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}},"u":{"8":{"docs":{},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}},"p":{"docs":{},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}}}}},"docs":{},"d":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0015625},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00974025974025974}},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0033195020746887966},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0025806451612903226},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0020483408439164277}},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0012290045063498567}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}}}},"q":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"x":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"z":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}}},"f":{"docs":{},"'":{"docs":{},"d":{"docs":{},".":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}},"(":{"docs":{},")":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}},"e":{"docs":{},"r":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},",":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}}}},"e":{"docs":{},"t":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0007237501391827191},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}}},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}},"e":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"d":{"docs":{"examples.html":{"ref":"examples.html","tf":0.006622516556291391}},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.00027836543814719966},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-pacm.html":{"ref":"api-pacm.html","tf":0.006554690700532569},"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881},"api-symple.html":{"ref":"api-symple.html","tf":0.0021015761821366026},"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934},"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0020876826722338203},"api-sked.html":{"ref":"api-sked.html","tf":0.010905125408942203}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0055671537926235215}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"u":{"1":{"6":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"2":{"4":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"3":{"2":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"6":{"4":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"8":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"docs":{}}}}}}}}}}}},"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}},"x":{"docs":{},"y":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}},"d":{"docs":{},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}},"o":{"docs":{},"n":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}},"s":{"docs":{"./":{"ref":"./","tf":0.00625},"getting-started.html":{"ref":"getting-started.html","tf":0.024305555555555556},"installation.html":{"ref":"installation.html","tf":0.010101010101010102},"installation-linux.html":{"ref":"installation-linux.html","tf":0.018518518518518517},"installation-osx.html":{"ref":"installation-osx.html","tf":0.022988505747126436},"installation-windows.html":{"ref":"installation-windows.html","tf":0.015},"examples.html":{"ref":"examples.html","tf":0.013245033112582781},"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903},"api-base.html":{"ref":"api-base.html","tf":0.0020042311546598374},"api-crypto.html":{"ref":"api-crypto.html","tf":0.008350730688935281},"api-http.html":{"ref":"api-http.html","tf":0.00322108345534407},"api-net.html":{"ref":"api-net.html","tf":0.0056016597510373444},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684},"api-turn.html":{"ref":"api-turn.html","tf":0.0028072364316905803},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.002386634844868735},"LICENSE.html":{"ref":"LICENSE.html","tf":0.022263450834879406}},"e":{"docs":{},"r":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042},"LICENSE.html":{"ref":"LICENSE.html","tf":0.004174397031539889}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}},",":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0009357454772301934}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}},"docs":{}},"docs":{}}}}}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571}}},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}}}}}}}}}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}},"|":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}},"'":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},"s":{"docs":{},"'":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"x":{"5":{"0":{"9":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"a":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"g":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}},"v":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-uv.html":{"ref":"api-uv.html","tf":10.01010101010101}},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}}},"_":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00808080808080808}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993},"api-uv.html":{"ref":"api-uv.html","tf":0.00808080808080808}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00808080808080808}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"api-util.html":{"ref":"api-util.html","tf":10.000898472596585},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}}}},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187}},")":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"v":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}}},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"b":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.009259259259259259}}}}}}},"r":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0017569546120058566}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0010248901903367497}}}},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0014641288433382138}}}}}}}},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"u":{"docs":{},"v":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"3":{"2":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}},"docs":{}},"6":{"4":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}},"8":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"8":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}},"docs":{}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"examples.html":{"ref":"examples.html","tf":0.019867549668874173},"api-av.html":{"ref":"api-av.html","tf":0.0025806451612903226},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}}}}}}}}}}}}},";":{"docs":{"./":{"ref":"./","tf":0.0015625}}},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0003225806451612903}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"8":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}},"docs":{}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.015}}}}}},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.05870967741935484},"api-base.html":{"ref":"api-base.html","tf":0.03334817949003452},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0055671537926235215},"api-http.html":{"ref":"api-http.html","tf":0.030307467057101026},"api-json.html":{"ref":"api-json.html","tf":0.09302325581395349},"api-net.html":{"ref":"api-net.html","tf":0.03983402489626556},"api-pacm.html":{"ref":"api-pacm.html","tf":0.07455960671855796},"api-sked.html":{"ref":"api-sked.html","tf":0.05670665212649945},"api-socketio.html":{"ref":"api-socketio.html","tf":0.07166123778501629},"api-stun.html":{"ref":"api-stun.html","tf":0.038396386222473176},"api-symple.html":{"ref":"api-symple.html","tf":0.03537653239929948},"api-turn.html":{"ref":"api-turn.html","tf":0.059263880224578916},"api-util.html":{"ref":"api-util.html","tf":0.07726864330637916},"api-uv.html":{"ref":"api-uv.html","tf":0.052525252525252523},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.04295942720763723}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0025806451612903226}}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"*":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742},"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"*":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"*":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"*":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.001171303074670571}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"y":{"docs":{},"f":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}},"s":{"docs":{},"d":{"docs":{},"k":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.009034443817052512}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"*":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0035938903863432167}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"*":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.001037344398340249},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation-linux.html":{"ref":"installation-linux.html","tf":0.009259259259259259},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.0024890190336749633},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.004506349856616141},"LICENSE.html":{"ref":"LICENSE.html","tf":0.01020408163265306}},")":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.0014641288433382138},"api-pacm.html":{"ref":"api-pacm.html","tf":0.004096681687832855}}},",":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-pacm.html":{"ref":"api-pacm.html","tf":0.005325686194182712}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}},"\"":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}},"”":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"f":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-net.html":{"ref":"api-net.html","tf":0.002904564315352697}},"i":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"x":{"5":{"0":{"9":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}}}},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.003479471120389701},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}}}}}},"s":{"docs":{},")":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005},"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"o":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"l":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742},"api-base.html":{"ref":"api-base.html","tf":0.0017815388041420776}}},"u":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0016129032258064516},"api-base.html":{"ref":"api-base.html","tf":0.0034517314330252758},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-http.html":{"ref":"api-http.html","tf":0.004099560761346999},"api-json.html":{"ref":"api-json.html","tf":0.009966777408637873},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-sked.html":{"ref":"api-sked.html","tf":0.006543075245365322},"api-stun.html":{"ref":"api-stun.html","tf":0.011857707509881422},"api-symple.html":{"ref":"api-symple.html","tf":0.004203152364273205},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}},"e":{"docs":{},",":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}}}},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.0011691348402182386},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-json.html":{"ref":"api-json.html","tf":0.0033222591362126247},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-util.html":{"ref":"api-util.html","tf":0.0008984725965858042}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0010021155773299187},"api-http.html":{"ref":"api-http.html","tf":0.0017569546120058566},"api-json.html":{"ref":"api-json.html","tf":0.013289036544850499},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-stun.html":{"ref":"api-stun.html","tf":0.006775832862789385},"api-symple.html":{"ref":"api-symple.html","tf":0.0070052539404553416}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}},":":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.0033879164313946925},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}},",":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0011134617525887986}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0020876826722338203},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"api-symple.html":{"ref":"api-symple.html","tf":0.0010507880910683013},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0032773453502662844},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.004903677758318739}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.07042253521126761},"api-av.html":{"ref":"api-av.html","tf":0.026451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.03351519875292284},"api-crypto.html":{"ref":"api-crypto.html","tf":0.030619345859429367},"api-http.html":{"ref":"api-http.html","tf":0.046412884333821375},"api-json.html":{"ref":"api-json.html","tf":0.0664451827242525},"api-net.html":{"ref":"api-net.html","tf":0.03755186721991701},"api-pacm.html":{"ref":"api-pacm.html","tf":0.03031544448996313},"api-sked.html":{"ref":"api-sked.html","tf":0.05452562704471101},"api-socketio.html":{"ref":"api-socketio.html","tf":0.04723127035830619},"api-stun.html":{"ref":"api-stun.html","tf":0.05533596837944664},"api-symple.html":{"ref":"api-symple.html","tf":0.04273204903677758},"api-turn.html":{"ref":"api-turn.html","tf":0.06051154086088584},"api-util.html":{"ref":"api-util.html","tf":0.03773584905660377},"api-uv.html":{"ref":"api-uv.html","tf":0.04040404040404041},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.04009546539379475}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"e":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0038186157517899762}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}},"docs":{}},"docs":{}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{"./":{"ref":"./","tf":0.003125},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}},"c":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.003125},"examples.html":{"ref":"examples.html","tf":0.013245033112582781}}}}},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0046875},"installation.html":{"ref":"installation.html","tf":0.00404040404040404},"installation-linux.html":{"ref":"installation-linux.html","tf":0.018518518518518517},"examples.html":{"ref":"examples.html","tf":0.033112582781456956},"api-webrtc.html":{"ref":"api-webrtc.html","tf":10.001431980906922}},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}},".":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00202020202020202}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"examples.html":{"ref":"examples.html","tf":0.013245033112582781},"api-http.html":{"ref":"api-http.html","tf":0.0014641288433382138},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}},"s":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"w":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}}}},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}},"'":{"docs":{},"v":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555}}}}}}},"e":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0012248079278476785},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.003125},"installation.html":{"ref":"installation.html","tf":0.00404040404040404},"installation-windows.html":{"ref":"installation-windows.html","tf":5.015}},"s":{"docs":{},".":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003125},"installation-linux.html":{"ref":"installation-linux.html","tf":0.009259259259259259},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"i":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}},"i":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0012903225806451613}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.001935483870967742}}}}}}}},"e":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}},"s":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"l":{"docs":{},"l":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}}}},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0016597510373443983}},".":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}}}}}},"s":{"docs":{},"h":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},")":{"docs":{},";":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},".":{"docs":{},")":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.003125},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"examples.html":{"ref":"examples.html","tf":0.006622516556291391},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"LICENSE.html":{"ref":"LICENSE.html","tf":0.021799628942486084}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0006224066390041493},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},".":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.00040966816878328555},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},"s":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0015625},"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-uv.html":{"ref":"api-uv.html","tf":0.00202020202020202}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218},"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0013914656771799629}},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}}}}},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0011691348402182386},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.005856515373352855},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-stun.html":{"ref":"api-stun.html","tf":0.006775832862789385},"LICENSE.html":{"ref":"LICENSE.html","tf":0.002319109461966605}},"a":{"docs":{},"m":{"docs":{},"f":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"v":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.0017569546120058566},"api-stun.html":{"ref":"api-stun.html","tf":0.012422360248447204}}},",":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}},"(":{"docs":{},")":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-stun.html":{"ref":"api-stun.html","tf":0.000564652738565782},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}},"i":{"docs":{},"t":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.01129305477131564}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0005567308762943993}}}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0017569546120058566}}}}}}}}}}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926},"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498},"api-sked.html":{"ref":"api-sked.html","tf":0.0010905125408942203}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},",":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0027829313543599257}}},"y":{"docs":{},";":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}}}}},"y":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"y":{"docs":{},")":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521},"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-pacm.html":{"ref":"api-pacm.html","tf":0.009012699713232281},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-util.html":{"ref":"api-util.html","tf":0.005390835579514825}}}},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"v":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991},"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402},"api-net.html":{"ref":"api-net.html","tf":0.0012448132780082987},"LICENSE.html":{"ref":"LICENSE.html","tf":0.003246753246753247}}}}},"e":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.002319109461966605}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"s":{"docs":{},"e":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}}}}},"s":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00043923865300146415}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00014641288433382137}}}}},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}},"w":{"docs":{},"w":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},":":{"8":{"0":{"8":{"0":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"x":{"5":{"0":{"9":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}},"x":{"5":{"0":{"9":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"x":{"5":{"0":{"9":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}},"docs":{}},"docs":{}},"docs":{}}},".":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.0015625},"installation.html":{"ref":"installation.html","tf":0.00404040404040404},"installation-osx.html":{"ref":"installation-osx.html","tf":3.333333333333333},"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"u":{"docs":{"./":{"ref":"./","tf":0.0015625}}},"x":{"docs":{},"x":{"docs":{"installation.html":{"ref":"installation.html","tf":0.00808080808080808}}}},")":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.022988505747126436}},",":{"docs":{"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}}}}}},"m":{"docs":{},"l":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}},"y":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"o":{"docs":{},"u":{"docs":{},"'":{"docs":{},"r":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444},"installation.html":{"ref":"installation.html","tf":0.00202020202020202},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.0009276437847866419}}},";":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"e":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}},"a":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},")":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791}}}}}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}},"s":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}},"s":{"docs":{},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"t":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}},"z":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0015625}}}}},"r":{"docs":{},"o":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0006958942240779402}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}},"i":{"docs":{},"p":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.01}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0013361541031065582}},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0003897116134060795}}}}}}},"{":{"docs":{"./":{"ref":"./","tf":0.003125},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"}":{"docs":{},"\\":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"\\":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"f":{"docs":{},"f":{"docs":{},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"}":{"docs":{},"\\":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"}":{"docs":{},"\\":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"}":{"docs":{},"\\":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"}":{"docs":{},".":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}},"}":{"docs":{"./":{"ref":"./","tf":0.003125},"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978},"api-net.html":{"ref":"api-net.html","tf":0.0002074688796680498}}},"—":{"docs":{"./":{"ref":"./","tf":0.034375},"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}},"#":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.024305555555555556},"installation.html":{"ref":"installation.html","tf":0.01818181818181818},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-osx.html":{"ref":"installation-osx.html","tf":0.034482758620689655}}},"$":{"docs":{},"(":{"docs":{},"p":{"docs":{},"k":{"docs":{},"g":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}},"{":{"docs":{},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"}":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"}":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"}":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}},"s":{"docs":{},"}":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"}":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"}":{"docs":{},"/":{"docs":{},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"}":{"docs":{},"/":{"docs":{},"*":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}},"h":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"}":{"docs":{},")":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}},"s":{"docs":{},"}":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.003472222222222222}}}}}}},".":{"docs":{"installation.html":{"ref":"installation.html","tf":0.01818181818181818},"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0003502626970227671}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"/":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}}}}}}}}}},"\\":{"docs":{"installation.html":{"ref":"installation.html","tf":0.11717171717171718}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-json.html":{"ref":"api-json.html","tf":10.003322259136212},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-socketio.html":{"ref":"api-socketio.html","tf":0.003257328990228013},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.009259259259259259}}}}},",":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249},"api-pacm.html":{"ref":"api-pacm.html","tf":0.004096681687832855},"api-socketio.html":{"ref":"api-socketio.html","tf":0.008143322475570033},"api-symple.html":{"ref":"api-symple.html","tf":0.009807355516637478},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}},".":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881}}},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}},"a":{"docs":{},"n":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}},"b":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}},"u":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0008907694020710388}},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000779423226812159}}}}}}}}}},"d":{"docs":{},"g":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}},"~":{"docs":{},"/":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.009259259259259259},"installation-osx.html":{"ref":"installation-osx.html","tf":0.011494252873563218}}}}}},"~":{"docs":{},"~":{"docs":{"installation-linux.html":{"ref":"installation-linux.html","tf":0.004629629629629629}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.014084507042253521}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}},"h":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"x":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"w":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"n":{"docs":{},"v":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}},"(":{"docs":{},")":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"d":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}}}}}},"x":{"5":{"0":{"9":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"d":{"docs":{},"p":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"6":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}}}}},"[":{"0":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}},"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"installation-windows.html":{"ref":"installation-windows.html","tf":0.005}}}}}},"f":{"docs":{},"c":{"5":{"3":{"8":{"9":{"docs":{},"]":{"docs":{},")":{"docs":{},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},".":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"*":{"docs":{},"]":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},"(":{"docs":{},"#":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"_":{"docs":{},"_":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"_":{"1":{"docs":{},"g":{"docs":{},"a":{"docs":{},"f":{"7":{"8":{"docs":{},"f":{"4":{"5":{"0":{"1":{"6":{"docs":{},"b":{"7":{"2":{"docs":{},"c":{"9":{"docs":{},"b":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"4":{"2":{"4":{"docs":{},"e":{"9":{"docs":{},"a":{"3":{"1":{"6":{"9":{"1":{"docs":{},"d":{"docs":{},"b":{"8":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.00047732696897374703}}}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"]":{"docs":{},"(":{"docs":{},"#":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"y":{"docs":{},"_":{"1":{"docs":{},"_":{"1":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"&":{"docs":{"api-archo.html":{"ref":"api-archo.html","tf":0.056338028169014086},"api-av.html":{"ref":"api-av.html","tf":0.04064516129032258},"api-base.html":{"ref":"api-base.html","tf":0.019151542144527335},"api-crypto.html":{"ref":"api-crypto.html","tf":0.04453723034098817},"api-http.html":{"ref":"api-http.html","tf":0.038653001464128846},"api-json.html":{"ref":"api-json.html","tf":0.09302325581395349},"api-net.html":{"ref":"api-net.html","tf":0.009128630705394191},"api-pacm.html":{"ref":"api-pacm.html","tf":0.026218762802130275},"api-sked.html":{"ref":"api-sked.html","tf":0.04798255179934569},"api-socketio.html":{"ref":"api-socketio.html","tf":0.03420195439739414},"api-stun.html":{"ref":"api-stun.html","tf":0.012422360248447204},"api-symple.html":{"ref":"api-symple.html","tf":0.0595446584938704},"api-turn.html":{"ref":"api-turn.html","tf":0.01933873986275733},"api-util.html":{"ref":"api-util.html","tf":0.025157232704402517},"api-uv.html":{"ref":"api-uv.html","tf":0.012121212121212121},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.021957040572792363}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0006680770515532791},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}},">":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},",":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}}}}}},"*":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.007741935483870968},"api-base.html":{"ref":"api-base.html","tf":0.018372118917715178},"api-crypto.html":{"ref":"api-crypto.html","tf":0.019485038274182326},"api-http.html":{"ref":"api-http.html","tf":0.004978038067349927},"api-net.html":{"ref":"api-net.html","tf":0.019087136929460582},"api-pacm.html":{"ref":"api-pacm.html","tf":0.007374027038099139},"api-pluga.html":{"ref":"api-pluga.html","tf":0.11428571428571428},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-socketio.html":{"ref":"api-socketio.html","tf":0.009771986970684038},"api-stun.html":{"ref":"api-stun.html","tf":0.007905138339920948},"api-symple.html":{"ref":"api-symple.html","tf":0.014711033274956218},"api-turn.html":{"ref":"api-turn.html","tf":0.014971927635683094},"api-util.html":{"ref":"api-util.html","tf":0.016172506738544475},"api-uv.html":{"ref":"api-uv.html","tf":0.03636363636363636},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.05346062052505966}},")":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0018928849794009575},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855},"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}},"*":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},",":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"&":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0017815388041420776},"api-symple.html":{"ref":"api-symple.html","tf":0.0014010507880910684}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"n":{"docs":{},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.000055673087629439926}}}}}}},"&":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}},"s":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0008298755186721991}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}},"p":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}},"d":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}},"a":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"t":{"docs":{},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0004453847010355194}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.002258610954263128}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"i":{"docs":{},"d":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"(":{"0":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}},"docs":{}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}},";":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407},"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066},"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"z":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-sked.html":{"ref":"api-sked.html","tf":0.004362050163576881}}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{"api-av.html":{"ref":"api-av.html","tf":0.0006451612903225806}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"s":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},"b":{"docs":{},"i":{"docs":{},"o":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"v":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}},"k":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"r":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}}}}}}}}},"v":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}},"u":{"docs":{},"s":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-stun.html":{"ref":"api-stun.html","tf":0.001129305477131564}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0008784773060029283}}}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0017569546120058566}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"x":{"docs":{},"t":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}}},"t":{"docs":{},"x":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0027835768963117608}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00016701926288831978}}}}}}}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}},"e":{"docs":{},"g":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},"i":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"t":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804}}}}}},"o":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0019093078758949881}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"i":{"docs":{},"b":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"p":{"docs":{},"o":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}},"o":{"docs":{},"p":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597},"api-crypto.html":{"ref":"api-crypto.html","tf":0.0013917884481558804},"api-sked.html":{"ref":"api-sked.html","tf":0.0021810250817884407}}}}},"s":{"docs":{},"p":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-turn.html":{"ref":"api-turn.html","tf":0.0012476606363069245}}}}}}},"u":{"docs":{},"t":{"docs":{},"g":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275},"api-json.html":{"ref":"api-json.html","tf":0.006644518272425249}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}}}},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}}},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}},"i":{"docs":{},"d":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.0002226923505177597}}}}}}}},"o":{"docs":{},"c":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0016386726751331422}}}}}}}}},"t":{"docs":{},"r":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996},"api-uv.html":{"ref":"api-uv.html","tf":0.00404040404040404}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}},"b":{"docs":{},"i":{"docs":{},"o":{"docs":{"api-net.html":{"ref":"api-net.html","tf":0.0004149377593360996}}}}}},"l":{"docs":{},"m":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.0005856515373352855}}},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{"api-pacm.html":{"ref":"api-pacm.html","tf":0.0008193363375665711}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api-socketio.html":{"ref":"api-socketio.html","tf":0.0016286644951140066}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"api-webrtc.html":{"ref":"api-webrtc.html","tf":0.0009546539379474941}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}},"t":{"docs":{"api-symple.html":{"ref":"api-symple.html","tf":0.0007005253940455342}}}}},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985},"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00011134617525887985}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{"api-http.html":{"ref":"api-http.html","tf":0.00029282576866764275}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623},"api-util.html":{"ref":"api-util.html","tf":0.0017969451931716084}}}}}}}}}},"@":{"docs":{"api-base.html":{"ref":"api-base.html","tf":0.00033403852577663955}}},"+":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.006862133499688085}},"|":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},"<":{"docs":{},">":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},"^":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}},"|":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}}},"|":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.021210230817217717}},"+":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},"/":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}},"^":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0006238303181534623}}},"a":{"docs":{},"|":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},"n":{"docs":{},"|":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}},"t":{"docs":{},"|":{"docs":{},"|":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.00031191515907673113}}}}},"|":{"docs":{"api-turn.html":{"ref":"api-turn.html","tf":0.0018714909544603868}}}},"©":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}},"“":{"docs":{},"a":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},"n":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"”":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"”":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}},",":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"”":{"docs":{},".":{"docs":{},")":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00463821892393321}}}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"”":{"docs":{},".":{"docs":{"LICENSE.html":{"ref":"LICENSE.html","tf":0.00046382189239332097}}}}}}}}},"length":10983},"corpusTokens":["\"\"","\"action\"","\"application/x","\"close\"","\"configure\"","\"debug\"","\"debug\",","\"generate\".","\"includ","\"keep","\"libfdk_aac\",","\"libx264\",","\"mp4\",","\"multipart/form","\"release\"","\"s16\"));","\"sdk","\"type\"","\"where","\"yuv420p\"),","#","$(pkg","${cmake_include_path}","${cmake_module_path}","${headerfiles})","${headers})","${libsourcey_include_dirs})","${libsourcey_root_dir}/cmake)","${sourcedir}/*.cpp)","${sourcedir}/*.h)","${sourcefiles})","${sources}","&","&)","&)>","&,","&,const","&,tvalu","':'","'add","'from'","'to'","(.dll/.so)","(.lib/.a).","(0","(0)","(1","(1)","(1).","(10","(1969","(2)","(2001","(32","(8","(>=","(@auscaster)","(@michael","(@surinkim)","(@vincishark)","(@yuryshubin)","(@zelimdamian)","(a","(a,","(accord","(af_inet","(all","(alloc","(also","(am/pm)","(and","(basic","(becaus","(bi","(c++","(client'","(cmd","(compiler,","(constdatetime&","(constlocaldatetime&","(consttimespan&","(consttimestamp&","(contain","(controllers?)","(coordin","(copied).","(ctrl","(default:","(denot","(devman.getdefaultcamera(device))","(devman.getdefaultmicrophone(device))","(e.g.","(e.g.,","(eg:","(example:","(except","(execut","(file","(first)","(for","(frame).","(gcc)","(git","(h)","(hereinafter,","(hours,","(http/1.0","(if","(in","(includ","(independ","(instanti","(interact","(ipv4)","(ipv6)","(it","(iv)","(linux","(mi","(msys,","(name","(ninja","(no","(nocopi","(nocopy).","(not","(o","(option","(optional)","(optional):","(optional,","(or","(other","(payload)","(prng).","(rfc5389)","(rfc5766)","(see","(selective)","(sma)","(stale","(ten","(the","(theoretical)","(timediff","(timediffd)","(travers","(use","(utc","(uv,","(w","(whether","(which","(win32","(with","(xcode,","(year","(you","*","*&","*)","**","*,basic::polymorphic&","*,constmutablebuffer&","*,constnet::dnsresult&","*,diagnosticstate&","*,ipacket&","*,p","*,sockio::packet&","*,void","*this.","+","+|","..","...","...,","./build.sh",".cmake","/","//","///","//mutex::scopedlock","/etc/ld.so.conf.d/opencv.conf'","/usr/local/lib/pkgconfig/libsourcey.pc","0","0.","0.0","0.0.0.0:0","0.8.x","00","01","02110","0;","0x","1","1)","1,","1.","1.0).","1.0.","1.0.1g,","1.8.0,","10):","10.","100","100].","1024*20,","11.","12","12).","12.","128000,","13.","1301","14.","14.04,","15,","15.","15.04)","1582.","16.","192.168.1.10:80","1970.","1991,","1999","1999copyright","2","2)","2,","2.","2.1+","2.1,","2.1.","2.8.10)","2.8.3,","2000),","2005,","2007,","2007.","200:","2068).","20th","2109","2109)","21th","23).","23.","25,","256","2822","2^69.","2d","3)","3.","3.0,","3.3.1","3.6).","30","30);","300,","31","31).","31.","32","32,","3986","4","4.","4.1.2,","400).","400,","400:","401","401:","438","44100);","44100,","443),","4507","4566","480,","48000,","486","5","5.","500:","5245","53.","5389","5766","59).","59.","6","6,","6.","6.)","6.2),","600","6062","64","640,","64000,","6455.","68","69","6a,","7.","8.","80","80,","8601","8601.","9.","999)","999).","999.","9999.","999999).",":",":)","<>","=","=(const","=(consttimespan&","=(timediff","=(timediffd)","=>",">",">=",">advanc",">environ",">path)",">properti","@","[*]","[0","[create()](#group__webrtc_1gaf78f45016b72c9bdca424e9a31691db8)","[peerconnection](#classscy_1_1peerconnection)","[rfc5389]).","[rfc5389].","[right","\\","^","^|","_acceptor","_ack","_action","_activ","_adapt","_algorithm","_announcestatu","_attempt","_attr","_audiomodul","_audiotrack","_autostart","_avfram","_awaitingaudio","_awaitingvideo","_bandwidthlimit","_bandwidthus","_basenam","_boundari","_buf","_buffer","_bufferout","_buffers","_cancel","_captur","_channel","_cipher","_class","_clientdata","_close","_closeonerror","_complet","_config","_connect","_connectreq","_constraint","_contenttyp","_context","_control","_count","_createdat","_ctx","_current","_data","_datetim","_defaultchannel","_delay","_deleg","_delet","_destroy","_dir","_dirti","_dlconn","_download","_emitt","_enabl","_encod","_encrypt","_error","_event","_extens","_factori","_filenam","_files","_fileslength","_filter","_final","_format(format)","_frame","_free","_freeclosedstream","_fstream","_handl","_height","_id","_ignoreerror","_initi","_initial(true)","_initialwrit","_interv","_istr","_istream","_lastheaderfield","_lastheadervalu","_length","_level","_lib","_lifetim","_limit","_linelength","_linepo","_load","_local","_loop","_manag","_map","_max","_maxlifetim","_md","_messag","_method","_modifyingstream","_modifyingstream(false)","_name","_nonc","_nsp","_observ","_ostream","_ourid","_outgoingbuff","_packag","_parser","_part","_password","_path","_peerconnect","_peerid","_pend","_pendingind","_permiss","_pinginterv","_pingtimeout","_prioriti","_proc","_processor","_progress","_ptr","_queue;","_readbio","_readi","_realm","_reconnect","_remot","_renderedtrack","_repeat","_request","_requestcomplet","_respond","_respons","_retri","_room","_root","_rotatedat","_rotationinterv","_runner","_schedul","_sender","_server","_session","_sessionid","_set","_shouldsendhead","_size","_socket","_sourc","_ssl","_startat","_starttim","_state","_stream","_task","_test","_tid","_timeformat","_timeout","_timeout;","_timestampoffset","_timestampoffset(0)","_transact","_transactionid","_trigger","_type","_tzd","_updatedat","_upgrad","_uppercas","_usernam","_videoonli","_videotrack","_waitingforkeyfram","_waitingforkeyframe(false)","_washeadervalu","_wasonlin","_width","_writebio","_writer","_writest","a)","a),","abort","about,","abov","above);","above,","above.","absenc","absolut","abstract","abstractcollect","abstractcollection()","accept","acceptconnect","acceptconnection()","accepts(ipacket&)","accepts(void","acceptserverrequest(http::request&","access","accessed,","accessed.","accessor","accessors,","accessors.","accompani","accord","accordingly.","accurate,","achiev","ack","ack)","act","action","action()","action(callback_t","action)","action.","activ","activated.","active()","active)","active,","active.","activeaudiolayer(audiolay","actual","ad","adapt","adapter)","adapter,bool","adapter,int","adapters()","adapters,","adapters.","adaptert","add","add(attribute*","add(const","add(iuser*","add(logchannel*","add(task*","add(test*","add(unsign","add_executable(exampleapp","addallocation(serverallocation*","addchaincertificate()","addchaincertificate(constcrypto::x509certificate&","addconnection(clientconnection::ptr","addconnection(serverconnection::ptr","addcookie(constcookie&","adddiagnostic(idiagnostic*","added.","added/cr","adderror(const","addincomingdata(const","addit","addition","addition,","addmediatracks(webrtc::peerconnectionfactoryinterfac","addnote(const","addoption(const","addoutgoingdata(const","addpart(const","addpermission(const","addpermissions(const","addr()","addr)","addr,socklen_t","addr,std::uint16_t","addreceiver(socketadapter*","addref()","address","address()","address(const","address(constaddress&","address)","address,","address,unsign","address.","address;","address`&","addressattribute(constaddressattribute&","addressattribute(std::uint16_t","addressbase()","addrinfo","addstream(packetstream*","addsummary(const","addtask(installtask::ptr","addtype(std::uint16_t","addvalue(bool","addvalue(const","addvalue(doubl","addvalue(int","addverificationcertificate(constcrypto::x509certificate&","adher","adjust","adjust)","adjustfortzd()","adobe'","advanc","advantag","advis","af()","af_inet6)","affect","afterrun()","ag","again","again()","again,","against","agc()","age,","agent","aggreg","agre","agreement","aim","algorithm","algorithm(void)","algorithm)","algorithm.","alia","alive\"","all.","allcomplete()","alleg","alloc","alloc)","allocation'","allocation)","allocation,","allocation.","allocationdefaultlifetim","allocationmaxlifetim","allocationmaxpermiss","allocations()","allocations)","allocations,","allot","allow","allowance.","allowed.","allowempty)","along","alphanumer","alreadi","also,","also:","alter","although","alway","am/pm","amf","amount","analysi","and,","and/or","android","announc","announce()","anoth","answer.","ansynchron","any()","any).","any.","anyth","api","api.","apivers","appeared,","append","append*","appl","appli","applic","application'","application(application&&)","application(constapplication&)","application(uv::loop","application.","application/octet","applications,","applications.","apply,","appropri","appropriate.","apps.","apt","arbitrari","architecture.","archiv","archive.","archo","are:","aren't","arg","arg)","arg,const","arg,p2","arg,void","arg2)","arg2,p3","arg2,void","arg3)","arg3,p4","arg3,void","arg4)","arg_state,std::int32_t","argc,char","args.","argument","argument,","argument.","argv,const","aris","arithmet","around","array","array.","arsen","as(bool","asap.","ask","assert","assertcanmodify()","assertthread()","asset","asset)","asset,","assets()","assign","assign(int","assign(long","assign.","assigndataownership()","assignment.","associ","asstring()","assum","astronom","async","async()","async.","async::runner::ptr","async::startable.","asynchron","asynchronously.","asynclogwriter()","asyncpacketqueu","asyncpacketqueue(int","asyncqueu","asyncqueue(int","asyncron","asyncstartable()","at.","atomic,","attach","attach()","attach(const","attach(packetadapterreference::ptr","attach(packetprocessor*","attach(std::shared_ptr","attachment.","attachsource()","attachsource(packetadapterreference::ptr","attachsource(packetsignal&","attachsource(packetstreamadapter*","attachsource(std::shared_ptr","attack","attempt","attempts()","attent","attr)","attribut","attribute(std::uint16_t","attributes.","attrs()","audio","audio,","audio,int","audio.getencoderformat(options.iformat);","audio.open(device.id,","audio;","audio_callback)","audio_data,int","audio_layer)","audiocodec&","audiocodec()","audiocodec(const","audiodevicemodul","audiopacket&","audiopacket(const","audiopacket(std::uint8_t","audiopacketmodul","audiopacketmodule()","audiotracksinkinterfac","authent","authenticate(http::request&","authenticaterequest(server*","authenticaterequest(stun::message&","authentication)","authentication),","authentication.","authenticationst","authenticator()","authenticator(const","authenticator.","authinfo","authinfo)","author","author'","author()","author/donor","authority()","authority)","authority,const","auto","automat","autostart(bool","autostart)","av","av::audiocapture::ptr","av::audiocodec(\"aac\",","av::devic","av::devicemanag","av::encoderopt","av::format(\"mp4\",","av::mediacapture::ptr","av::multiplexencod","av::multiplexpacketencoder::ptr","av::videocapture::ptr","av::videocodec(\"h.264\",","av::videoencod","avail","available()","available)","available,","averag","avfram","avoid","await","away","awesome).","b","b)","b),","back","back()","back).","backlog)","bad","badrequesthandler(serverconnection&","balanc","bandwidth","bandwidthlimit()","bandwidthremaining()","bandwidthused()","base","base)","base.","base64","base64)","base64packetencoder()","based,","basekey)","basename)","baset","basic","basic::stratable,","basicauthent","basicauthenticator()","basicauthenticator(const","basicauthenticator(consthttp::request&","basicauthenticator.","basicuser(const","baum","bc)","be","becom","befor","before,","beforerun()","beforestatechange(const","begin","begin()","behaviour,","believ","belong","below","below,","below.","benchmarking.","beor","best","best_format)","better","between","between(id","big","binari","binaries.","bind","bind()","bind(constaddress&","bind(constnet::address&","bindings.","bindshutdownsignal(std::funct","bio","bit","bit)","bitrat","bitrate,bool","bitrate,const","bitrate,int","bitread","bitreader(const","bitreader(constconstbuffer&","bitreader.","bits)","bits_per_sample,int","bitwise(unsign","bitwrit","bitwriter(buff","bitwriter(char","bitwriter(mutablebuffer&","blaze","bloat.","block","blocking,","blocksize()","bodi","bool","boolean","boolean.","boolean:","boolvalue()","boradcast","boston,","both","bound","boundari","boundary()","boundary)","boundary.","box","brackets.","branch","break","brew","bridg","bring","broadcast","broken","browser","browser,","browser.","browsers.","bucket","buf)","buf,byteorderorder)","buf,constnet::address&","buf,std::size_t","buf,std::uint32_t","buffer","buffer()","buffer)","buffer,constaddress&","buffer,constnet::address&","buffer,std::size_t","buffer.","buffers.","buffersize)","buffersize;","buffertyp","build","build_al","build_application_xxx:","build_applications:","build_dependencies:","build_module_samples:","build_module_xxx:","build_modules:","build_sample_xxx:","build_samples:","build_shared_libs:","build_test_xxx:","build_tests:","built","builtin","builtinaecisavailable()","builtinagcisavailable()","builtinnsisavailable()","burden","button","byte","bytes()","bytes)","bytes,std::size_t","bytes,unsign","bytes.","c","c)","c).","c++","c++11","c:\\libsourcey\\build\\libsourcey.sln).","ca","ca/root","cach","cache,","cache.","caching.","calcul","calculated.","calculatemultipartcontentlength()","calendar","calendar.","call","call.","callback","callback,void","callback.","callback;","callback_t","callbacks.","callbackt","called,","called.","caloc","calocation,verificationmodeverificationmode,int","cancel","cancel()","cancel(bool","cancel(sked::task*","cancel(task*","cancelall()","cancelalltasks()","cancellation.","cancelled()","cancelled.","canchange(id","candid","candidate)","candidate.","candidates.","canresend()","cansend()","capabilities.","capacity.","captur","capture,","capture_format)","carefulli","carri","carriag","case","case,","cases,","cases.","cast","caus","caution:","caveat","cd","ceas","centuri","cert)","cert,int","certain","certif","certificate'","certificate()","certificate)","certificate.","certificatefil","certificatefile,const","certificates.","cflag","chain","chain,","chain.","chang","change(id","change.","changed,","changed.","changes.","channel","channel)","channel,","channel.","channels,int","channels.[name].modes.[name].[value]","channeltyp","char","charact","character.","characters,","charg","charge,","chat","cheap","check","check()","check.","checkall()","checkbox,","checkclienthandshakeresponse(http::response&","checkout","checkresponse(const","checkresponse(constmessage&","checkresponse(constsockio::packet&","child","choic","choice,","choice.","choos","chose","chunk","chunk.","chunked.","chunked_transfer_coding.","chunkedadapter(connection*","chunkedadapter(const","cipher","cipher()","cipher(const","cipher(constcipher&)","cipher.","cipherlist","cipherlist)","ciphers.","circular","circumstance,","circumstances.","claim","claims;","class","class.","classes).","classes.","classnam","classname()","classscy::abstractcollect","classscy::appl","classscy::async::flag","classscy::async::runn","classscy::async::send","classscy::async::start","classscy::asyncdiagnost","classscy::asynclogwrit","classscy::asyncpacketqueu","classscy::asyncqueu","classscy::asyncstart","classscy::audiopacketmodul","classscy::av::devicemanag","classscy::av::devicemanagerfactori","classscy::av::devicewatch","classscy::av::fakedevicemanag","classscy::av::flvmetadatainjector","classscy::av::formatregistri","classscy::av::fpscount","classscy::av::fpslimit","classscy::av::icaptur","classscy::av::idevicemanag","classscy::av::iencod","classscy::av::linuxdevicemanag","classscy::av::macdevicemanag","classscy::av::macdevicewatch","classscy::av::realtimepacketqueu","classscy::base64packetencod","classscy::basic::decod","classscy::basic::encod","classscy::basic::polymorph","classscy::basicus","classscy::bitread","classscy::bitwrit","classscy::configur","classscy::consolechannel","classscy::constbuff","classscy::crypto::ciph","classscy::crypto::hash","classscy::crypto::x509certif","classscy::datetim","classscy::datetimeformat","classscy::datetimeformatt","classscy::datetimepars","classscy::deleg","classscy::diagnosticmanag","classscy::dummysetsessiondescriptionobserv","classscy::filechannel","classscy::flagpacket","classscy::garbagecollector","classscy::http::authent","classscy::http::badrequesthandl","classscy::http::basicauthent","classscy::http::chunkedadapt","classscy::http::cli","classscy::http::clientadapt","classscy::http::clientconnect","classscy::http::connect","classscy::http::connectionadapt","classscy::http::cooki","classscy::http::filepart","classscy::http::formpart","classscy::http::formwrit","classscy::http::messag","classscy::http::multipartadapt","classscy::http::pars","classscy::http::parserobserv","classscy::http::progresssign","classscy::http::request","classscy::http::respons","classscy::http::serv","classscy::http::serveradapt","classscy::http::serverconnect","classscy::http::serverrespond","classscy::http::serverresponderfactori","classscy::http::stringpart","classscy::http::url","classscy::http::ws::connectionadapt","classscy::http::ws::websocket","classscy::http::ws::websocketadapt","classscy::http::ws::websocketfram","classscy::idiagnost","classscy::idl","classscy::imagesequencerecord","classscy::ipacket","classscy::ipacketcreationstrategi","classscy::ipc::queu","classscy::ipc::syncqueu","classscy::iregistri","classscy::json::configur","classscy::json::iserializ","classscy::kvcollect","classscy::livecollect","classscy::localdatetim","classscy::logchannel","classscy::logg","classscy::logwrit","classscy::multiplexmediacaptur","classscy::mutablebuff","classscy::mutexst","classscy::net::address","classscy::net::addressbas","classscy::net::ipv4addressbas","classscy::net::packetsocketadapt","classscy::net::socket","classscy::net::socketadapt","classscy::net::socketpacket","classscy::net::ssladapt","classscy::net::sslcontext","classscy::net::sslmanag","classscy::net::sslsess","classscy::net::sslsocket","classscy::net::tcpsocket","classscy::net::transact","classscy::net::udpsocket","classscy::net::verificationerrordetail","classscy::nullsign","classscy::nvcollect","classscy::packetfactori","classscy::packetprocessor","classscy::packetstream","classscy::packetstreamadapt","classscy::packettransact","classscy::pacm::installmonitor","classscy::pacm::installtask","classscy::pacm::packagemanag","classscy::peerconnect","classscy::peerconnectionmanag","classscy::pointercollect","classscy::process","classscy::queu","classscy::random","classscy::ratelimit","classscy::rawpacket","classscy::rotatingfilechannel","classscy::runnablequeu","classscy::scopedconfigur","classscy::scopedpoint","classscy::scopedrawpoint","classscy::scopedsharedpoint","classscy::sharedobject","classscy::sign","classscy::signal2","classscy::signal3","classscy::signal4","classscy::signalbas","classscy::singleton","classscy::sked::schedul","classscy::sked::task","classscy::sked::taskfactori","classscy::smpl::cli","classscy::smpl::command","classscy::smpl::ev","classscy::smpl::form","classscy::smpl::formel","classscy::smpl::formfield","classscy::smpl::messag","classscy::smpl::p","classscy::smpl::pres","classscy::smpl::rost","classscy::smpl::sslcli","classscy::smpl::tcpcli","classscy::sockio::cli","classscy::sockio::packet","classscy::sockio::sslcli","classscy::sockio::tcpcli","classscy::st","classscy::statesign","classscy::stoppropag","classscy::stopwatch","classscy::stream","classscy::streammanag","classscy::streamrecord","classscy::streamwrit","classscy::stun::addressattribut","classscy::stun::attribut","classscy::stun::errorcod","classscy::stun::flagattribut","classscy::stun::messag","classscy::stun::messageintegr","classscy::stun::stringattribut","classscy::stun::transact","classscy::stun::uint16listattribut","classscy::stun::uint32attribut","classscy::stun::uint64attribut","classscy::stun::uint8attribut","classscy::synccontext","classscy::syncpacketqueu","classscy::syncqueu","classscy::task","classscy::taskrunn","classscy::test::functiontest","classscy::test::test","classscy::test::testrunn","classscy::thread","classscy::threadedstreamread","classscy::tim","classscy::timedmanag","classscy::timedtoken","classscy::timeout","classscy::timespan","classscy::timestamp","classscy::timezon","classscy::turn::cli","classscy::turn::fivetupl","classscy::turn::ialloc","classscy::turn::request","classscy::turn::serv","classscy::turn::serveralloc","classscy::turn::tcpalloc","classscy::turn::tcpcli","classscy::turn::tcpconnectionpair","classscy::turn::udpalloc","classscy::turn::udpcli","classscy::tzinfo","classscy::usermanag","classscy::uv::handl","classscy::videopacketsourc","classstring()","classtyp","classtype()","clean","cleanup","cleanup()","clear","clear()","clearcache()","clearcachefile(const","cleardata()","clearelements(const","clearerrors()","clearnotes()","clearpackagecache(localpackage&","click]","client","client'","client()","client(clientobserver&","client(const","client)","client,","client,clientstate&","client,const","client,constnet::address&","client,constsockio::packet&","client,conststun::transaction&","client,int","client,long","client.","client::ontimer()","clientadapter(clientconnection&","clientconnect","clientconnection(consturl&","clientconnection::ptr","clientconnectionptrvec","clientdata()","clients,","clientverificationerror","clock","clock_t","clone","clone()","close","close()","closeall()","closeconnection()","closecurrentfile()","closed()","closed.","closeonerror(bool","closes.","closestream(const","closur","closure.","clss,methodtypemeth)","cmake","cmake,","cmake:","cmake_build_type=releas","cmake_library_path.","cmake_minimum_required(vers","cmake_system_prefix_path","cmakelists.txt","cmakelists.txt:","code","code)","code,","code.","codebas","codec","codec&","codec()","codec(const","codec.","code”","coding.","collect","collection.","collections.","collector","colon","colon.","combin","command","command()","command(const","command(constcommand&","command,","commanddelegate(constcommanddelegate&","commanddelegate(constfilter&","comment","comment)","comment,","commit","common","commonli","commonname()","commonname,std::set","commun","communication.","compani","compar","comparison","comparison.","compat","compatability,","compatability.","compatibility.","compel","compet","compil","compiler,","compiler.","compilers.","complet","complete()","complete,","complete.","completeclienthandshake(http::response&","completed,","completes,","completes.","completion.","complex","complianc","compliance.","compliant.","compon","comput","computation.","computedaytime()","computegregorian(doubl","conceptu","concerns.","concurr","condit","conditions.","conditions:","conferenc","config","config,const","configur","configuration()","configuration,","configuration.","conflict","conn)","conn,async::runner::ptr","conn,const","conn,webrtc::mediastreaminterfac","connect","connect()","connect(const","connect(constaddress&","connect(constnet::address&","connected.","connection()","connection(const","connection)","connection,","connection,bool","connection,const","connection,http_parser_typ","connection,ws::modemode)","connection.","connectionadapt","connectionadapter(connection&","connectionbind","connectionid","connectionid)","connectionid,constnet::address&","connections()","connections.","connects,","connects.","consecut","consequ","consequenti","consid","consideration.","consist","consolechannel(const","conspicu","const","const;","constant","constantli","constbuff","constbuffer()","constbuffer(const","constbuffer(constmutablebuffer&","constbytevec&","constcrypto::x509certificate&","constdata()","constiter","constitut","constnet::address&","constraint","constraints()","construct","construction,","constructor","constructor.","constscy::error&","constsocketmodemode()","consum","consumepadding(bitreader&","consuming,","consumpt","contain","container.","contains,","content","content.","contenttyp","contenttype()","contenttype)","contenttype,bool","contenttype,const","contest","context","context()","context)","context,","context.","context::ptr","continu","contradict","contrast,","contribut","contributor","control","control()","control,constfivetuple&","control.","contructor.","conveni","convers","convert","cooki","cookie'","cookie()","cookie(const","cookie(constcookie&","cookie(constnvcollection&","cookie)","cookie).","cookie,","cookie.","cookies)","cookies.","copi","copied.","copies,","copy,","copy.","copy/gener","copyabl","copybytes(const","copydata(const","copying,","copyright","core","correct","correction.","correspond","cost","count","count()","count.","counted.","counter","counter.","countri","countries,","coupl","court","cover","cpuload(uint16_t","creat","create(constconstbuffer&","create)","createandbindconnection(std::uint32_t","createclienthandshakerequest(http::request&","createconnection()","createconnection(const","createconnection(consturl&","createconnectiont(consturl&","created,","created.","createdirectories()","createinstalltask(packagepair&","createinstance(const","createmediastream()","createoffer()","createpacket(constconstbuffer&","createpermiss","createpres","createpresence()","createpresence(presence&","createresponder(serverconnection&","createsessiondescriptionobserv","createtask(const","createtransaction(const","createtransaction(constsockio::packet&","createtransaction(message&","createtrigger()","createtrigger(const","createvideosource()","creation","creation;","creator","credenti","cricket::capturest","cricket::videocaptur","cricket::videoformat","cricket::videofram","criteria","critic","cross","crypto","crypto_dynlock_valu","cryptographi","cstr()","ctors/dtors.","current","current()","currentfilename()","currentscop","currentscope,const","currentsession()","custom","customarili","customer'","cut","d","d)","dailytrigger()","damag","damages,","damages.","damian","data","data\"","data\".","data()","data(const","data)","data,","data,bool","data,const","data,std::size_t","data,unsign","data,void","data.","data:","database,","database.","date","date,","date.","date/tim","date/time.","dates.","dates/tim","datetim","datetime()","datetime(constdatetime&","datetime(consttimestamp&","datetime(doubl","datetime(int","datetime(timestamp::utctimevalutctime,timestamp::timediffdiff)","datetime)","datetime,","datetime,bool","datetime.","datetime::makeutc()","datetimeformatt","datetimeformatter,","datetimeparser.","day","day()","day,int","day.","daylight","dayofweek()","dayofyear()","days()","days,","days,int","days.","daysexclud","daytim","dbl,","dblp","dbuild_applications=off","dbuild_applications=on","dbuild_module_archo=on","dbuild_module_av=on","dbuild_module_base=on","dbuild_module_crypto=on","dbuild_module_http=on","dbuild_module_json=on","dbuild_module_net=on","dbuild_module_pacm=on","dbuild_module_pluga=on","dbuild_module_sked=on","dbuild_module_socketio=on","dbuild_module_stun=on","dbuild_module_symple=on","dbuild_module_turn=on","dbuild_module_util=off","dbuild_module_util=on","dbuild_module_uv=on","dbuild_module_webrtc=on","dbuild_modules=off","dbuild_modules=on","dbuild_samples=off","dbuild_samples=on","dbuild_shared_libs=off","dbuild_tests=off","dbuild_tests=on","dcmake_build_type=debug","dcmake_build_type=releas","de","deadlock","deadlock.","dealt","debug","decid","decim","decis","decod","decode(char","decode(const","decode(std::istream","decoder()","decoder(int","decoding,","decrement","decrypt","decrypting.","decryption.","decryptstream(std::istream","decryptstring(const","default","default)","default,","default.","default:","default_msg","defaultclientcontext()","defaultscop","defaultscope)","defaultservercontext()","defaultvalu","defaultvalue)","defaultvalue,bool","defective,","defer","deferred)","defin","definecallbackfield","definit","definitions.)","delay()","delay)","delay,bool","delay.","delay_ms)","deleg","delegate()","delegate(c","delegate(constdelegate&","delegate)","delegate.","delegatebas","delegatebase(constdelegatebase&","delegatebase(datat","delegatelist","delegates()","delegates().size()","delegates.","delegatet","delet","deleted()","deleted)","deleted,","deleted.","deletelater(c","deletelater(std::shared_ptr","deleter,int","deletion.","delim)","delimit","delimiter.","delivered.","demo","deni","denial","denot","depend","dependencies,","dependencies.","deprec","deprecated:","depreciated:","deriv","derive.","desc)","describ","descript","description()","description.","deseri","deserialize(json::valu","design","desir","desired,cricket::videoformat","desktop","desktop,","destination.","destroy","destroy()","destroy(task*","destroyed()","destroyed.","destruct","destruction.","destructor","detach","detach(const","detach(packetprocessor*","detached,","detachsource(packetsignal&","detachsource(packetstreamadapter*","detail","details.","detect","determin","determinetzd(bool","dev","develop","devic","device()","device(const","device)","device.","device;","deviceenumer","devicemanager()","devicerecord","devices)","deviceschang","deviceschanged.","devicewatcher(idevicemanager*)","devman;","devs)","diagnost","diagnostic.","diagnosticmanager()","diagnosticscomplet","differ","differenti","differential,","differential.","digest","digest()","digest)","digeststr()","digits.","dir()","dir)","dir,loglevel","direct","direction.","directli","directly,","directly.","directori","directory.","disabl","disablestatelesssessionresumption()","disadvantag","discard","disclaim","disclaimer:","disconnect","disconnects.","dispatch","dispatch(t","dispatchnext()","display","dispos","dispose()","distinguish","distribut","distribute,","distribute.","distribution.","distributor","distributor,","dm)","dn","dnsresult()","do","doc","document,","documentation)","documentation,","documentation:","dodownload()","does.","doesn't","doextract()","dofinalize()","domain","domain)","domainnames)","don't","done","done!","done,","dopeerconnect(constnet::address&","dot","doubl","double.","doubletoint(doubl","doublevalue()","down","down)","down.","download","dri","driven","drop","dropped.","dst","dst)","dstoffset(int","dstoffset)","dummysetsessiondescriptionobserver()","duplicate()","durat","duration)","duration.","dure","dwith_ffmpeg=on","dwith_opencv=off","dwith_webrtc=off","dwith_webrtc=on","dynam","e","e)","e.g.","each","earli","earliest","earlymediabuffers","earlypeerdata","eas","easi","easiest","easili","easily.","echo","effect","effect.","effective.","effects.","effort","elaps","elapsedmilliseconds()","elapsedseconds()","element","element.","elements.","else.","elsewhere)","embed","emit","emit()","emit(char","emit(const","emit(ipacket&","emit(unsign","emit(void","emitchunkheader()","emitheader()","emitsocketclose()","emitsocketconnect()","emitsocketerror(constscy::error&","emitsocketrecv(constmutablebuffer&","emitt","emitter)","emitter.","employ","empti","empty()","empty().","empty();","empty2,void","empty3,void","empty4)","enabl","enable(bool","enable)","enable,unsign","enable_iterator_debugging=false)","enablebuiltinaec(bool","enablebuiltinagc(bool","enablebuiltinns(bool","enabled()","enabled)","enabled).","enabled.","enabled:","enablesessioncache(bool","enabletcp","enableudp","encapsul","enclos","encod","encode(const","encode(std::istream","encoder()","encoder(int","encoder(options);","encoder,int","encoder/decoder)","encoderoptions(constformat&","encoders.","encoding()","encoding)","encoding,","encoding.","encoding/decoding.","encountered.","encourag","encrypt","encrypt()","encrypt(const","encrypt)","encryption,","encryption.","encryptstream(std::istream","encryptstring(const","end","end()","endframe()","endpoint","endpoint.","enforc","engin","enough","ensue.","ensur","entir","entiti","entity.","entri","enum","enumer","enumeration.","epoch,","epochtime()","equals(constderivedt*","equals(id","equival","erase(const","err)","errdepth,int","errmsg)","errnum,const","error","error()","error(const","error)","error,","error.","error_list_t","error_map_t","errorclass()","errorcod","errorcode()","errorcode(consterrorcode&","errorcode(std::uint16_t","errorcode)","errorcode,const","errordepth()","errordesc)","errormessage()","errorno","errorno)","errornumber()","errornumber.","errors()","errors.","errorstring(std::uint16_t","escap","escape()","especi","essenti","essential.","establish","established,","establishment)","etc.","etc.)","even","event","event()","event(const","event(constevent&","event,const","event_callback)","eventdelegate()","eventdelegate(consteventdelegate&","everyon","everyth","evolv","evp_ciph","evp_cipher_ctx","evp_cipher_ctx_set_pad","evp_cipherfinal_ex","evp_md","evp_md_ctx","exampl","example,","example:","exampleapp)","examples,","examples:","exce","exceeded)","except","exception,","exception.","exchang","exclud","excluded.","excus","execut","executable,","executable.","executables.","exepath","exercis","exhaust","exist","exist,","exist.","exists(const","exists(task*","exists,","exists.","exit","exits.","expand","expanded.","expect","expir","expired()","expired.","expires(const","expires(tvalu","expires,","expires.","expiri","expiry;","explain","explan","explicit","explicitly,","expos","express","expressli","ext)","extend","extens","extension,int","extent","extern","external)p","external)requir","external)video","externalip","external|","extra","extract","extract(const","extractcurrentfile(const","extractnames(std::str","face","facil","facilities.","facility,","fact","facto","factori","factory()","factory)","factory,webrtc::mediastreaminterfac","fail","fail()","fail.","failed()","failed,","failed.","failur","failure,","failure.","fairli","faith","fakedevicemanager()","fall","fallback","fals","false).","false,","false.","famili","far:","fashion.","fast","fastisflvheader(char","fastisflvkeyframe(char","fastupdatetimestamp(char","fatal","featur","feature')","feature)","februari","fed","fee","fee,","fee.","feed","feedback","feel","few","ffmpeg","ffmpeg,","ffmpeg.","field","field'","field,bool","field.","fields.","fifo","fifth","fig","fig)","file","file(glob_recurs","file)","file,","file.","filechannel(const","fileexcept","filenam","filename()","filename())","filename)","filename,bool","filename,const","filepart","filepart(const","filepart.","files,","files.","filesystem","fill","filter(const","filter(unsign","filter)","filter,int","final","final()","final(o","final(unsign","finalize()","finalize(char","finalized.","finalizeinstallations(bool","finally,","find","find(const","find_package(libsourcey","find_package_handle_standard_args(${module}","finish","fire","firefox","first","first.","firstdayofweek","firstdayofweek)","fit","fivetuple()","fivetuple(constfivetuple&","fivetuple(constnet::address&","fix","flag","flag()","flag)","flag,const","flag.","flagattribute(std::uint16_t","flagpacket(constflagpacket&","flagpacket(unsign","flags)","flags,bitwriter&","flags,void","flags.","flase","flash","flavor","flexibl","float","floor,","flow","flow.","flowing.","flt,","fltp,","flush","flush()","flushed,","flushreadbio()","flushsessioncache()","flushwritebio()","flv","folder","follow","follow.","follows:","forbid","forc","forcedefaultscope)","forcefulli","forcefully.","foremost,","forget","forget.","forgotten","fork","form","form'","form()","form(command&","form(json::valu","form)","form,","form.","format","format()","format(const","format(constformat&","format(constlogstream&","format)","format).","format,","format.","formatlist","formatregistry()","formats()","formats.","formelement()","formelement(constformelement&","formelement(json::valu","former","formfield()","formfield(json::valu","formpart","formpart(const","formpart.","forms.","formwrit","formwriter(clientconnection&","formwriter(constformwriter&)","formwriter.","found","found,","found.","foundat","foundation,","foundation.","foundation;","four","fourccs)","fp","fps,int","fpscounter()","fpslimiter(int","fraction","fragment","fragment()","fragment)","frame","frame()","frame)","frame,char","frame,typ","frame.","frameflags()","framesepar","frameseparator,bool","framesize;","framestring()","framework.","franklin","free","free(const","freeclosedstreams)","freeconnection(constnet::address&","freed","freed.","freediagnostic(const","freedom","freedom,","freedom.","freeexisting)","freememory()","freepoint","freepointer)","freepointer,bool","frequent","friends.","from)","from,const","from.","fromuri(consthttp::url&","fromuserinfo(const","front()","full","fulli","function","function,///","function.","functionality.","functions.","functions:","functiontest(voidfunc_t","functors.","further","futur","futures.","gain","game","gap","garbag","garbage.","garbagecollector()","gave","gcc","gcc)","gcc):","gener","general,","generally.","generatekey(const","geograph","get","get()","get(attribute::typetype,int","get(char","get(const","get(int","get(std::str","get(std::uint32_t","get,","getallocation(constfivetuple&","getaudiodevice(bool","getaudiodevices(bool","getaudioinputdevice(device&","getaudioinputdevices(std::vectordevice>","getaudiomodule()","getaudiooutputdevice(device&","getaudiooutputdevices(std::vectordevice>","getbestcaptureformat(const","getbit(int","getbool(const","getbyhost(const","getbyid(const","getbyte(int","getcachefilepath(const","getcamera(const","getcameras(std::vectordevice>","getcapabilities()","getcomment()","getcontentlength()","getcontenttype()","getcookies(nvcollection&","getcookies(std::vectorcookie>","getcredentials(const","getcredentials(std::str","getcurrentscope(const","getdafaultkey(const","getdafaultstream()","getdefault()","getdefaultaudiodevice(bool","getdefaultaudioinputdevice(device&","getdefaultaudiooutputdevice(device&","getdefaultcamera(device&","getdefaultvideocapturedevice(device&","getdiagnostic(const","getdomain()","getdouble(const","getemitter()","getencoderformat(format&","getfield(const","gethost()","gethttponly()","getignoreerror()","getinstalledfilepath(const","getinstalltask(const","getint(const","getiv()","getkeepalive()","getkey()","getlargeint(const","getloudspeakerstatus(bool","getmaxage()","getmethod()","getmicrophone(const","getmicrophones(std::vectordevice>","getname()","getnextfilename()","getordefault(const","getpackagedatadir(const","getpackagepairs()","getpath()","getpluginfunc","getpreferredfourccs(std::vector","getprocessor(int","getproxycredentials(std::str","getraw()","getraw(const","getrawstring(const","getreason()","getscopedkey(const","getsecure()","getsessioncachesize()","getsessiontimeout()","getsource(int","getspeaker(const","getspeakers(std::vectordevice>","getstream(const","getstring(const","gettcpallocation(const","gettcpsocket(constnet::address&","getter","gettransferencoding()","gettype(int","getu16(std::uint16_t","getu24(std::uint32_t","getu32(std::uint32_t","getu64(std::uint64_t","getu8(std::uint8_t","getupdatablepackagepairs()","geturi()","geturiparameters(nvcollection&","getvalue()","getversion()","getvideocapturedevice(device&","getvideocapturedevices(std::vectordevice>","git","git@github.com:sourcey/webrtcbuilds.git","github","github.","give","given","given.","glob","gnu","gnu/linux","go","goal","good","gotofirstfile()","gotonextfile()","gpl.","grant","grati","great","greater","gregorian","group","grown","gtest","guarante","gui","guid","guid)","guid,bool","guides.","guides:","h.264,","hand","handi","handl","handle()","handle(consthandle&)","handle(uv_loop_t","handle)","handle,int","handle.","handleallocateerrorresponse(conststun::message&","handleallocaterequest(request&","handleallocateresponse(conststun::message&","handleauthorizedrequest(request&","handlebindingrequest(request&","handleclientresponse(constmutablebuffer&","handleconnecterrorresponse(conststun::message&","handleconnectionattemptindication(conststun::message&","handleconnectionbinderrorresponse(conststun::message&","handleconnectionbindrequest(request&","handleconnectionbindresponse(conststun::message&","handleconnectrequest(request&","handleconnectresponse(conststun::message&","handlecreatepermission(request&","handlecreatepermissionerrorresponse(conststun::message&","handlecreatepermissionresponse(conststun::message&","handled.","handledataindication(conststun::message&","handleerror(int","handlepotentialresponse(const","handlerefreshrequest(request&","handlerefreshresponse(conststun::message&","handlerequest()","handlerequest(request&","handleresponse(conststun::message&","handles.","handlesendindication(request&","handleserverrequest(constmutablebuffer&","handling.","handshak","handshake()","handshake.","handshakecomplete()","hanshak","happen","hardwar","has(const","has(unsign","hasavailableupdates(constpackagepair&","hascachedfile(package::asset&","hascontentlength()","hascredentials()","hasdata()","hasdata(const","haserrors()","hasfield(const","hasfragment()","hash","hash(const","hashost()","hasn't","haspages()","haspath()","haspermission(const","hasport()","hasproxycredentials()","hasquery()","hasqueuedstate(packetstreamstate::id","hasschema()","hasunfinalizedpackages()","hasuserinfo()","haven't","head","head,","header","header,const","header,std::ostream","header,std::str","header.","headers()","headers.","heap.","hearers.","heavi","height","height,doubl","height,std::int64_t","held","helper","helpers.","henc","here","here,","here.","herein.","hex","hexadecimal.","high","high.","higher","highest","highli","hint","hit","hitch.","hmac()","hmac)","hold","holder","holder,","holder.","holds.","home","homebrew.","hood","host","host'","host()","host)","host,","host,const","host,std::uint16_t","host.","hostandport)","hosts.","hour","hour()","hour,int","hourampm()","hours()","hours,","hours,int","hours.","however,","html","http","http)","http,","http/1.0","http/1.0.","http/1.0:","http/1.1","http/1.1).","http/1.1:","http/1.x","http://en.wikipedia.org/wiki/gregorian_calendar","http://en.wikipedia.org/wiki/iso_8601","http://en.wikipedia.org/wiki/julian_day","http://en.wikipedia.org/wiki/utc","http://sourcey.com/libsourcey","http://sourcey.com/pacm/","http://vsg.cape.com/~pbaum/date/date0.htm","http://vsg.cape.com/~pbaum/date/injdimp.htm,","http://www.w3.org/protocols/rfc2616/rfc2616","http::clientconnection::ptr","http::request","http::request.","http::request::getcredentials()).","http::response.","http_errno","http_parser","http_parser.","http_parser_set","http_parser_url","httponli","https://github.com/sourcey/libsourcey","https://github.com/sourcey/libsourcey.git","https://github.com/sourcey/libsourcey.git.","httpserver","httpserverrespond","hyunuk","i.e.","iallocation(constfivetuple&","ic","icapture()","iconfigur","id","id()","id)","id,","id,bool","id,const","id,constaudiocodec&","id,constvideocodec&","id,formfield&","id,id","id,long","id.","ident","identifi","identifier)","identity_transfer_cod","identity_transfer_coding.","idiagnost","idiagnostic()","idler","idler(uv::loop","ids,bool","ids,constinstalloptions&","ids.","ie","ie.","if,","iff","ifil","ifile,const","iformat)","iformat,constformat&","ifram","ignored.","ignoreerror)","imagesequencerecorder(webrtc::videotrackinterfac","immedi","implement","implementation.","implementations.","implemented,","impli","implied,","import","important:","impos","imposs","improv","in","in,std::str","inabl","inaccur","inact","inactive.","inbuf,std::size_t","inc.51","incident","includ","include(\"../libsourcey/libsourcey.cmake\")","include_directories(${libourcey_include_dirs})","include_directories(${sourcedir}","including,","incom","incomingheader()","incompat","incomplete.","incorpor","incorrect.","increment","incremented.","incumb","incur","indefinitely.","independ","index","index)","index,bool","index,char","index,std::uint16_t","index,std::uint8_t","index.","indic","indirectli","induc","info","info)","info,","info,unsign","inform","information,","information.","information;","infring","inherit","inhibit","init()","init(const","init(http_parser_typ","initclient()","initdecryptor()","initencryptor()","initi","initialization.","initialize()","initialize(bool","initializeclient(sslcontext::ptr","initialized()","initialized)","initialized.","initializefunc","initializeserver(sslcontext::ptr","initialwrite()","initiate()","initmicrophone()","initplayout()","initrecording()","initserver()","initspeaker()","initstate(std::uint32_t","inlen,unsign","inlin","inlineaddresspeeraddress()","inlinebyteorderorder()","inlineipacket&","inlinelogstream&","inlinenvcollection&","inlinepacketprocessor*","inlinerequest&","inlineresponse&","inlineserverconnection&","inlinesked::task*","inlinesked::trigger*","inlinesslcontext::verificationmodeverificationmode()","inlinestun::addressfamilyfamily()","inlinesynccontext&","inlinetimediffelapsed()","inlinetimediffoper","inlinetimestamp&","inlinetimestamp::utctimevalutctime()","inlinetimestampoper","inlinetimestampoperator+(timediffd)","inlinetimestamptimestamp()","inlinetimevalepochmicroseconds()","inlineusageusage()","inlineutctimevalutctime()","input","input()","input)","input,","input,const","input,device&","input,int","input,o","input,std::vectordevice>","inputlength,unsign","insensitive.","insid","insist","inspect","instal","install(target","install,","installation.","installationst","installationstate`&","installcomplet","installdir","installdir()","installed,","installed.","installed:","installedpackageversion(const","installedremoteasset)","installing,","installmonitor","installmonitor()","installmonitor.","installoptions()","installpackage(const","installpackages(const","installstate()","installstatechang","installtask","installtask(packagemanager&","installtask::ptr","installtaskcomplet","installtaskcr","installtaskptrvec","instanc","instance,","instance.","instances.","instant","instanti","instead","instruct","int","int.","int16_t","int32_t","int64_t","intact","integer.","integr","integrations.","intend","intended.","intent","inter","intercept","interchang","interchange.","interfac","interfaces,","intermedi","intern","internal)","internal)networking,","internal::decodest","internal::encodest","internally,","internally.","internet","internet:","interoperability.","interpret","interv","interval()","interval)","intervals.","intervaltrigger()","into.","introduc","introduct","intvalue()","invalid","invalid.","invis","invoked,","involv","io","ios)","ip","ip)","ipacket","ipacket(constipacket&","ipacket(void","ipacketcreationstrategy()","ipacketinfo()","ipacketizer(thi","ipc","iplist","ips)","ipv4","ipv4)","ipv4addressbase()","ipv4addressbase(const","ipv6","iregistry()","irrevers","is()","is)","is:","isactive()","isam()","isavail","isavailable)","isbase64","ischunkedtransferencoding()","iscomplete()","isdataconnect","isdefault","isdefault,bool","iselapsed(timediffinterval)","isencoding()","iserror()","isfailed()","isforserveruse()","isinstalled()","isn't","isnone()","iso","isolation,","isonline()","ispm()","isprobe()","isready()","isrequest()","isrunning()","isscreencast()","isstopped()","issu","issuedby(constx509certificate&","issuer","issuer'","issuercertificate)","issuercertificate.","issuername()","issuername(nidnid)","issues),","issupportedfiletype(const","istrm,std::ostream","iswspace(const","is”","it'","it).","it,","it.","it;","item","item)","item,bool","item,long","itemad","itemremov","itemt","iter","iteration.","iterationcount)","iteraton.","itself","itself.","iv","iv)","ivsize()","januari","job","join","join()","joined.","joinroom(const","json","json()","json,","json.","json::valu","jsoncpp","judg","judgment","julian","julianday()","julianday)","kam","kbytes.","keep","keepal","keepalive)","kernel,","key","key()","key)","key,","key,bool","key,const","key,constbytevec&","key,doubl","key,int","key,long","key,std::int64_t","key,std::str","key,tvalu","keys(std::vector","keys,const","keysize()","kick","kill","kill(int","kim","kind","kind,","klass)","know","kvcollection()","l","label()","label)","lack","language.","larg","larger","last","lastbyt","lastcheck","lasterror()","late","later","later.","latest","latter","launch","law","law.","law:","lax","layer","layout","ldconfig","leap","leav","leaveroom(const","left","legal","len)","len,constaddress&","len,constnet::address&","len,int","len,std::size_t","len,unsign","length","length()","length)","length),","length,","length.","lengthi","less","lesser","let","level","level()","level)","level,const","lgpl","liabl","lib","libavcodec","libavdevic","libavfilt","libavformat","libpostproc","librari","libraries,","libraries.","library'","library)","library),","library).","library,","library.","library”","library”,","library”.","libscy*.dl","libscy*d.dll,","libsorucey","libsourcey","libsourcey'","libsourcey)","libsourcey,","libsourcey.","libsourcey.sln","libsourcey.xcodeproj.","libsourcey:","libsourcey_root_dir)","libssl","libstdc++","libswresampl","libuv","libuv.","licence:","licens","license","license,","license.","license;","license”).","licensor","lid,id","lid,unsign","lifecycl","lifetim","lifetime()","lifetime)","lifting.","limit","limit()","limit)","limit,int","limit.","line","line,","line,const","linefe","linelength)","link","link_libraries(${libsourcey_libraries})","linux","linux.","linuxdevicemanager()","list","list,","list.","list...","listen","listen(int","listeners.","littl","live","live()","live,","load","load(bool","load(const","load)","loaddefaultca","loaddefaultcas).","loaddefaultcas,const","loaded()","loaded.","loadlocalpackages()","loadlocalpackages(const","locak","local","local()","local(constnet::address&","local)","local,","local,net::transporttyp","local,remotepackage*","localaddress,constnet::address&","localdatetim","localdatetime()","localdatetime(constdatetime&","localdatetime(constlocaldatetime&","localdatetime(doubl","localdatetime(int","localdatetime(timestamp::utctimevalutctime,timestamp::timediffdiff,int","localdatetime.","locally.","localpackage()","localpackage(const","localpackage(constremotepackage&","localpackages()","localpackagevec","locat","located?\")","location,","lock","lock()","lock(_mutex);","lock.","locked()","locked,","locked.","log","log(const","logchannel(const","logchannelmap","logger()","logger(constlogger&)","logger(logger&&)","logic","logic.","loglevel","logstream(constlogstream&","logstream(loglevel","logwriter()","long","longer","look","loop","loop()","loop)","loop,int","loop,std::funct","loop,void","loop.","loss","low","ma","mac","macdevicemanager()","macdevicewatcher(idevicemanager*","machin","machine.","macro","made","made.","main","mainli","maintain","major","make","makedataconnection()","makelocal(int","makeutc(int","malform","malformed.","manag","management.","manager,const","manager,localpackage*","manager.","managing,","mani","manifest","manifest.","manifests.","manipulations.","map","map()","mark","masked.","match","match.","matches(const","matching.","materi","matter.","max","max,bool","max_volume)","maxage)","maximis","maximum","maxmicrophonevolume(uint32_t","maxsize)","maxspeakervolume(uint32_t","maxtim","maxtimeremaining()","mayb","md5","mean","meaning","meaningful.(for","measur","mechan","mechanism.","media","media)","media,","mediapacket(constmediapacket&","mediapacket(r)","mediapacket(std::uint8_t","mediaserv","mediastreamsourceinterface.","medium","medium,","meet","member","member.","memori","memory.","merchant","mere","messag","message()","message(classtyp","message(const","message(constmessage&","message)","message,","message,bool","message,loglevel","message,net::transporttyp","message.","messagedelegate(constfilter&","messagedelegate(constmessagedelegate&","messagehandl","messageintegrity()","messageintegrity(constmessageintegrity&","messages,","messages.","method","method)","method,","method,const","method,datat","method,int","method.","method:","methods.","methodstring()","michael","microphon","microphoneboost(bool","microphoneboostisavailable(bool","microphoneisinitialized()","microphonemute(bool","microphonemuteisavailable(bool","microphonevolume(uint32_t","microphonevolumeisavailable(bool","microphonevolumestepsize(uint16_t","microsecond","microsecond()","microsecond)","microseconds()","microseconds)","microseconds.","mid","mid,int","midnight,","millisecond","millisecond()","millisecond,int","milliseconds()","milliseconds)","milliseconds.","mime","min_volume)","minimis","minimum","minmicrophonevolume(uint32_t","minor","minspeakervolume(uint32_t","minut","minute()","minute,int","minutes()","minutes),","minutes,","minutes,int","minutes.","mirror","miss","mission","mitig","mkdir","mlineindex,const","mobil","mode","mode.","models.","modern","modes.[name].[value]","modif","modifi","modifications.","modified,","modified.","modify,","modul","modular","module.","module:","modules.","modulo","monday","monday,","monday.","monitor","monitor,bool","monitor.","monoton","monotonic*","month","month()","month,int","months,","more","more.","movable.","move","msg)","multi","multi)","multi,","multicast","multipart","multipartadapter(connection*","multipartadapter(const","multipl","multiplex","multiplexmediacapturer()","multithread","mustmaskpayload()","mutablebuff","mutablebuffer()","mutablebuffer(void","mutablemutex_mutex","mutablemutex_procmutex","mutablemutex_tmutex","mutex","mutex::scopedlock","mutexstate(constmutexstate&","mutexstate(id","n)","n.","name","name()","name(bool","name)","name,","name,bool","name,char","name,const","name,constbytevec&","name,constinstalloptions&","name,device&","name,formpart*","name,int","name,loglevel","name,void","name.","name/address","names.","namespac","namespacesci","namespacescy::archo","namespacescy::async","namespacescy::av","namespacescy::av::legaci","namespacescy::bas","namespacescy::base64","namespacescy::crypto","namespacescy::delet","namespacescy::hex","namespacescy::http","namespacescy::http::w","namespacescy::ipc","namespacescy::json","namespacescy::net","namespacescy::pacm","namespacescy::pluga","namespacescy::sk","namespacescy::smpl","namespacescy::sockio","namespacescy::stun","namespacescy::test","namespacescy::turn","namespacescy::util","namespacescy::uv","nanoseconds.","nat","nat)","nativ","ndelegates()","necessari","necessarili","need","need\"","needed.","neg","negoti","nember","net","net::dnsresult&","net::resolvedns(\"google.com\",","net::socket","net::socket::ptr","net::socket::ptr&","net::sslcontext::ptr","net::sslsession::ptr","net::tcpsocket::ptr","net::transporttyp","netscap","netscape)","network","network.","networking,","never","new","new_state)","newer","newptr)","next","next()","next(std::uint32_t","nextbool()","nextchar()","nextdouble()","nextfloat()","nginx.","nid","no,","no_content_typ","no_rtti","nocopi","nocopy)","node()","node)","node.js)","non","nonc","nonce)","none","none,","nonlinear","normal","normally,","not,","not.","notation.","notauthenticatedexcept","note","note:","notes()","notes:","notfoundexcept","noth","notic","notices,","notices.","notif","notifi","now","now.","nread)","nread,char","nread,std::size_t","nsp()","nsp)","nsp,const","null.","nullptr","nullptr.","numadapters()","number","number,","number.","number/servic","number_of_channels,size_t","number_of_frames)","numbering)","numbytes)","numelements()","numer","numerictyp","numprocessors()","numsampl","numsamples,std::int64_t","numsources()","nvc)","nvcollect","nvcollection()","nvcollection(constnvcollection&","nvcollection.","nybble(const","o","object","object'","object()","object,","object,method","object.","objects.","oblig","obligations,","observ","observer()","observer)","observer,constclient::options&","observer,constoptions&","observer,constserveroptions&","obtain","obtain(delegatelist","occasions,","occur.","octob","of.","of:","offer","offer,","offer.","offici","offline.","offset","ofil","ofile,long","oformat,const","ok","ol'","old","oldstate)","on","on)","on,","on.","onaccept(const","onacceptconnection(uv_stream_t","onadd(const","onadd(packetstream*","onadd(task*","onaddremotestream(peerconnection*","onaddstream(webrtc::mediastreaminterfac","onallocationcreated(client&","onallocationdeleted(client&","onallocationfailed(client&","onallocationpermissionscreated(client&","onannouncestate(void","onaudiocaptured(void","onbody(const","onc","oncancel(task*","onceonlytrigger()","onchange(id","onclientdatareceived(void","onclientstatechange(client&","onclose()","onclosed(peerconnection*","oncomplete()","onconnect()","onconnect(uv_connect_t","onconnectionclose(void","onconnectionclosed(void","oncontrolclosed(void","ondata(const","ondiagnosticstatechange(void","ondispatch","ondnsresult(const","ondnsresult);","ondownloadcomplete(void","ondownloadprogress(void","one,","one.","onerror(constparsererror&","onerror(constscy::error&)","onexit","onfailure(const","onfailure(peerconnection*","onframe(const","onhandshake(sockio::packet&","onhandshakecomplete()","onheader(const","onheaders()","onheaders(request&)","onheadersend()","onhostresolved(void","onicecandidate(const","oniceconnectionchange(webrtc::peerconnectioninterface::iceconnectionst","onicegatheringchange(webrtc::peerconnectioninterface::icegatheringst","oninstallcomplete(void","oninstallstatechange(void","onlin","only)","only,","only.","onmessage()","onmessage(rtc::messag","onmessage(sockio::packet&","onmessageend()","ononline()","onpackageinstallcomplete(void","onpackagequeryresponse(void","onpacket(ipacket&","onpacket(sockio::packet&","onpacketcreated(ipacket*)","onpacketencoded(av::mediapacket&","onparserchunk(const","onparserend()","onparsererror(constparsererror&","onparserheader(const","onparserheadersend()","onpayload(constmutablebuffer&","onpayload(constmutablebuffer&)","onpeeraccept(void","onpeerconnecterror(void","onpeerconnectionattempt(tcpclient&","onpeerconnectsuccess(void","onpeerdatareceived(void","onpingtimeouttimer()","onpingtimer()","onpong()","onpotentialresponse(void","onpresencedata(const","onread(const","onreconnecttimer()","onrecv(constmutablebuffer&","onrelayconnectionbindingfailed(tcpclient&","onrelayconnectionclosed(tcpclient&","onrelayconnectionclosed(void","onrelayconnectionconnect(void","onrelayconnectioncreated(tcpclient&","onrelayconnectionerror(tcpclient&","onrelayconnectionerror(void","onrelaydatareceived(client&","onrelaydatareceived(void","onremove(const","onremove(packetstream*","onremove(task*","onremoveremotestream(peerconnection*","onremovestream(webrtc::mediastreaminterfac","onrenegotiationneeded()","onrequest(request&,response&","onrequest(request&,response&)","onresponse()","onrun(task*","onserverallocationcreated(server*","onserverallocationremoved(server*","onsignalingchange(webrtc::peerconnectioninterface::signalingst","onsocketclose()","onsocketclose(void","onsocketconnect()","onsocketconnect(void","onsocketerror(consterror&","onsocketerror(constscy::error&","onsocketrecv(constmutablebuffer&","onsocketrecv(void","onstable(peerconnection*","onstart(task*","onstatechange(clientstate&","onstatechange(installationstate&","onstatechange(packetstreamstate&","onstatechange(t","onstatechange(transactionstate&","onstreamstatechange(constpacketstreamstate&","onstreamstatechange(constpacketstreamstate&)","onstreamstatechange(void","onsuccess()","onsuccess(webrtc::sessiondescriptioninterfac","ontcpacceptconnection(void","ontcpsocketclosed(void","ontimeout(tvalu","ontimeout(void","ontimer()","ontimer(client&","ontimer(void","ontimerupdate(void","onto","ontransactionprogress(void","ontransactionresponse(client&","onurl(const","onvideocaptured(void","opaqu","opaque)","opaque,ipacketinfo*","open","open()","open(const","opencurrentfile()","opencv","opened()","opened.","openfile(const","openssl","openssl:","openssl_include_dir","openssl_librari","openssl_root_dir","oper","operates,","operations.","operator!=(constaddress&","operator!=(constdatetime&","operator!=(constlocaldatetime&","operator!=(consttimespan&","operator!=(consttimestamp&","operator!=(timediff","operator()(t","operator+=(const","operator+=(consttimespan&","operator+=(timediff","operator+=(timediffd)","operator.","operator=(application&&)","operator=(const","operator=(constaddress&","operator=(constapplication&)","operator=(constcipher&)","operator=(constcookie&","operator=(constdatetime&","operator=(constformelement&","operator=(constformwriter&)","operator=(consthandle&)","operator=(constipacket&","operator=(constlocaldatetime&","operator=(constlogger&)","operator=(constmessage&","operator=(constnvcollection&","operator=(constpacket&","operator=(constpacketstreamadapter&)","operator=(construnnablequeue&)","operator=(construnner&)","operator=(constsharedobject&)","operator=(constthread&)","operator=(consttimeout&","operator=(consttimer&)","operator=(consttimespan&","operator=(consttimestamp&","operator=(consturl&","operator=(constx509certificate&","operator=(doubl","operator=(hashconst","operator=(logger&&)","operator=(packetstreamadapter&&)","operator=(taskconst","operator=(testconst","operator=(timediff","operator=(timevaltv)","operator==(const","operator==(constaddress&","operator==(constdatetime&","operator==(constdevice&","operator==(constfivetuple&","operator==(constlocaldatetime&","operator==(conststate&","operator==(consttimedtoken&","operator==(consttimespan&","operator==(consttimestamp&","operator==(constversion&","operator==(std::str","operator==(timediff","operator>(constdatetime&","operator>(constlocaldatetime&","operator>(consttimespan&","operator>(consttimestamp&","operator>(timediff","operator>=(constdatetime&","operator>=(constlocaldatetime&","operator>=(consttimespan&","operator>=(consttimestamp&","operator>=(timediff","operator>>(message&","operator[](const","operatoraddress&","operatordatetime&","operatorfivetuple&","operatoripacket&","operatorlocaldatetime&","operatorlogchannel*","operators,","operatortimespan&","operatortimestamp&","operatorversion&","oppos","opt","option","optional,","optional:","optionmap","optionparser(int","options()","options)","options,","options,installmonitor*","options,uv::loop","options.","options.arg","options.oformat","options;","order","order)","order,","order,bool","orderli","ordinari","orient","origin","origin.","os","os)","ost)","ostr)","ostrm)","other)","others.","otherwis","otherwise)","otherwise,","otherwise.","ourid()","ourpeer()","out","out)","out,const","out,int","out.","outbuf)","outbuf,std::size_t","outdo","outgo","outgoingheader()","outlen,encodingencoding)","output","output)","output,encodingencoding)","output,int","outputlength)","outsid","over","overal","overrid","overridden","overwrit","overwritten","overwritten.","ownership","ownsbuffer()","p","p)","p,","p2","p2,","p2p","p3","p3,","p4","packag","package()","package(const","package)","package,","package,bool","package.","packagemanag","packagemanager(constoptions&","packagemanager.","packagepair(localpackage*","packagepairvec","packages()","packages.","packageuninstal","packet","packet(const","packet(constpacket&","packet(fram","packet(typ","packet)","packet,constaddress&","packet,int","packet.","packetadapterreference(packetstreamadapter*","packetadaptervec","packetcreationstrategy(int","packetcreationstrategylist","packetfactory()","packetinfo","packetinfo(const","packetinfo(constpacketinfo&","packetprocessor","packetprocessor(packetsignal&","packetprocessors,","packets.","packetsign","packetsignal::emit.","packetsocketadapt","packetsocketadapter(const","packetsocketadapter::onpacket","packetsourc","packetsources,","packetstream","packetstream'","packetstream(const","packetstream,","packetstream.","packetstream::emitter.","packetstreamadapt","packetstreamadapter(constpacketstreamadapter&)","packetstreamadapter(packetsignal&","packetstreamadapter(packetstreamadapter&&)","packetstreamadapter,///","packetstreamsource.","packett","packettransact","packettransaction(const","packettransaction(long","pacm","pacmconsol","pad","padding)","padding.","page,","page.","pages.","pair","pair)","pair,bool","pair,constinstalloptions&","pair.","pairs()","pairs,","param(int","paramet","parameter.","parameters,","parameters.","params()","params)","parent","pars","parse()","parse(const","parseauthinfo(const","parser","parser()","parser(http::request*","parser(http::response*","parser(http_parser_typ","part","part)","part.","part/attach","parti","partial","partial()","partial)","particular","partqueu","parts.","pass","pass()","passed()","passed.","passphrase,","passphrase,const","passphrases.","password","password()","password)","password,","password.","passwords,","past","patent","path","path()","path)","path,bool","path,const","path,loglevel","path,unsign","path.","pathetc()","pathetc)","paths:","paus","pause()","pause().","pay","payload","payload)","pcert)","pcert,bool","pcm_file_name_utf8)","pcontext","peek","peek()","peeku16()","peeku24()","peeku32()","peeku64()","peeku8()","peer","peer'","peer()","peer(const","peer(constpeer&","peer.","peeraddr)","peeraddr,int","peeraddress)","peeraddress,int","peeraddress,long","peercertificate()","peerconnect","peerconnection()","peerconnection(peerconnectionmanager*","peerconnectionfactori","peerconnectionmanager(rtc::scoped_refptr","peerconnectionobserv","peerdisconnect","peerid()","peerid,const","peerid,modemode)","peerip)","peerips)","peermap","peers()","peers,","peers.","pem","peopl","per","perform","performance.","performed,","period","permiss","permission(const","permission.","permissionlist","permissions()","permissions)","permissions.","permissions;","permit","permitted,","persist","persistence()","pertin","peter","phrase","phrase.","physic","pid()","pid.","piec","pipe","pipelin","piping,","pixelfmt","pixelfmt)","pkg","pkt)","place","place,","place.","plain","platform","platforms.","platforms:","play","player","playing()","playoutbuffer(buffertyp","playoutdelay(uint16_t","playoutdevicename(uint16_t","playoutdevices()","playoutisavailable(bool","playoutisinitialized()","playoutsamplerate(uint32_t","pleas","plenti","plu","plug","pluga","pluginnam","pluginvers","pod","pod,byteorderorder)","point","pointer","pointer.","pointer;","pointercollection()","pointers,","pointers.","polymorph","polymorphism.","pop()","popnext()","port","port()","port)","port);","port,","port,serverresponderfactory*","portabl","portion","pos)","pose","posit","position()","position.","possibl","possible)","post","post()","post),","post,","postfix","potenti","power","practices.","pre","preambl","preced","precedence.","precis","prefer","preffer","prefix)","prefix,int","preform","prepar","preparesubmit()","presenc","presence()","presence(const","presence(constpresence&","presence,","presencedelegate()","presencedelegate(constpresencedelegate&","present","present,","present.","preserv","press","pretti","prev)","prevent","previou","previous","price.","primari","principl","print(std::ostream","prior","prioriti","priority()","priority)","priority.","privat","privatekeyfil","privatekeyfile,const","privatekeypassphrasehandl","privatekeypassphraserequir","prng","prng.","probe)","problem","proc)","proc,int","procedure.","process","process()","process(ipacket&","process(uv::loop","process.","processes.","processing.","processopt","processor","processors()","processors.","produc","program","program.","programming.","programs.","programs;","progress","progress()","progress)","progress.","progresssignal()","prohibit","project","project(exampleapp)","project.","project:","projects,","promin","promot","propag","proper","properli","properly:","properti","property'","property.","propertychang","proprietari","protect","protected.","protectedaddress_peeraddress","protectedapplication&","protectedbytevec_iv","protectedbytevec_key","protectedcipher&","protectedclient::options_opt","protectedclientconnection&","protectedclientobserver&","protectedconnection&","protectedconnectionmanager_connect","protectedcrypto::bytevec_digest","protecteddevicewatcher*","protectedfivetuple_tupl","protectedformat_format","protectedformwriter&","protectedhandle&","protectedhash&","protectedhttp::client*","protectedhttp::request&","protectedhttp::request_request","protectedhttp::response&","protectedhttp::response_respons","protectedhttp::ws::websocket_w","protectedidler_runn","protectedinstalloptions_opt","protectedlegacy::fpscounter_count","protectedlegacy::fpscounter_fpscount","protectedlocalpackage*","protectedlocalpackagestore_localpackag","protectedlogchannel*","protectedlogger&","protectedlogwriter*","protectedmode_mod","protectednet::address_mappedaddress","protectednet::address_p","protectednet::address_relayedaddress","protectednet::ssladapter_ssladapt","protectednet::sslsocket*","protectednvcollection_head","protectedoptions_opt","protectedpackagemanager&","protectedpacketsignal&","protectedpacketstream_stream","protectedpacketstreamadapter&","protectedparser_pars","protectedpeerconnectionmanager*","protectedpersistencet_persist","protectedremotepackage*","protectedremotepackagestore_remotepackag","protectedrequest_request","protectedresponse_respons","protectedroster_rost","protectedrunnablequeue&","protectedrunner&","protectedscy::error_error","protectedserver&","protectedserverconnection&","protectedserverresponder*","protectedsharedobject&","protectedsked::scheduler*","protectedsked::trigger*","protectedsocketadapter*","protectedsocketmode_mod","protectedsynccontext_sync","protectedtask&","protectedtcpclientobserver&","protectedtcpconnectionpairmap_pair","protectedtest&","protectedtest*","protectedthread&","protectedthread_runn","protectedthread_thread","protectedtimer&","protectedtimer_pingtim","protectedtimer_pingtimeouttim","protectedtimer_reconnecttim","protectedtimer_tim","protectedurl_url","protecteduv::handle_handl","protectedwebsocketframerfram","protectedws::modemode()","protocol","protocol);","protocol.","protocol:","protocols.","protocols...","prove","provid","proxi","proxyauthenticate(http::request&","pseudo","pt","ptr","ptr()","ptr)","ptr,bool","ptr,const","ptr,scopedpointer*","ptr;","ptrcontext)","public","public`signal2mutablebuff","public`signal3installtask","public`signalhttp::response`&","public`signalinstalltask`&","public`signallocalpackage`&","public`signalmutablebuffer`&","public`signalpeer`&","public`signalresponse`&","public`signalscy::error`&","public`signalverificationerrordetails`&","publicaddress&","publicaddress::familyfamily()","publicaddressaddress()","publicaddressfrom()","publicaddresspeeraddress","publicaddresspeeraddress()","publicaddressto()","publicattribute*","publicaudiocodecaudio","publicbitwiseflag","publicclient::options&","publicclientconnection&","publicclientobserver&","publicconfiguration&","publicconnection&","publicconnection*","publicconnectionmanager&","publiccookie&","publicdatetime&","publicdatetimecreatedat","publicdatetimeexpireson()","publicdatetimelastrunat","publicdatetimeoper","publicdatetimeoperator+(consttimespan&","publicdatetimescheduleat","publicdatetimetimeofday","publicdatetimeutc()","publicdatetimevalidfrom()","publicencoderoptions&","publicfilterfilt","publicformatiformat","publicformatoformat","publicformelement&","publicformelementaddpage(const","publicformelementaddsection(const","publicformfieldaddfield(const","publicformfieldgetfield(const","publichttp::message*","publichttp::request&","publichttp::request*","publichttp::response&","publichttp::response*","publichttp::ws::websocket&","publicipacket*","publicipacketinfo*","publiclocaldatetime&","publiclocaldatetimeoper","publiclocaldatetimeoperator+(consttimespan&","publiclocalpackage*","publiclogchannel*","publiclogstream&","publicmessage&","publicmethodtypemethodtype()","publicnet::addressaddr","publicnet::addressaddress","publicnet::addresslistenaddr","publicnet::addresslocaladdress","publicnet::addressmappedaddress()","publicnet::addresspeeraddress","publicnet::addressrelayedaddress()","publicnet::addressremoteaddress","publicnet::tcpsocket&","publicnet::udpsocket&","publicnullsignalclos","publicnullsignalcomplet","publicnullsignalconnect","publicnullsignaldiagnosticscomplet","publicnullsignalidl","publicnullsignalshutdown","publicnullsignaltimeout","publicnvcollection&","publicoptions&","publicpacket&","publicpacketfactoryfactori","publicpacketinfo*","publicpacketsignal&","publicpacketsignalemitt","publicpacketstreamadapter*","publicpacketstreamincom","publicpacketstreamoutgo","publicparser&","publicparsererror*","publicparserobserver*","publicpeer*","publicprogresssignalincomingprogress","publicprogresssignaloutgoingprogress","publicremotepackage*","publicrequest&","publicresponse&","publicscheduler&","publicscopedpointer*","publicscy::errorerror()","publicscy::logstream&","publicscy::mutex_mutex","publicserverallocation*","publicserverobserver&","publicserveroptions&","publicserverresponder*","publicserverresponderfactory*","publicsign","publicsignal2","publicsked::trigger&","publicsocketadapter*","publicsockio::client&","publicsockio::transaction*","publicstatuscodegetstatus()","publictcpallocation&","publictcpallocation*","publictcpconnectionpairmap&","publictest*","publictimeout&","publictimeouttimeout","publictimer&","publictimespan&","publictimespaninterv","publictimespanoper","publictimespanoperator+(consttimespan&","publictimespanoperator+(timediff","publictimestamp&","publictimestamp::timediffelapsed()","publictimestampgetdate()","publictransaction*","publictypetype()","publicurl&","publicuv::handle&","publicvideocodecvideo","publicx509certificate&","publish","pull","pump","purpos","purpose.","push","push(const","push(t","push(tact","put","put(const","putu16(std::uint16_t","putu24(std::uint32_t","putu32(std::uint32_t","putu64(std::uint64_t","putu8(std::uint8_t","qualifiers,","qualiti","queri","query()","query,const","queryremotepackages()","queu","queue","queue()","queue.","queue_t","queued.","quickli","quit","quota","quota.","quotas,","r","r)","r);.","random","random(int","randominputstream.","rang","range.","rapidli","rare","rate","rate,doubl","rate.","ratelimiter(doubl","rather,","raw","rawpacket","rawpacket(char","rawpacket(const","rawpacket(constrawpacket&","rc)","reach","reached.","read","read().","read(bitreader&","read(const","read(constconstbuffer&","read(constconstbuffer&)","read.","read/pars","read/writ","readabl","reader)","readframe()","readframe(bitreader&","readi","reading.","reading/writ","readline(std::str","readnext(const","readnextnumber(unsign","readnextword(std::str","readstart()","readstart();","readstop()","readstream()","readtonext(std::str","ready()","real","realm","realm,","realm,const","realm,int","realtim","realtime()","realtimepacketqueue(int","reason","reason()","reason)","reasons).","reasons,","reasons.","recalcul","receiv","received.","receiver)","receivers.","recent","recipi","recipients'","recipients,","recommend","recommended.","recompil","reconnecting()","reconnecting.","record","recording()","recording,","recordingchannel(channeltyp","recordingdelay(uint16_t","recordingdevicename(uint16_t","recordingdevices()","recordingisavailable(bool","recordingisinitialized()","recordingsamplerate(uint32_t","recv","recvcandidate(const","recvremoteansw","recvsdp(const","recvstart()","recvstop()","redistribut","redund","redundant.","ref()","ref)","refcount()","refer","referenc","reflect","reflex","refrain","refresh","refresh()","regardless","regist","registeraudiocallback(webrtc::audiotransport","registereventobserver(webrtc::audiodeviceobserv","registerformat(constformat&","registerpackettype(int","registerstrategy(int","registertask(const","registertrigger(const","registertype(const","registri","reject","rel","relat","relay","releas","release()","releasetcpsocket(net::socket*","relev","relianc","relink","remain","remaining()","remember,","remot","remote()","remote(constnet::address&","remote)","remote,constinstalloptions&","remote,constnet::address&","remoteaddr)","remoteaddress)","remotepackage()","remotepackage(const","remotepackagerespons","remotepackages()","remov","remove(const","remove(task*","remove(unsign","removeall(const","removeallocation(serverallocation*","removeallpermissions()","removeconnection(clientconnection*","removeconnection(serverconnection*","removed)","removed.","removedata(const","removeexpiredpermissions()","removepermission(const","removereceiver(socketadapter*","removetransaction(stun::transaction*","render","repair","repeat","repeat)","repeatedli","repeating()","repeating,","replac","replace(const","replaceadapter(net::socketadapter*","reply.","repository:","repres","represent","representations.","reproduc","reput","req)","request","request'","request()","request(const","request(conststun::message&","request)","request,","request,authenticationst","request,consthttp::response&","request,http::response&","request,int","request,long","request,stun::message&","request.","request/respons","request;","requests.","requir","required)","required,","required.","resent","reset","reset()","resetall()","resetaudiodevice()","resid","resiz","resolut","resolution.","resolv","resolve.","resolving()","respectively)","respond","respond(message&","respond(request&","responderror(request&","respons","response()","response(const","response(statuscodestatus)","response(statuscodestatus,const","response)","response,","response.","responses.","rest","restart","restart()","restarted.","restarts)","restrict","restricted,","result","result)","result,","result.","resum","resume()","resumption.","rethrow()","retransmit","retries()","retries,uv::loop","retriev","return","return.","returned,","returned.","reus","reusabl","reuse.","revers","reviou","revis","revision.","revolv","rfc","rfc5766","rid)","ride!","right","rights,","rights.","risk","room","room)","room.","rooms()","root","root()","root)","root,const","roots.)","roster","roster()","rostering,","rotat","rotate()","rotated.","rotatingfilechannel(const","rotationinterval()","rotationinterval,const","rout","routes.","royalti","rpos,char","rtc::messagehandler.","rtc::scoped_refptr","rtc::scoped_refptraudiopacketmodule>","rtc::videosinkinterfac","rtp","rtti","run","run()","run,","run.","runasync()","runnable()","runnablequeue'","runnablequeue(construnnablequeue&)","runnablequeue(int","runner","runner()","runner(construnner&)","runner)","runner,const","runner.","runner::context.","running()","running.","runs,","runsync()","runtim","runtimeout()","s","s)","s16,","s16p,","s32,","s32p,","safe","safe,","salt","salt,int","same","sampl","sample_rate,size_t","samplefmt","samplefmt)","sampler","samplerate,const","samplerate,int","samples()","samples_per_sec)","satisfi","saturday).","saturday,","save","save()","save(const","save(std::ostream","savelocalpackage(localpackage&","savelocalpackages(bool","say","say,","scenarios.","schedul","schedule(sked::task*","scheduleat","scheduler()","scheduler,const","scheme","scheme()","scheme,const","scheme,std::str","sci","scm","scope","scope)","scope,","scope.","scopedconfigur","scopedconfiguration(configuration&","scopedconfiguration(constscopedconfiguration&","scopedpoint","scopedpointer()","scopedrawpoint","scopedrawpointer(void","scopedsharedpoint","scopedsharedpointer(std::shared_ptr","scoping:","script","scy::abstractcollect","scy::appl","scy::archo","scy::archo::zipfil","scy::async","scy::async::flag","scy::async::runn","scy::async::send","scy::async::start","scy::asyncdiagnost","scy::asynclogwrit","scy::asyncpacketqueu","scy::asyncqueu","scy::asyncstart","scy::audiopacketmodul","scy::av","scy::av::audiocodec","scy::av::audiopacket","scy::av::codec","scy::av::devic","scy::av::devicemanag","scy::av::devicemanagerfactori","scy::av::devicewatch","scy::av::encoderopt","scy::av::encoderst","scy::av::fakedevicemanag","scy::av::flvmetadatainjector","scy::av::format","scy::av::formatregistri","scy::av::fpscount","scy::av::fpslimit","scy::av::icaptur","scy::av::idevicemanag","scy::av::iencod","scy::av::legaci","scy::av::legacy::fpscount","scy::av::linuxdevicemanag","scy::av::macdevicemanag","scy::av::macdevicewatch","scy::av::mediapacket","scy::av::realtimepacketqueu","scy::av::videocodec","scy::av::videopacket","scy::bas","scy::base64","scy::base64::decod","scy::base64::encod","scy::base64packetencod","scy::basic::decod","scy::basic::encod","scy::basic::polymorph","scy::basicus","scy::bitread","scy::bitwis","scy::bitwrit","scy::configur","scy::consolechannel","scy::constbuff","scy::crypto","scy::crypto::ciph","scy::crypto::hash","scy::crypto::x509certif","scy::datetim","scy::datetimeformat","scy::datetimeformatt","scy::datetimepars","scy::deleg","scy::delegatebas","scy::delegatecallback","scy::delet","scy::deleter::array","scy::deleter::def","scy::deleter::dispos","scy::diagnosticmanag","scy::diagnosticst","scy::dummysetsessiondescriptionobserv","scy::error","scy::filechannel","scy::flagpacket","scy::garbagecollector","scy::hex","scy::hex::decod","scy::hex::encod","scy::http","scy::http::authent","scy::http::badrequesthandl","scy::http::basicauthent","scy::http::chunkedadapt","scy::http::client","scy::http::clientadapt","scy::http::clientconnect","scy::http::connect","scy::http::connectionadapt","scy::http::cooki","scy::http::filepart","scy::http::formpart","scy::http::formwrit","scy::http::messag","scy::http::method","scy::http::multipartadapt","scy::http::pars","scy::http::parsererror","scy::http::parserobserv","scy::http::progresssign","scy::http::request","scy::http::respons","scy::http::serv","scy::http::serveradapt","scy::http::serverconnect","scy::http::serverrespond","scy::http::serverresponderfactori","scy::http::stringpart","scy::http::url","scy::http::w","scy::http::ws::connectionadapt","scy::http::ws::websocket","scy::http::ws::websocketadapt","scy::http::ws::websocketfram","scy::idiagnost","scy::idl","scy::imagesequencerecord","scy::ipacket","scy::ipacketcreationstrategi","scy::ipacketinfo","scy::ipc","scy::ipc::act","scy::ipc::queu","scy::ipc::syncqueu","scy::iregistri","scy::ius","scy::json","scy::json::configur","scy::json::iserializ","scy::kvcollect","scy::livecollect","scy::localdatetim","scy::logchannel","scy::logg","scy::logstream","scy::logwrit","scy::multiplexmediacaptur","scy::mutablebuff","scy::mutexst","scy::net","scy::net::address","scy::net::addressbas","scy::net::dnsresult","scy::net::dnsresult::statu","scy::net::ipv4addressbas","scy::net::packetinfo","scy::net::packetsocketadapt","scy::net::socket","scy::net::socketadapt","scy::net::socketpacket","scy::net::ssladapt","scy::net::sslcontext","scy::net::sslmanag","scy::net::sslsess","scy::net::sslsocket","scy::net::tcpsocket","scy::net::transact","scy::net::udpsocket","scy::net::verificationerrordetail","scy::nullsign","scy::nvcollect","scy::optionpars","scy::packetadapterrefer","scy::packetcreationstrategi","scy::packetfactori","scy::packetprocessor","scy::packetstream","scy::packetstreamadapt","scy::packetstreamst","scy::packettransact","scy::pacm","scy::pacm::installationst","scy::pacm::installmonitor","scy::pacm::installopt","scy::pacm::installtask","scy::pacm::localpackag","scy::pacm::packag","scy::pacm::packagemanag","scy::pacm::packagepair","scy::pacm::remotepackag","scy::peerconnect","scy::peerconnectionmanag","scy::pluga","scy::pluga::plugindetail","scy::pointercollect","scy::process","scy::queu","scy::random","scy::ratelimit","scy::rawpacket","scy::rotatingfilechannel","scy::runnablequeu","scy::scopedconfigur","scy::scopedpoint","scy::scopedrawpoint","scy::scopedsharedpoint","scy::sharedlibrari","scy::sharedobject","scy::sign","scy::signal2","scy::signal3","scy::signal4","scy::signalbas","scy::signalbase,","scy::singleton","scy::sk","scy::sked::dailytrigg","scy::sked::intervaltrigg","scy::sked::onceonlytrigg","scy::sked::schedul","scy::sked::task","scy::sked::taskfactori","scy::sked::trigg","scy::smpl","scy::smpl::address","scy::smpl::client","scy::smpl::command","scy::smpl::commanddeleg","scy::smpl::ev","scy::smpl::eventdeleg","scy::smpl::filt","scy::smpl::form","scy::smpl::formel","scy::smpl::formfield","scy::smpl::messag","scy::smpl::messagedeleg","scy::smpl::peer","scy::smpl::pres","scy::smpl::presencedeleg","scy::smpl::rost","scy::smpl::sslclient","scy::smpl::tcpclient","scy::sockio","scy::sockio::cli","scy::sockio::clientst","scy::sockio::packet","scy::sockio::sslcli","scy::sockio::tcpcli","scy::sockio::transact","scy::stat","scy::statesign","scy::stoppropag","scy::stopwatch","scy::stream","scy::streammanag","scy::streamrecord","scy::streamwrit","scy::stun","scy::stun::addressattribut","scy::stun::attribut","scy::stun::errorcod","scy::stun::flagattribut","scy::stun::messag","scy::stun::messageintegr","scy::stun::stringattribut","scy::stun::transact","scy::stun::uint16listattribut","scy::stun::uint32attribut","scy::stun::uint64attribut","scy::stun::uint8attribut","scy::synccontext","scy::syncpacketqueu","scy::syncqueu","scy::task","scy::taskrunn","scy::test","scy::test::functiontest","scy::test::test","scy::test::testrunn","scy::thread","scy::threadedstreamread","scy::tim","scy::timedmanag","scy::timedtoken","scy::timeout","scy::timespan","scy::timestamp","scy::timezon","scy::transactionst","scy::turn","scy::turn::cli","scy::turn::clientobserv","scy::turn::clientst","scy::turn::fivetupl","scy::turn::ialloc","scy::turn::permiss","scy::turn::relayconnectionbind","scy::turn::request","scy::turn::serv","scy::turn::serveralloc","scy::turn::serverobserv","scy::turn::serveropt","scy::turn::tcpalloc","scy::turn::tcpcli","scy::turn::tcpclientobserv","scy::turn::tcpconnectionpair","scy::turn::udpalloc","scy::turn::udpcli","scy::tzinfo","scy::usermanag","scy::util","scy::util::vers","scy::uv","scy::uv::handl","scy::uv::shutdowncmd","scy::videopacketsourc","sdk","sdklockedversion()","sdkversion","sdp","sdp)","search","sec10.html","second","second()","second,int","second.","seconds()","seconds)","seconds,","seconds,int","seconds,long","seconds.","section","section,","secur","secure)","see","see:","seed","seed()","seed(std::uint32_t","seed)","seed,char","seed.","seek(std::size_t","select","self()","send","send()","send().","send(const","send(constsockio::packet&","send(http::request&","send(message&","sendallocate()","sendauthenticatedtransaction(stun::transaction*","sendcandidate(peerconnection*","sendchannelbind(const","sendclientrequest()","sendconnectrequest(constnet::address&","sendcreatepermission()","senddata(const","sender","sender()","sender)","sender,av::audiopacket&","sender,av::videopacket&","sender,basic::polymorphic&","sender,const","sender,consterror&","sender,consthttp::response&","sender,constmutablebuffer&","sender,installationstate&","sender,ipacket&","sender,p","sender,packetstreamstate&","sender,socketadapter*","sender,transactionstate&","sender,unsign","sender,void","sendhandshakerequest();","sendheader()","sendheader();","sending,","sending.","sendpacket(constipacket&","sendpacket(ipacket&","sendpeerconnectresponse(tcpconnectionpair*","sendping()","sendpresence(bool","sendpresence(constaddress&","sendrefresh()","sendsdp(peerconnection*","sendtocontrol(stun::message&","sent","sent.","separ","separately,","sequenc","sequence,","sequence.","serial","serialize(json::valu","server","server()","server(serverobserver&","server(short","server,","server,const","server,constfivetuple&","server,iallocation*","server,net::socket::ptr","server,request&","server.","server/cli","server::ontimer()","server?","server_us","serveradapter(serverconnection&","serverallocation(server&","serverallocationmap","serverconnection(server&","serverconnection.","serverconnection::ptr","serverconnectionlist","serverobserv","serveroptions()","serverrespond","serverresponder(serverconnection&","serverresponderfactori","serverresponderfactory()","servers,","serververificationerror","servic","servicing,","session","session)","session,","session,uv::loop","session.","sessioncacheenabled()","sessionid()","sessionidcontext","sessionidcontext)","sessions.","sessionwasreused()","set","set'","set(bool","set(cmake_include_path","set(cmake_module_path","set(const","set(headerfil","set(id","set(libsourcey_root_dir","set(sourcedir","set(sourcefil","set(unsign","set.","setack(bool","setaction(const","setaddress(constnet::address&","setagc(bool","setandthrowerror(const","setaudiotrack(webrtc::audiotrackinterfac","setbandwidthlimit(std::int64_t","setbit(int","setbool(const","setboundary(const","setbroadcast(bool","setbyte(int","setbytes(char","setcameras(const","setchunkedtransferencoding(bool","setclass(classtyp","setclientdata(void","setclientsocket(const","setcomment(const","setcomplete()","setcontentlength(std::uint64_t","setcontenttype(const","setcookies(constnvcollection&","setcredentials(const","setdata(char","setdata(const","setdate(consttimestamp&","setdateformat(const","setdefault(const","setdelay(long","setdir(const","setdomain(const","setdouble(const","setencoding(const","seterror(const","seterror(constscy::error&","seterrorcode(int","setextension(const","setfilter(const","setfrom(const","setfrom(constaddress&","setfrom(constpeer&","sethint(const","sethmac(const","sethost(const","sethttponly(bool","setid(const","setid(int","setignoreerror","setignoreerror(bool","setinitialized(bool","setinput(const","setinstalldir(const","setinstalledasset(constpackage::asset&","setinstallstate(const","setint(const","setinterval(std::int64_t","setiv(const","setkeepalive(bool","setkeepalive(int","setkey(const","setlabel(const","setlargeint(const","setlength(std::uint16_t","setlevel(loglevel","setlifetime(std::int64_t","setlinelength(int","setlive(bool","setloop(uv_loop_t","setloudspeakerstatus(bool","setmaxage(int","setmessage(const","setmethod(const","setmethod(methodtypetype)","setmicrophoneboost(bool","setmicrophonemute(bool","setmicrophones(const","setmicrophonevolume(uint32_t","setmode(socketmodemode)","setmulticastloop(bool","setmulticastttl(int","setname().","setname(const","setnamespace(const","setnode(const","setnodelay(bool","setnote(const","setobserver(parserobserver*","setpadding(int","setparsererror(const","setpartial(bool","setpassword(const","setpath(const","setpeerconnectionfactory(rtc::scoped_refptr","setpeersocket(const","setplayoutbuffer(const","setplayoutdevice(uint16_t","setplayoutdevice(windowsdevicetyp","setplayoutsamplerate(const","setprobe(bool","setprogress(int","setproxycredentials(const","setrandomiv()","setrandomkey()","setraw()","setraw(const","setreadstream(std::ostream","setreason(const","setrecordingchannel(const","setrecordingdevice(uint16_t","setrecordingdevice(windowsdevicetyp","setrecordingsamplerate(const","setrepeating(bool","setrequest(http::request*","setresponse(http::response*","setrotationinterval(int","setrunner(async::runner::ptr","setsdkversionlock(const","setsecure(bool","setsender(socketadapter*","setsessioncachesize(std::size_t","setsessiondescriptionobserv","setsessiontimeout(long","setspeakermute(bool","setspeakers(const","setspeakervolume(uint32_t","setstate(const","setstate(void","setstatemessage(const","setstatus(int","setstatus(statuscodestatus)","setstatusandreason(statuscodestatus,const","setstereoplayout(bool","setstereorecording(bool","setstring(const","settime(std::time_t","settimeout(int","settimeout(tvalu","setto(const","setto(constaddress&","setto(constpeer&","settransactionid(const","settransferencoding(const","settrigger(sked::trigger*","settype(const","settype(int","setup","setup()","setuppercase(bool","seturi(const","setuser(const","setusername(const","setuverror(const","setvalue(bool","setvalue(const","setvalue(doubl","setvalue(int","setvalue(std::uint32_t","setvalue(std::uint64_t","setvalue(std::uint8_t","setversion(const","setversion(int","setversionlock(const","setvideotrack(webrtc::videotrackinterfac","setwatcher(devicewatcher*","setwaveoutvolume(uint16_t","setwriter(logwriter*","share","shared)","shared_ptr","sharedlibrary::error()","sharedobject","sharedobject(bool","sharedobject(constsharedobject&)","sharedobject.","shift","short","shortcut","shouldkeepalive()","shouldsendheader()","shouldsendheader(bool","show","shulbn","shut","shutdown","shutdown()","shutdown(),","shutdown(std::uint16_t","shutdown,","shutdown.","side","side,","side.","sign","signal","signal.","signalbas","signalbase()","signalsnotifi","signifi","signific","signum)","similar","similarli","simpl","simplest","simultan","singl","singleton","singleton()","singleton.","sink,encodingencoding)","sit","situat","size","size()","size)","size,byteorderorder)","size,constnet::address&","size,int","size,std::int64_t","size,std::size_t","size,unsign","size.","size_ms)","size_t","sizes.","sked","sked::task","sked::trigg","skip(std::size_t","skipnextword()","skiptochar(char","skiptonextline()","skipwhitespace()","small","so,","so.","so:","sock)","sockaddr","sockaddr_in","socket","socket()","socket)","socket);.","socket,","socket,constaddress&","socket,constmutablebuffer&","socket,constnet::address&","socket,constoptions&","socket,ws::modemode,http::request&","socket.","socket.io","socket.io.","socket/pip","socket::ptr","socket::setadapter).","socketadapt","socketadapter(socketadapter*","socketadapter.","socketio","socketpacket","socketpacket(const","socketpacket(constsocketpacket&","socketpacket.","sockets.","socklen_t","softwar","software),","software,","software.","sole","solid","solut","someon","someth","something'","sometim","soon","sort()","sourc","source'","source)","source,bool","source,std::ostream","source,void","sources()","sources.","sourcey'","span","span)","span.","spawn","spawn()","speak","speakerisinitialized()","speakermute(bool","speakermuteisavailable(bool","speakervolume(uint32_t","speakervolumeisavailable(bool","speakervolumestepsize(uint16_t","special","special,","specif","specifi","specification,","specifications.","specifiers.","spirit","split","squar","src)","ssl","ssl/tl","ssl_ctx","ssl_max_ssl_session_id_length.","ssl_session","ssl_session'","ssl_session_free()","ssladapter(net::sslsocket*","sslclient(constclient::options&","sslcontext()","sslcontext(usageusage,const","sslcontext,sslsession::ptr","sslcontext,uv::loop","sslcontext.","sslcontext::ptr","sslmanag","sslmanager'","sslmanager,","sslsession()","sslsession(ssl_sess","sslsession::ptr","sslsocket","sslsocket(sslcontext::ptr","sslsocket(uv::loop","sslsocket,","ssltcp.","stack","standalon","standard","standard.","start","start()","start()/stop()","start(async::runnable&","start(const","start(std::funct","start(std::int64_t","start(task*","start.","start/continu","startall()","startasync()","startat()","started()","started,","started.","startframe()","startplayout()","startrawinputfilerecording(const","startrawoutputfilerecording(const","startreconnecttimer()","startrecording()","startsources()","startsources()/stopsources().","starttimeout()","startung","state","state()","state(id","state)","state,","state,constclientstate&","state,constdiagnosticstate&)","state,constinstallationstate&","state,constpacketstreamstate&","state,constpacketstreamstate&)","state,consttransactionstate&)","state.","state::id","statebetween(unsign","statechang","stateequals(unsign","stateful()","stateful::onstatechang","stateless","states.","statesignal(conststatesignal&","statesignal(id","statesize)","static","statu","status()","status)","status.","statuscode,const","statusmessage)","std::atom","std::bind","std::codecvt","std::dequ","std::dequelogstream*","std::dequepacketstreamstate>","std::dequestun::message>","std::endl","std::except","std::exception_ptr","std::function","std::functiondnsresult","std::ifstream","std::int64_t","std::istream","std::listtest*","std::ofstream","std::ostream","std::ostringstream","std::out_of_rang","std::runtime_error.","std::shared_ptr","std::size_t","std::string","std::string&","std::string,","std::string.","std::time_t","std::uint16_t","std::uint32_t","std::uint64_t","std::uint8_t","std::vector","std::vectorattribute*","std::vectordaysoftheweek>","std::vectordevice>","std::vectorfileinfo>","std::vectorscopedpointer*","std::vectorstun::transaction*","step","step_size)","stereoplayout(bool","stereoplayoutisavailable(bool","stereorecording(bool","stereorecordingisavailable(bool","still","stl","stop","stop()","stopped()","stopped.","stopplayout()","stoprawinputfilerecording()","stoprawoutputfilerecording()","stopreconnecttimer()","stoprecording()","stopsources()","stopwatch","stopwatch()","stopwatch.","storag","store","str()","str(id","str(unsign","str,encodingencoding)","str,unsign","straightforwardli","strategi","strategies.","stream","stream()","stream(uv::loop","stream)","stream,","stream,bool","stream,std::ostream","stream.","stream.attach(encoder);","stream.attach(socket);","stream.attachsource(audio,","stream.attachsource(video,","stream.start();","stream;","streamer","streaming,","streammanager(bool","streamrecorder(constav::encoderoptions&","streams()","streams.","streamt","streamwriter(std::ostream","street,","string","string.","stringattribute(conststringattribute&","stringattribute(std::uint16_t","stringpart","stringpart(const","stringpart.","strings,","strings.","strings:","stringvec","struct","structcrypto_dynlock_valu","structscy::archo::zipfil","structscy::av::audiocodec","structscy::av::audiopacket","structscy::av::codec","structscy::av::devic","structscy::av::encoderopt","structscy::av::encoderst","structscy::av::format","structscy::av::legacy::fpscount","structscy::av::mediapacket","structscy::av::videocodec","structscy::av::videopacket","structscy::base64::decod","structscy::base64::encod","structscy::bitwis","structscy::delegatebas","structscy::delegatecallback","structscy::deleter::array","structscy::deleter::def","structscy::deleter::dispos","structscy::diagnosticst","structscy::error","structscy::hex::decod","structscy::hex::encod","structscy::http::method","structscy::http::parsererror","structscy::ipacketinfo","structscy::ipc::act","structscy::ius","structscy::logstream","structscy::net::dnsresult","structscy::net::packetinfo","structscy::optionpars","structscy::packetadapterrefer","structscy::packetcreationstrategi","structscy::packetstreamst","structscy::pacm::installationst","structscy::pacm::installopt","structscy::pacm::localpackag","structscy::pacm::packag","structscy::pacm::packagepair","structscy::pacm::remotepackag","structscy::pluga::plugindetail","structscy::sharedlibrari","structscy::sked::dailytrigg","structscy::sked::intervaltrigg","structscy::sked::onceonlytrigg","structscy::sked::trigg","structscy::smpl::address","structscy::smpl::commanddeleg","structscy::smpl::eventdeleg","structscy::smpl::filt","structscy::smpl::messagedeleg","structscy::smpl::presencedeleg","structscy::sockio::clientst","structscy::sockio::transact","structscy::transactionst","structscy::turn::clientobserv","structscy::turn::clientst","structscy::turn::permiss","structscy::turn::relayconnectionbind","structscy::turn::serverobserv","structscy::turn::serveropt","structscy::turn::tcpclientobserv","structscy::util::vers","structscy::uv::shutdowncmd","structur","studio","studio,","studio.","stun","stun/turn","stun::transactionid","sub","subclass","subclasses.","subject","subject'","subjectname()","subjectname(nidnid)","sublicense,","submiss","submit","subsect","subsequ","substr","success","success()","success)","success,","success.","successful,","successful.","successfull.","successfulli","successfully.","successor","such","sudo","suggest","suitabl","summari","summary,","summary.","summaryupd","sunday","sunday,","super","suppli","support","supported).","supported.","supported:","sure","sure,","surrend","sustain","swap","swap(","swap(address&","swap(datetime&","swap(localdatetime&","swap(timespan&","swap(timestamp&","swap(x509certificate&","sym(const","symbol","symmetr","sympl","symple)","symple.","sync()","synccontext","synccontext(uv::loop","synchron","synchronized.","synchronizeoutput()","synchronizeoutput(uv::loop","synchronizestates()","synchronously.","syncpacketqueu","syncpacketqueue(int","syncpacketqueue(uv::loop","syncqueu","syncqueue(uv::loop","syncqueue.","syncstat","syncstate)","syntaxexcept","system","system'","system,","system.","system;","systems'","t","tabl","table,","taction","tag","take","taken","target","target)","target,const","target,void","target.","task","task'","task(bool","task(const","task(consttask&","task(scheduler&","task)","task,","task.","taskfactori","tasklist","taskmap","taskrunn","taskrunner(async::runner::ptr","taskrunner.","tasks()","tasks.","tcp","tcp,","tcpallocation(server&","tcpclient(constclient::options&","tcpclient(tcpclientobserver&","tcpconnectionpair(tcpallocation&","tcpconnectionpair.","tcpsocket","tcpsocket()","tcpsocket(uv::loop","tdelet","teardown()","teeth","tell","templat","term","termin","terminate()","terminated.","terms,","terms.","test","test'","test(const","test(consttest&","test)","test.","test.cpp","test_list_t","testrunn","testrunner()","testrunner.","tests()","tests.","text","text)","text,","textual","thank","that'","that)","that,","them,","themselves,","therefor","therefore,","these,","they,","thin","things.","things:","think","third","this,","this.","thoroughli","those","though","thread","thread()","thread(async::runnable&","thread(constthread&)","thread(std::funct","thread.","threadedstreamreader(std::istream","threat","three","threshold","through","throughout","throughput","throw","throw.","throwerror(const","thrown","thrown.","thu","thus,","tick","tick()","ticket","tid","tid()","tightli","time","time()","time)","time,","time.","time_t","time_t.","timediff","timediff.","timedmanag","timedmanager(uv::loop","timedtoken(const","timedtoken(long","timeformat()","timeformat)","timeout","timeout()","timeout(consttimeout&","timeout(long","timeout)","timeout,int","timeout,std::int64_t","timeout.","timeoutmap","timer","timer()","timer(consttimer&)","timer(uv::loop","timer,","timer.","timeremaining()","timerinterv","times.","timespan","timespan()","timespan(consttimespan&","timespan(int","timespan(long","timespan(timediff","timespan)","timespan.","timesrun","timestamp","timestamp()","timestamp(consttimestamp&","timestamp(timevaltv)","timestamp)","timestamp.","timeuntilnextprocess()","timeval.","timezon","timezone()","timezone.","timezonedifferenti","tkey","tlsv1","to","to)","to,","to,bool","to.","todo:","togeth","toggle(unsign","token","too,","too.","tool","toolchain","top","tostring()","total","totalhours()","totalmicroseconds()","totalmilliseconds()","totalminutes()","totalseconds()","toward","track)","track_to_render,const","traffic","transact","transaction(const","transaction(sockio::client&","transaction)","transaction.","transactionid","transactionid()","transactions.","transfer","transferencoding)","transfers,","transit","translat","transmission,","transmit","transport","transport()","transport(const","transport)","transport,constnet::address&","transportprotocol()","treat","tree:","tricki","trigger","trigger()","trigger(const","trigger)","trigger.","triggermap","triggers()","troubleshoot","true","true).","true);","true,","true.","trust","ts","ts)","tstartabl","ttl)","tupl","tuple()","tuple)","tuple,const","tuple:","turn","tvalu","two","type","type()","type)","type,bool","type,const","type,int","type,std::uint16_t","type,uint16_t","type.","typecast","typedef","typemap","typeregist","types()","types.","typestring()","typeunregist","typic","tzd","tzd()","tzd)","tzd,constdatetime&","tzd,doubl","tzd,int","tzd.","tzinfo()","u8,","u8p,","ubuntu","udp","udpallocation(server&","udpclient(clientobserver&","udpsocket()","udpsocket(uv::loop","uint16listattribute(constuint16listattribute&","uint16listattribute(std::uint16_t","uint32_t","uint32attribute(constuint32attribute&","uint32attribute(std::uint16_t","uint64attribute(constuint64attribute&","uint64attribute(std::uint16_t","uint8attribute(constuint8attribute&","uint8attribute(std::uint16_t","unchang","uncombin","under","underli","understood","unenforc","unfin","unicod","uninitialize()","uninitializessl(),","uninstal","uninstalled.","uninstallpackage(const","uninstallpackages(const","unintent","uniqu","unit","univers","unix","unknown.","unknown_content_length","unknown_content_length,","unknown_content_type.","unless","unlik","unlimit","unmanag","unref'd.","unref()","unrefer","unregist","unregisterformat(const","unregisterpackettype()","unregisterstrategy()","unregistertask(const","unregistertrigger(const","unregistertype(const","unrestricted,","unset.","unsign","unsuccessfully.","until","unzfil","up","upd","updat","update()","update(char","update(const","update(int","update,bool","updateallpackages(bool","updateauthinfo(http::request&","updated.","updatepackage(const","updatepackages(const","updateprogress(int","updateproxyauthinfo(http::request&","updates.","updateu16(std::uint16_t","updateu24(std::uint32_t","updateu32(std::uint32_t","updateu64(std::uint64_t","updateu8(std::uint8_t","updateusage(std::int64_t","upgrade()","upload","upload)","upon","upper","upstream","uri","uri)","uri,const","uri.","url","url()","url(const","url)","url,bool","url,const","url,uv::loop","urlencoded\"","us","usa","usag","use,","use.","usecertificate()","usecertificate(constcrypto::x509certificate&","useconds()","usecontext(sslcontext::ptr","used.","useprivatekey().","useprivatekey()/usecertificate()","user","user'","user()","user)","user,const","user.","userinfo()","userinfo)","usermanager()","usernam","username()","username)","username,","username,const","username,std::int64_t","username.","username:password","users'","users.","user|id","usesession(sslsession::ptr","utc","utc),","utc,","utc.","utctime.","utctimev","utf","util","utilities.","uv","uv::loop","uv_connect_t","uv_einval.","uv_getaddrinfo","uv_handle_t","uv_lib_t","uv_loop_t","uv_process_t","uv_stream_t","uv_thread_t","val)","val,char","val,std::size_t","valid","valid()","valid.","validated.","validation.","valu","value()","value)","value,","value,bool","value.","value_in)","values()","values.","values:","variabl","variables.","variant,","varieti","variou","vector","vector.","verac","verbatim","veri","verif","verifi","verification.","verificationdepth","verificationdepth,bool","verificationerrordetails(constcrypto::x509certificate&","verificationerrordetails.","verificationmod","verifyhmac(const","verifyinstallmanifest(bool","version","version\"","version()","version(const","version)","version,","version,statuscodestatus)","version,statuscodestatus,const","version.","versionlock()","version”,","via","video","video,","video,constaudiocodec&","video,int","video.getencoderformat(options.iformat);","video.open(device.id,","video;","videocaptur","videocodec()","videocodec(const","videocodec(constvideocodec&","videoonly)","videopacket(constvideopacket&","videopacket(std::uint8_t","videopacketsourc","videopacketsource()","videosinkinterfac","vinci","virtual","virtualaddress::familyfamily()","virtualassetasset()","virtualassetassetversion(const","virtualassetlatestasset()","virtualassetlatestsdkasset(const","virtualattribute*","virtualclient&","virtualfivetuple&","virtualformat&","virtualhttp::message*","virtualidiagnostic*","virtualinstalloptions&","virtualipacket*","virtualipacketinfo*","virtuallocalpackage*","virtuallocalpackagestore&","virtualmanifestmanifest()","virtualnet::addressaddress()","virtualnet::addresspeeraddress()","virtualnet::addressrelayedaddress()","virtualoptions&","virtualpackage::assetgetlatestinstallableasset(constpackagepair&","virtualpackage::assetgetremoteasset()","virtualpackagepairgetorcreatepackagepair(const","virtualpackagepairgetpackagepair(const","virtualpacketstream*","virtualpeer*","virtualpersistencet&","virtualremotepackage*","virtualremotepackagestore&","virtualroster&","virtualserver&","virtualstun::attribute*","virtualstun::transaction*","virtualsynccontext&","virtualtask*","virtualvideopacketsource*","vision","visual","void","void,","voidfunc_t","volum","volume)","volume_left,uint16_t","volume_right)","vs)","wait","waitforexit(int","waitforrunner()","waitforshutdown(std::funct","waitforstatesync(packetstreamstate::id","waitforsync()","want","warn,","warning:","warranti","warranty;","wasonline()","watcher()","watcher)","waveoutvolume(uint16_t","way","way.","ways.","we'v","weather","web","webcam","webrtc","webrtc,","webrtc.","webrtc::audiodevicemodule.","webrtc::fakeconstraint","webrtc::icecandidateinterfac","webrtc::peerconnectionfactoryinterfac","webrtc::peerconnectioninterface::rtcconfigur","webrtc_ios.","webrtcbuild","websocket","websocket(const","websocketadapter(const","websocketframer(ws::modemode)","websockets,","week","week(int","weekday","welcom","welcome,","well","whatev","whenev","wherea","wherewith","wheter","whether","whini","whiny)","whitespac","whole","whole,","whole.","whose","wide","widest","width","width,int","wildcard","wildcard.","will","will)","window","windows.","wish","wish);","wish.)","with,","with.","within","without","witin","work","work,","work.","works.","wrapper","wrapper.","write","write(),","write(bitwriter&","write(buff","write(char","write(const","write(constlogstream&","write(formwriter&","write(ipacket&","write(logstream&)","write(logstream*","write(mutablebuffer&)","write(std::ostream","write.","writeamfbool(bitwriter&","writeamfdouble(bitwriter&","writeamfsring(bitwriter&","writeasync()","writechunk(formwriter&","writeend(std::ostream","writeflvheader(bitwriter&","writeframe()","writeframe(const","writemultipartchunk()","writenext()","writepadding(bitwriter&","writepartheader(constnvcollection&","writer","writer)","writer,bool","writer,const","writer,doubl","writeurl(std::ostream","written","written.","wrote","ws","ws()","wss).","www","www.sourcey.com:8080","x","x)","x509","x509certif","x509certificate(const","x509certificate(constx509certificate&","x509certificate(x509","x509certificate.","xcode","xcode,","xml,","xnode)","xu","xxx","y","ye","year","year()","year).","year,int","year.","years,","yes,","yet.","you'r","you,","you.","you;","yourself","yuri","zelim","zero","zero)","zero.","zip","zipfile()","zipfile(const","zone","zone.","{","{cmake_binary_dir}\\bin\\debug","{cmake_binary_dir}\\bin\\release,","{path_to_ffmpeg_dev_dir}\\bin","{path_to_ffmpeg_shared_dir}\\bin","{path_to_openssl_install_dir}\\includ","{path_to_openssl_install_dir}\\lib","{path_to_openssl_install_dir}\\openssl","{}.","|","|+","|/","|^","|a|","|n|","|t||","||","}","~/tmp","~abstractcollection()","~address()","~addressbase()","~application()","~asyncdiagnostic()","~asynclogwriter()","~asyncpacketqueue()","~asyncqueue()","~asyncstartable()","~attribute()","~audiocodec()","~audiopacket()","~audiopacketmodule()","~authenticator()","~basicauthenticator()","~bitreader()","~bitwriter()","~chunkedadapter()","~cipher()","~client()","~clientconnection()","~codec()","~command()","~configuration()","~connection()","~connectionadapter()","~consolechannel()","~cookie()","~datetime()","~decoder()","~delegate()","~delegatebase()","~devicemanager()","~devicewatcher()","~diagnosticmanager()","~dummysetsessiondescriptionobserver()","~encoder()","~encoderoptions()","~errorcode()","~event()","~filechannel()","~filepart()","~flagpacket()","~form()","~formatregistry()","~formelement()","~formfield()","~formpart()","~formwriter()","~functiontest()","~garbagecollector()","~handle()","~hash()","~iallocation()","~icapture()","~idevicemanager()","~idiagnostic()","~idler()","~imagesequencerecorder()","~installmonitor()","~installtask()","~ipacket()","~ipacketcreationstrategy()","~ipacketinfo()","~iregistry()","~iserializable()","~kvcollection()","~linuxdevicemanager()","~localdatetime()","~localpackage()","~logchannel()","~logger()","~logstream()","~logwriter()","~macdevicemanager()","~macdevicewatcher()","~mediapacket()","~message()","~messageintegrity()","~multipartadapter()","~multiplexmediacapturer()","~mutexstate()","~nvcollection()","~package()","~packagemanager()","~packet()","~packetadapterreference()","~packetcreationstrategy()","~packetfactory()","~packetinfo()","~packetstream()","~packetstreamadapter()","~packettransaction()","~parser()","~peer()","~peerconnection()","~peerconnectionmanager()","~pointercollection()","~polymorphic()","~presence()","~queue()","~random()","~rawpacket()","~realtimepacketqueue()","~remotepackage()","~request()","~response()","~roster()","~rotatingfilechannel()","~runnable()","~runnablequeue()","~runner()","~scheduler()","~scopedpointer()","~scopedrawpointer()","~scopedsharedpointer()","~server()","~serverallocation()","~serverconnection()","~serverresponder()","~serverresponderfactory()","~sharedobject()","~signalbase()","~singleton()","~socket()","~socketadapter()","~socketpacket()","~ssladapter()","~sslcontext()","~sslsession()","~sslsocket()","~state()","~stateful()","~statesignal()","~stoppropagation()","~stopwatch()","~stream()","~streammanager()","~streamrecorder()","~streamwriter()","~stringattribute()","~stringpart()","~synccontext()","~syncpacketqueue()","~syncqueue()","~task()","~taskrunner()","~tcpallocation()","~tcpclient()","~tcpconnectionpair()","~tcpsocket()","~test()","~testrunner()","~thread()","~threadedstreamreader()","~timedmanager()","~timeout()","~timer()","~timespan()","~timestamp()","~transaction()","~udpallocation()","~udpclient()","~udpsocket()","~uint16listattribute()","~url()","~usermanager()","~verificationerrordetails()","~videocodec()","~videopacket()","~videopacketsource()","~websocket()","~websocketadapter()","~websocketframer()","~x509certificate()","~zipfile()","~~~","©","—","“a","“ani","“lesser”","“library”","“library”,","“modification”.)","“sourc","“thi","“work","“you”."],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"LibSourcey\n\nC++ Networking Evolved\n\n\n\n -->\nLibSourcey is a collection of cross platform C++11 modules and classes that provide developers with an arsenal for rapidly developing high performance network based p2p and media streaming applications. Think of it as the power of libuv combined with the features of FFmpeg, OpenCV and WebRTC, all integrated with the ease and readability of the stl (C++ Standard Library).\n\nDocumentation: http://sourcey.com/libsourcey  \nRepository: https://github.com/sourcey/libsourcey  \nLicence: LGPL-2.1+\n\nFeatures\n\nEvent-based IO — Core modules are built on top of libuv (the underlying C library that powers Node.js) and use event-based asynchronous IO throughout to maximise performance and minimise concurrency reliance for building mission critical native and server side apps.\n\nCross platform — The codebase is cross platform and should compile on any system with access to a modern C++11 compiler.\n\nModular libraries — Libraries are modular for easy integration into your existing projects, so you can just \"include what you need\" without incurring extra incumbent bloat.\n\nClean and readable code — Modern C++ design principles have been adhered to throughout for clear and readable code.\n\nNetworking layer — A solid network layer is absolutely essential. The networking layer contains TCP, SSL and UDP socket implementations that combine libuv under the hood for blazing fast networking, and openssl for security and encryption.\n\nMedia streaming and encoding — The av library consists of thin wrappers around FFmpeg and OpenCV for media capture, encoding, recording, streaming, analysis and more.\n\nWeb servers and clients — A HTTP stack is provided that includes servers, clients, WebSockets, media streaming, file transfers, and authentication. The HTTP parser is based on the super-fast C code used by nginx.\n\nRealtime messaging — LibSourcey aims to bridge the gap between desktop, mobile and web by providing performance oriented messaging solutions that work across all platforms.\n\nSocket.IO — Socket.IO C++ client that supports the latest protocol revision 4 (>= 1.0). Read more about Socket.IO.\nSymple — Sourcey's home grown realtime messaging protocol that works over the top of Socket.IO to provide rostering, presence and many other features necessary for building online games and chat applications. More about Symple.\n\n\nWebRTC support — WebRTC native support allows you to build p2p desktop and server side applications that inherit LibSourcey's realtime messaging and media capabilities. Take a look at the examples for how to stream live webcam and microphone streams to the browser, and also how to record live WebRTC streams on the server side.\n\nFull ICE stack — The ICE module is a complete implementation of RFC 5245 (Interactive Connectivity Establishment) based on LibSourcey architecture.\n\nICE — RFC 5245 ICE agent implementation.\nSTUN — RFC 5389 implementation that includes support for ICE and TURN and TURN TCP messages.\nTURN — Server and client stack that supports both RFC 5766 (Traversal Using Relays around NAT) and RFC 6062 (Traversal Using Relays around NAT Extensions for TCP Allocations) specifications.\nSDP — RFC 4566 implementation that includes extra support for ICE headers.\n\n\n\nExample\nA good starting point is the PacketStream, which lets you create a dynamic delegate chain for piping, processing and outputting arbitrary data packets. This method of layering packet processors and dynamic functionality makes it possible to develop complex data processing applications quickly and easily.\nFor example, this is how you would capture a live webcam stream, encode it into H.264, and broadcast it in realtime over the internet:\n// Create a PacketStream to pass packets from the\n// input device captures => encoder => socket\nPacketStream stream;\n\n// Setup the encoder options\nav::EncoderOptions options;\noptions.oformat = av::Format(\"MP4\", \"mp4\",\n    av::VideoCodec(\"H.264\", \"libx264\", 400, 300, 25, 48000, 128000, \"yuv420p\"),\n    av::AudioCodec(\"AAC\", \"libfdk_aac\", 2, 44100, 64000, \"s16\"));\n\n// Create a device manager instance to enumerate system devices\nav::DeviceManager devman;\nav::Device device;\n\n// Create and attach the default video capture\nav::VideoCapture::Ptr video;\nif (devman.getDefaultCamera(device)) {\n    video.open(device.id, 640, 480, 30);\n    video.getEncoderFormat(options.iformat);\n    stream.attachSource(video, true);\n}\n\n// Create and attach the default audio capture\nav::AudioCapture::Ptr audio;\nif (devman.getDefaultMicrophone(device)) {\n    audio.open(device.id, 2, 44100);\n    audio.getEncoderFormat(options.iformat);\n    stream.attachSource(audio, true);\n}\n\n// Create and attach the multiplex encoder\nav::MultiplexPacketEncoder::Ptr encoder(options);\nstream.attach(encoder);\n\n// Attach the output net::Socket instance (instantiated elsewhere)\n// to broadcast encoded packets over the network\nstream.attach(socket);\n\n// Start the stream\n// This method call will start the device captures and begin\n// pumping encoded media into the output socket\nstream.start();\n\nThere are plenty more demos and sample code to play with over on the examples page.\nInstallation\nSee the platform independent installation guides.\nContributors\nA BIG thanks to everyone who has contributed to the development of LibSourcey so far:\n\nKam Low (@auscaster) — Primary developer\nYury Shulbn (@yuryshubin) — iOS build toolchain and platform fixes\nVinci Xu (@VinciShark) — Windows documentation, testing and updates\nMichael Fig (@michael-fig) — Fixed compiler flags to build without FFmpeg\nHyunuk Kim (@surinkim) — Fixed std::codecvt unicode character conversion on Windows\nDamian Zelim (@ZelimDamian) — Fixed compiler flags for OS X build\n\nContributing\nPull Requests are always welcome, so if you make any improvements please feel free to float them back upstream :)\n\nFork LibSourcey on Github\nCreate your feature branch (git checkout -b my-new-feature)\nCommit your changes (git commit -am 'Add some feature')\nPush to the branch (git push origin my-new-feature)\nCreate new Pull Request\n\n\n"},"getting-started.html":{"url":"getting-started.html","title":"Getting Started","keywords":"","body":"Getting Started\nFirst and foremost, welcome to LibSourcey — it's great to have you along for the ride! We've done our best to make the docs as clear as possible to save you time, so if something's missing or changed, or newer versions are available then please let us know or submit a Push Request with your updates.\nBefore going any further please follow the installation guide to compiled and install LibSourcey on your system.\nOnce LibSourcey is installed you a number of choices how you include the libraries in your own project:\n1) Using pkg-config (Linux only)\nUsing pkg-config is the simplest and easiest method to include LibSourcey libraries and headers in your project. After running make install the pkg-config script is located in /usr/local/lib/pkgconfig/libsourcey.pc by default.\nUsing the default structure you can include Libsourcey in your project like so (using gcc):\ngcc -o test test.cpp $(pkg-config --libs --cflags libsourcey)\n\n2) Using CMake\nIf you're already using CMake in your own project then including LibSourcey with CMake is highly recommended. Once you have built and installed LibSourcey you can include all the libraries and headers by adding the following lines to your CMakeLists.txt:\n# The LibSourcey root directory must be set\nset(LibSourcey_ROOT_DIR \"\" CACHE STRING \"Where is the LibSourcey root directory located?\")\nfind_package_handle_standard_args(${module} DEFAULT_MSG LibSourcey_ROOT_DIR)\n\n# Tell CMake where to locate the LibSourcey .cmake files\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${LibSourcey_ROOT_DIR}/cmake)\nset(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} ${LibSourcey_ROOT_DIR}/cmake)\n\n# Include LibSourcey with specified modules (example: uv base net crypto http)\nfind_package(LibSourcey COMPONENTS uv base net crypto http REQUIRED)\n3) Extending the build system\nThe third option is to include the LibSourcey CMake build system in your own project. When you choose this option you will be building LibSourcey modules along side your own project as dependencies, and will also inherit the LibSorucey build system (which is pretty awesome). See here for a complete list of build options.\nThis method is only recommended for advanced users and if you want your project to be tightly coupled with LibSourcey.\nBelow is an example of a full CMakeLists.txt file that you can use to include LibSourcey in your build tree:\ncmake_minimum_required(VERSION 2.8.10)\nproject(exampleapp)\n\n# Set the source directory and search locations as required for your project\nset(sourcedir src)\nset(sourcefiles ${sourcedir}/*.cpp)\nset(headerfiles ${sourcedir}/*.h)\n\n# Include LibSourcey\ninclude(\"../libsourcey/LibSourcey.cmake\")\ninclude_directories(${Libourcey_INCLUDE_DIRS})\n\nlink_libraries(${LibSourcey_LIBRARIES})\ninclude_directories(${sourcedir} ${LibSourcey_INCLUDE_DIRS})\n\n# Glob your sources and headers\n# Be sure to modify the search paths according to your project structure\nfile(GLOB_RECURSE sources ${sourcefiles})\nfile(GLOB_RECURSE headers ${headerfiles})\n\nadd_executable(exampleapp ${sources} ${headers})\ninstall(TARGETS exampleapp)\nNext Steps\nOnce LibSourcey is included in your project you're ready to start using the API. Check out the code examples, and API reference to start cutting code.\n"},"installation.html":{"url":"installation.html","title":"Installation","keywords":"","body":"Installation\nLibSourcey uses CMake to generate the project files for your compiler, and the codebase is cross platform so it should compile on any system with a modern C++11 compiler. LibSourcey has been successfully compiled and used on the following platforms:\n\nLinux (gcc)\nOS X (Xcode, gcc)\nWindows (msys, vs)\nAndroid\niOS\n\nPlease refer to the platform specific installation guides:\n\nLinux\nOS X\nWindows\n\nDependencies\n\nLibUV (>= 1.8.0, required, internal)Networking, filesystem and cross platform utilities\nOpenSSL (>= 1.0.1g, required, external)Required by the net and crypto modules for SSL networking, encryption and cryptography\nFFmpeg (>= 2.8.3, optional, external)Required to compile media related encoding, decoding, device and capture classes in the av module\nWebRTC (optional, external)Peer-to-peer video conferencing\nOpenCV (>= 3.0, optional, external)Video capture and computer vision algorithms\n\n= 4.1.2, optional, internal)\nAudio capture\n-->\nCMake Build Options\nThe main build options you will want to configure are as follows:\n\nBUILD_SHARED_LIBS: Build shared libraries (.dll/.so) instead of static ones (.lib/.a). default: NOT (WIN32 OR ANDROID OR IOS)  \nBUILD_SHARED_LIBS: Build shared libraries (.dll/.so) instead of static ones (.lib/.a). default: NOT (WIN32 OR ANDROID OR IOS)  \nBUILD_DEPENDENCIES: Build LibSourcey in source third-party dependencies. default: ON  \nBUILD_MODULES: Build LibSourcey modules. default: ON  \nBUILD_MODULE_xxx: Enable or disable a specific module replacing xxx with the module name.  \nBUILD_APPLICATIONS: Build LibSourcey modules default: ON  \nBUILD_APPLICATION_xxx: Enable or disable a specific applications replacing xxx with the module name.  \nBUILD_TESTS: Build module test applications default: ON  \nBUILD_TEST_xxx: Enable or disable a specific test replacing xxx with the module name.\nBUILD_SAMPLES: Build module test applications default: ON  \nBUILD_SAMPLE_xxx: Enable or disable a specific test replacing xxx with the module name.\nBUILD_MODULE_SAMPLES: Build module sample applications default: ON  \n\nIf you are using third-party libraries is custom locations then make sure you update the CMake include paths: CMAKE_SYSTEM_PREFIX_PATH and CMAKE_LIBRARY_PATH.\nThe only third-party libraries that may need configuring if you're using them are FFmpeg, OpenCV and WebRTC.\nFor an exhaustive list of options check the CMakeLists.txt in the main directory.\nCMake Build Shortcuts\nBelow are a number of build shortcuts that can be used to build LibSourcey with different features enabled:\n# Default debug build\ncmake .. -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_SHARED_LIBS=OFF \\\n         -DBUILD_MODULES=ON -DBUILD_APPLICATIONS=ON \\\n         -DBUILD_SAMPLES=ON -DBUILD_TESTS=ON \\\n         -DWITH_FFMPEG=ON -DWITH_WEBRTC=OFF\n\n# All modules (selective)\ncmake .. -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_SHARED_LIBS=OFF \\\n         -DBUILD_APPLICATIONS=OFF -DBUILD_MODULES=OFF \\\n         -DBUILD_SAMPLES=ON -DBUILD_TESTS=ON \\\n         -DWITH_FFMPEG=ON -DWITH_OPENCV=OFF \\\n         -DWITH_WEBRTC=OFF -DBUILD_MODULE_archo=ON \\\n         -DBUILD_MODULE_base=ON -DBUILD_MODULE_crypto=ON \\\n         -DBUILD_MODULE_http=ON -DBUILD_MODULE_json=ON \\\n         -DBUILD_MODULE_av=ON -DBUILD_MODULE_net=ON \\\n         -DBUILD_MODULE_pacm=ON -DBUILD_MODULE_pluga=ON \\\n         -DBUILD_MODULE_sked=ON -DBUILD_MODULE_socketio=ON \\\n         -DBUILD_MODULE_stun=ON -DBUILD_MODULE_symple=ON \\\n         -DBUILD_MODULE_turn=ON -DBUILD_MODULE_util=ON \\\n         -DBUILD_MODULE_uv=ON -DBUILD_MODULE_webrtc=ON\n\n# Minimum build (uv, base)\ncmake .. -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_MODULES=OFF \\\n         -DBUILD_MODULE_base=ON -DBUILD_MODULE_uv=ON\n\n# Media build\ncmake .. -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_SHARED_LIBS=OFF \\\n         -DBUILD_APPLICATIONS=OFF -DBUILD_MODULES=OFF \\\n         -DBUILD_SAMPLES=ON -DBUILD_TESTS=ON \\\n         -DWITH_FFMPEG=ON -DWITH_OPENCV=OFF \\\n         -DBUILD_MODULE_av=ON -DBUILD_MODULE_base=ON \\\n         -DBUILD_MODULE_uv=ON\n\n# WebRTC build (with Symple)\ncmake .. -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_SHARED_LIBS=OFF \\\n         -DBUILD_MODULES=OFF -DBUILD_APPLICATIONS=OFF \\\n         -DBUILD_SAMPLES=OFF -DBUILD_TESTS=OFF \\\n         -DWITH_WEBRTC=ON -DWITH_FFMPEG=ON \\\n         -DBUILD_MODULE_base=ON -DBUILD_MODULE_crypto=ON \\\n         -DBUILD_MODULE_http=ON -DBUILD_MODULE_json=ON \\\n         -DBUILD_MODULE_av=ON -DBUILD_MODULE_net=ON \\\n         -DBUILD_MODULE_socketio=ON -DBUILD_MODULE_symple=ON \\\n         -DBUILD_MODULE_util=ON -DBUILD_MODULE_uv=ON \\\n         -DBUILD_MODULE_webrtc=ON\n\n# Symple build (no media)\ncmake .. -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_SHARED_LIBS=OFF \\\n         -DBUILD_APPLICATIONS=ON -DBUILD_MODULES=OFF \\\n         -DBUILD_SAMPLES=ON -DBUILD_TESTS=ON \\\n         -DWITH_FFMPEG=ON -DWITH_OPENCV=OFF \\\n         -DBUILD_MODULE_archo=ON -DBUILD_MODULE_base=ON \\\n         -DBUILD_MODULE_crypto=ON -DBUILD_MODULE_http=ON \\\n         -DBUILD_MODULE_json=ON -DBUILD_MODULE_net=ON \\\n         -DBUILD_MODULE_socketio=ON -DBUILD_MODULE_symple=ON \\\n         -DBUILD_MODULE_util=ON -DBUILD_MODULE_uv=ON\n\n# Symple build (with media)\ncmake .. -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_SHARED_LIBS=OFF \\\n         -DBUILD_APPLICATIONS=ON -DBUILD_MODULES=OFF \\\n         -DBUILD_SAMPLES=ON -DBUILD_TESTS=ON \\\n         -DWITH_FFMPEG=ON -DWITH_OPENCV=OFF \\\n         -DBUILD_MODULE_archo=ON -DBUILD_MODULE_base=ON \\\n         -DBUILD_MODULE_crypto=ON -DBUILD_MODULE_http=ON \\\n         -DBUILD_MODULE_json=ON -DBUILD_MODULE_av=ON \\\n         -DBUILD_MODULE_net=ON -DBUILD_MODULE_socketio=ON \\\n         -DBUILD_MODULE_symple=ON -DBUILD_MODULE_util=ON \\\n         -DBUILD_MODULE_uv=ON\n\n# HTTP build\ncmake .. -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_SHARED_LIBS=OFF \\\n         -DBUILD_APPLICATIONS=ON -DBUILD_MODULES=OFF \\\n         -DBUILD_SAMPLES=ON -DBUILD_TESTS=ON \\\n         -DBUILD_MODULE_archo=ON -DBUILD_MODULE_base=ON \\\n         -DBUILD_MODULE_crypto=ON -DBUILD_MODULE_http=ON \\\n         -DBUILD_MODULE_json=ON -DBUILD_MODULE_net=ON \\\n         -DBUILD_MODULE_util=ON -DBUILD_MODULE_uv=ON\n\n# STUN/TURN build\ncmake .. -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_SHARED_LIBS=OFF \\\n         -DBUILD_APPLICATIONS=ON -DBUILD_MODULES=OFF \\\n         -DBUILD_MODULE_base=ON -DBUILD_MODULE_crypto=ON \\\n         -DBUILD_MODULE_net=ON -DBUILD_MODULE_stun=ON \\\n         -DBUILD_MODULE_turn=ON -DBUILD_MODULE_util=OFF \\\n         -DBUILD_MODULE_uv=ON\n\n"},"installation-linux.html":{"url":"installation-linux.html","title":"Linux Guide","keywords":"","body":"Installing on Linux\nThis guide is written for Ubuntu 14.04, although installation should be fairly portable across most flavors of Linux.\nInstall Dependencies\nBefore doing anything make sure you have the core dependencies installed:\nsudo apt-get update\nsudo apt-get install -y build-essential pkg-config git cmake openssl libssl-dev\n\n\n\nInstall FFmpeg (optional):\nFFmpeg is an optional but recommended dependency that's required to make use of LibSourcey's media encoding capabilities.\nMost versions on Linux have FFmpeg development libraries that you can install directly from the package manager. If you're on a newer version of Ubuntu (>= 15.04) then you can install the required libraries as follows:\nsudo apt-get install --yes libavcodec-ffmpeg-dev libavdevice-ffmpeg-dev libavfilter-ffmpeg-dev libavformat-ffmpeg-dev libswresample-ffmpeg-dev libpostproc-ffmpeg-dev\n\nOtherwise if you want to compile FFmpeg yourself you can follow the official guide for installing FFmpeg that works out of the box with LibSourcey.\n /etc/ld.so.conf.d/opencv.conf'\nsudo ldconfig\n~~~\n-->\nInstall WebRTC (optional):\nInstalling WebRTC can be tricky and time consuming, but using the script below you should be able to get started without a hitch. Using the script is highly recommended as there are a few caveats to take note of when compiling WebRTC for use with LibSourcey:\n\nRTTI must be enabled (the -no_rtti compiler flag must be removed)\nThe WebRTC static library must not contain JsonCpp (it conflicts with our newer internal version)\nlibstdc++ iterator debugging must be disabled or it conflicts with external dependencies compiled without it (ninja build must set enable_iterator_debugging=false)\n\ncd ~/tmp\ngit clone git@github.com:sourcey/webrtcbuilds.git\ncd webrtcbuilds\n./build.sh -l jsoncpp -e\n\nInstall LibSourcey\ncd ~/tmp\ngit clone https://github.com/sourcey/libsourcey.git\ncd libsourcey\nmkdir build\ncd build\ncmake .. -DCMAKE_BUILD_TYPE=RELEASE # extra cmake commands here, see below for a full list...\nmake\nsudo make install\n\nAll done!\nSee here for a complete list of build options.\n"},"installation-osx.html":{"url":"installation-osx.html","title":"OS X Guide","keywords":"","body":"Installing on Apple (OS X)\nThis guide is for written for Mac users using Homebrew.\nInstall Dependencies\n\n# OpenSSL:\nbrew install openssl\nbrew link --force openssl\n\n# CMake:\nbrew install cmake\n\nPlease see the Linux instructions for other optional dependencies. \nInstall LibSourcey\ncd ~/tmp\ngit clone https://github.com/sourcey/libsourcey.git\ncd libsourcey\nmkdir build\ncd build\ncmake .. -D CMAKE_BUILD_TYPE=RELEASE # extra cmake commands here, see below for a full list...\nmake\nsudo make install\n\n\n\n\n\nCompile with Xcode\n\nGenerate Xcode project using CMake, as described above.\nLaunch Xcode, locate and open libsourcey.xcodeproj. Select \"Debug\", build the BUILD_ALL target (Cmd-B), select \"Release\" and build it too.\n\n"},"installation-windows.html":{"url":"installation-windows.html","title":"Windows Guide","keywords":"","body":"Installing on Windows\nInstall Dependencies\nInstall Git\nDownload git-scm\nYou can also use either the git command line or GUI client.  \nInstall CMake\nDownload CMake\nCMake generates the LibSourcey project files so you can build on most platforms and compilers.\nHere we use CMake to generate project for Visual Studio.\nInstall OpenSSL\nDownload and install the Windows OpenSSL binaries.\nDon't forget to set system path if you download zip file version, or if the OpenSSL Installer failed to set the properly:\n\nOPENSSL_INCLUDE_DIR => {PATH_TO_OPENSSL_INSTALL_DIR}\\include\nOPENSSL_LIBRARIES => {PATH_TO_OPENSSL_INSTALL_DIR}\\lib\nOPENSSL_ROOT_DIR => {PATH_TO_OPENSSL_INSTALL_DIR}\\openssl\n\nInstall FFmpeg\nDownload and install FFmpeg for Windows.\nNotice that you need to download both Shared and Dev version.\nExtract zip files and set them to head of your system's PATH (you can just add new item in Windows 10):\n\n{PATH_TO_FFMPEG_DEV_DIR}\\bin\n{PATH_TO_FFMPEG_SHARED_DIR}\\bin\n\nDownload LibSourcey\nClone the repository: git clone https://github.com/sourcey/libsourcey.git. If you haven't got Git for some reason you can download and extract the package archive from GitHub.\nGenerate Project Files\nOpen the CMake GUI and set the project directory to point to the LibSourcey root directory. Execute \"Configure\" to do the initial configuration, then adjust any options, then press \"Configure\" again and then press \"Generate\".\nSee here for a complete list of build options.\nCompile with Visual Studio\n\nGenerate solutions using CMake, as described above. Make sure, you chose the proper generator (32-bit or 64-bit)\nLaunch Visual Studio, locate and open the libsourcey.sln solution file in your generated build folder (eg: C:\\LibSourcey\\build\\libsourcey.sln). Select \"Debug\" configuration, build the solution (Ctrl-Shift-B), and/or select \"Release\" and build it.\nAdd {CMAKE_BINARY_DIR}\\bin\\Release, {CMAKE_BINARY_DIR}\\bin\\Debug (containing libscy*.dll and libscy*d.dll, respectively) to the system path (My Computer--[Right button click]->Properties->Advanced->Environment Variables->Path)\n\n"},"examples.html":{"url":"examples.html","title":"Examples","keywords":"","body":"Examples\nThere are plenty of examples available in the samples and tests folder of each module for you to cut your teeth on.\n\nWebRTC Recorder\nThe WebRTC native multiplex recorder lets you record live WebRTC streams from the browser on the server side.\n\nWebRTC Streamer\nThe WebRTC Streamer lets you stream any video source ie. webcam and microphone or video file from the server to the browser.\n\nMedia Server\nCheck out the mediaserver sample in the av module for how to stream media over HTTP, WebSocket and TURN protocols. You will need to compile LibSourcey with FFmpeg enabled to use it.\n\nDevice Recorder\nThe devicerecorder sample lets you multiplex record live webcam and microphone capture streams in any video format supported by FFmpeg. Remember, you will need to compile LibSourcey with FFmpeg enabled to use it.\n\nDevice Enumerator\nThe deviceenumerator sample outputs all the available input and output devices on the system.\n\nHTTP Echo Server\nWhere would we be without the good ol' HTTP echo server? Works for HTTP, HTTPS and WebSocket connections.\n\nSocket Echo Server\nThe socket echo server echoes raw data packets over TCP and UPD socket connections.\n\nPackage Manager\nTake a look at pacm for a redistributable C++ package manager built on LibSourcey, and specifically the pacmconsole application. http://sourcey.com/pacm/\n\nTURN Server\nThe TURN server provides a functional RFC 5766 server implementation.\n\n\n"},"api-archo.html":{"url":"api-archo.html","title":"Archo","keywords":"","body":"Module  archo\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy::archo\n\n\n\n\nnamespace scy::archo \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nstructscy::archo::ZipFile\n\n\n\n\nstruct scy::archo::ZipFile \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::vectorFileInfo> info\n\n\n\npublic unzFile fp\n\n\n\npublic  ZipFile()\n\n\n\npublic  ZipFile(const std::string & file)\n\n\n\npublic  ~ZipFile()\n\n\n\npublic void open(const std::string & file)\n\n\n\npublic bool opened() const\n\n\n\npublic void close()\n\n\n\npublic void extract(const std::string & path)\nExtracts the archive contents to the given directory path.\n\n\npublic bool extractCurrentFile(const std::string & path,bool whiny)\n\n\n\npublic bool goToFirstFile()\n\n\n\npublic bool goToNextFile()\n\n\n\npublic void openCurrentFile()\n\n\n\npublic void closeCurrentFile()\n\n\n\npublic std::string currentFileName()\n\n\n\n\nMembers\npublic std::vectorFileInfo> info \npublic unzFile fp \npublic  ZipFile() \npublic  ZipFile(const std::string & file) \npublic  ~ZipFile() \npublic void open(const std::string & file) \npublic bool opened() const \npublic void close() \npublic void extract(const std::string & path) \nExtracts the archive contents to the given directory path.\npublic bool extractCurrentFile(const std::string & path,bool whiny) \npublic bool goToFirstFile() \npublic bool goToNextFile() \npublic void openCurrentFile() \npublic void closeCurrentFile() \npublic std::string currentFileName() \n"},"api-av.html":{"url":"api-av.html","title":"AV","keywords":"","body":"Module  av\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy::av\n\n\n\nnamespacescy::av::legacy\n\n\n\n\nnamespace scy::av \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::av::DeviceManager\n\n\n\nclassscy::av::DeviceManagerFactory\n\n\n\nclassscy::av::DeviceWatcher\n\n\n\nclassscy::av::FakeDeviceManager\n\n\n\nclassscy::av::FLVMetadataInjector\n\n\n\nclassscy::av::FormatRegistry\n\n\n\nclassscy::av::FPSCounter\nAn FPS counter based on the simple moving average (SMA) algorithm.\n\n\nclassscy::av::FPSLimiter\n\n\n\nclassscy::av::ICapture\n\n\n\nclassscy::av::IDeviceManager\n\n\n\nclassscy::av::IEncoder\nThis is the abstract class for all encoders.\n\n\nclassscy::av::LinuxDeviceManager\n\n\n\nclassscy::av::MacDeviceManager\n\n\n\nclassscy::av::MacDeviceWatcher\n\n\n\nclassscy::av::RealtimePacketQueue\nThis class emits media packets based on their realtime pts value.\n\n\nstructscy::av::AudioCodec\n\n\n\nstructscy::av::AudioPacket\n\n\n\nstructscy::av::Codec\n\n\n\nstructscy::av::Device\nRepresents a system audio, video or render device.\n\n\nstructscy::av::EncoderOptions\n\n\n\nstructscy::av::EncoderState\n\n\n\nstructscy::av::Format\n\n\n\nstructscy::av::MediaPacket\n\n\n\nstructscy::av::VideoCodec\n\n\n\nstructscy::av::VideoPacket\n\n\n\n\nclass scy::av::DeviceManager \nclass scy::av::DeviceManager\n  : public scy::av::IDeviceManager\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  DeviceManager()\n\n\n\npublic virtual  ~DeviceManager()\n\n\n\npublic virtual bool initialize()\nInitialization.\n\n\npublic virtual void uninitialize()\n\n\n\npublic virtual int getCapabilities()\nCapabilities.\n\n\npublic virtual bool getAudioInputDevices(std::vectorDevice> & devices)\nDevice enumeration.\n\n\npublic virtual bool getAudioOutputDevices(std::vectorDevice> & devices)\n\n\n\npublic virtual bool getAudioInputDevice(Device& out,const std::string & name,int id)\n\n\n\npublic virtual bool getAudioInputDevice(Device& out,int id)\n\n\n\npublic virtual bool getAudioOutputDevice(Device& out,const std::string & name,int id)\n\n\n\npublic virtual bool getAudioOutputDevice(Device& out,int id)\n\n\n\npublic virtual bool getVideoCaptureDevices(std::vectorDevice> & devs)\n\n\n\npublic virtual bool getVideoCaptureDevice(Device& out,const std::string & name,int id)\n\n\n\npublic virtual bool getVideoCaptureDevice(Device& out,int id)\nReturns the video capture device at the given system index.\n\n\npublic virtual bool getDefaultAudioInputDevice(Device& device)\n\n\n\npublic virtual bool getDefaultAudioOutputDevice(Device& device)\n\n\n\npublic virtual bool getDefaultVideoCaptureDevice(Device& device)\n\n\n\npublic inline bool initialized() const\n\n\n\npublic virtual void print(std::ostream & ost)\n\n\n\nprotected virtual bool getDefaultAudioDevice(bool input,Device& device)\n\n\n\nprotected virtual bool getAudioDevices(bool input,std::vectorDevice> & devs)\n\n\n\nprotected virtual bool getAudioDevice(bool input,Device& out,const std::string & name,int id)\n\n\n\nprotected virtual bool getAudioDevice(bool input,Device& out,int id)\n\n\n\nprotected void setInitialized(bool initialized)\n\n\n\nprotected void setWatcher(DeviceWatcher* watcher)\n\n\n\nprotectedDeviceWatcher* watcher()\n\n\n\n\nMembers\npublic  DeviceManager() \npublic virtual  ~DeviceManager() \npublic virtual bool initialize() \nInitialization.\npublic virtual void uninitialize() \npublic virtual int getCapabilities() \nCapabilities.\npublic virtual bool getAudioInputDevices(std::vectorDevice> & devices) \nDevice enumeration.\npublic virtual bool getAudioOutputDevices(std::vectorDevice> & devices) \npublic virtual bool getAudioInputDevice(Device& out,const std::string & name,int id) \npublic virtual bool getAudioInputDevice(Device& out,int id) \npublic virtual bool getAudioOutputDevice(Device& out,const std::string & name,int id) \npublic virtual bool getAudioOutputDevice(Device& out,int id) \npublic virtual bool getVideoCaptureDevices(std::vectorDevice> & devs) \npublic virtual bool getVideoCaptureDevice(Device& out,const std::string & name,int id) \npublic virtual bool getVideoCaptureDevice(Device& out,int id) \nReturns the video capture device at the given system index.\npublic virtual bool getDefaultAudioInputDevice(Device& device) \npublic virtual bool getDefaultAudioOutputDevice(Device& device) \npublic virtual bool getDefaultVideoCaptureDevice(Device& device) \npublic inline bool initialized() const \npublic virtual void print(std::ostream & ost) \nprotected virtual bool getDefaultAudioDevice(bool input,Device& device) \nprotected virtual bool getAudioDevices(bool input,std::vectorDevice> & devs) \nprotected virtual bool getAudioDevice(bool input,Device& out,const std::string & name,int id) \nprotected virtual bool getAudioDevice(bool input,Device& out,int id) \nprotected void setInitialized(bool initialized) \nprotected void setWatcher(DeviceWatcher* watcher) \nprotectedDeviceWatcher* watcher() \nclass scy::av::DeviceManagerFactory \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\n\n\n\n\nMembers\nclass scy::av::DeviceWatcher \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  explicit DeviceWatcher(IDeviceManager*)\n\n\n\npublic inline virtual  ~DeviceWatcher()\n\n\n\npublic inline virtual bool start()\n\n\n\npublic inline virtual void stop()\n\n\n\n\nMembers\npublic inline  explicit DeviceWatcher(IDeviceManager*) \npublic inline virtual  ~DeviceWatcher() \npublic inline virtual bool start() \npublic inline virtual void stop() \nclass scy::av::FakeDeviceManager \nclass scy::av::FakeDeviceManager\n  : public scy::av::IDeviceManager\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  FakeDeviceManager()\n\n\n\npublic inline virtual bool initialize()\nInitialization.\n\n\npublic inline virtual void uninitialize()\n\n\n\npublic inline virtual int getCapabilities()\nCapabilities.\n\n\npublic inline virtual bool getMicrophones(std::vectorDevice> & devs)\n\n\n\npublic inline virtual bool getSpeakers(std::vectorDevice> & devs)\n\n\n\npublic inline virtual bool getMicrophone(const std::string & name,Device& out)\n\n\n\npublic inline virtual bool getSpeaker(const std::string & name,Device& out)\n\n\n\npublic inline virtual bool getCameras(std::vectorDevice> & devs)\n\n\n\npublic inline virtual bool getDefaultCamera(Device& device)\n\n\n\npublic inline void setMicrophones(const std::vectorDevice> & devices)\n\n\n\npublic inline void setSpeakers(const std::vectorDevice> & devices)\n\n\n\npublic inline void setCameras(const std::vectorDevice> & devices)\n\n\n\npublic inline virtual bool getCamera(const std::string & name,Device& out)\n\n\n\npublic inline bool getAudioDevice(bool input,const std::string & name,Device& out)\n\n\n\n\nMembers\npublic inline  FakeDeviceManager() \npublic inline virtual bool initialize() \nInitialization.\npublic inline virtual void uninitialize() \npublic inline virtual int getCapabilities() \nCapabilities.\npublic inline virtual bool getMicrophones(std::vectorDevice> & devs) \npublic inline virtual bool getSpeakers(std::vectorDevice> & devs) \npublic inline virtual bool getMicrophone(const std::string & name,Device& out) \npublic inline virtual bool getSpeaker(const std::string & name,Device& out) \npublic inline virtual bool getCameras(std::vectorDevice> & devs) \npublic inline virtual bool getDefaultCamera(Device& device) \npublic inline void setMicrophones(const std::vectorDevice> & devices) \npublic inline void setSpeakers(const std::vectorDevice> & devices) \npublic inline void setCameras(const std::vectorDevice> & devices) \npublic inline virtual bool getCamera(const std::string & name,Device& out) \npublic inline bool getAudioDevice(bool input,const std::string & name,Device& out) \nclass scy::av::FLVMetadataInjector \nclass scy::av::FLVMetadataInjector\n  : public scy::PacketProcessor\nThis class implements a packetizer which appends correct stream headers and modifies the timestamp of FLV packets so Adobe's Flash Player will play our videos mid-stream.\nThis adapter is useful for multicast situations where we don't have the option of restarting the encoder stream.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicPacketSignalemitter\n\n\n\npublic  IPacketizer(this-> emitter)\n\n\n\npublic  _format(format)\n\n\n\npublic  _initial(true)\n\n\n\npublic  _modifyingStream(false)\n\n\n\npublic  _waitingForKeyframe(false)\n\n\n\npublic inline  _timestampOffset(0) const\n\n\n\npublic inline virtual void onStreamStateChange(constPacketStreamState& state)\nwhenever the stream is restarted.\n\n\npublic inline virtual void process(IPacket& packet)\n\n\n\npublic inline virtual void fastUpdateTimestamp(char * buf,std::uint32_t timestamp)\n\n\n\npublic inline virtual bool fastIsFLVHeader(char * buf)\nCaution: this method does not check buffer size.\n\n\npublic inline virtual bool fastIsFLVKeyFrame(char * buf)\nCaution: this method does not check buffer size.\n\n\npublic inline virtual void writeFLVHeader(BitWriter& writer)\n\n\n\npublic inline std::int64_t doubleToInt(double d)\n\n\n\npublic inline virtual void writeAMFSring(BitWriter& writer,const char * val)\nAMF Helpers.\n\n\npublic inline virtual void writeAMFDouble(BitWriter& writer,double val)\n\n\n\npublic inline virtual void writeAMFBool(BitWriter& writer,bool val)\n\n\n\nprotectedFormat_format\n\n\n\nprotected bool _initial\n\n\n\nprotected bool _modifyingStream\n\n\n\nprotected bool _waitingForKeyframe\n\n\n\nprotected std::uint32_t _timestampOffset\n\n\n\nprotectedlegacy::FPSCounter_fpsCounter\n\n\n\n\nMembers\npublicPacketSignalemitter \npublic  IPacketizer(this-> emitter) \npublic  _format(format) \npublic  _initial(true) \npublic  _modifyingStream(false) \npublic  _waitingForKeyframe(false) \npublic inline  _timestampOffset(0) const \npublic inline virtual void onStreamStateChange(constPacketStreamState& state) \nwhenever the stream is restarted.\nThis method is called by the Packet Stream\npublic inline virtual void process(IPacket& packet) \nThis method performs processing on the given packet and emits the result.\nNote: If packet processing is async (the packet is not in the current thread scope) then packet data must be copied. Copied data can be freed directly aFter the async call to emit() the outgoing packet.\npublic inline virtual void fastUpdateTimestamp(char * buf,std::uint32_t timestamp) \nUpdates the timestamp in the given FLV tag buffer. No more need to copy data with this method. Caution: this method does not check buffer size.\npublic inline virtual bool fastIsFLVHeader(char * buf) \nCaution: this method does not check buffer size.\npublic inline virtual bool fastIsFLVKeyFrame(char * buf) \nCaution: this method does not check buffer size.\npublic inline virtual void writeFLVHeader(BitWriter& writer) \npublic inline std::int64_t doubleToInt(double d) \npublic inline virtual void writeAMFSring(BitWriter& writer,const char * val) \nAMF Helpers.\npublic inline virtual void writeAMFDouble(BitWriter& writer,double val) \npublic inline virtual void writeAMFBool(BitWriter& writer,bool val) \nprotectedFormat_format \nprotected bool _initial \nprotected bool _modifyingStream \nprotected bool _waitingForKeyframe \nprotected std::uint32_t _timestampOffset \nprotectedlegacy::FPSCounter_fpsCounter \nclass scy::av::FormatRegistry \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  FormatRegistry()\n\n\n\npublic virtual  ~FormatRegistry()\n\n\n\npublic virtualFormat& get(const std::string & name)\n\n\n\npublic virtualFormat& getByID(const std::string & id)\n\n\n\npublic virtualFormat& getOrDefault(const std::string & name)\n\n\n\npublic virtualFormat& getDefault()\n\n\n\npublic virtual void registerFormat(constFormat& format)\n\n\n\npublic virtual bool unregisterFormat(const std::string & name)\n\n\n\npublic virtual void setDefault(const std::string & name)\nSets the default fallback media format.\n\n\npublic virtual bool exists(const std::string & name)\n\n\n\npublic virtual void clear()\n\n\n\npublic virtual FormatList formats() const\n\n\n\n\nMembers\npublic  FormatRegistry() \npublic virtual  ~FormatRegistry() \npublic virtualFormat& get(const std::string & name) \npublic virtualFormat& getByID(const std::string & id) \npublic virtualFormat& getOrDefault(const std::string & name) \npublic virtualFormat& getDefault() \nIf a default has been specified it will be returned, other the format with the highest priority will take precedence.\npublic virtual void registerFormat(constFormat& format) \nRegisters the given media format overriding existing media formats of the same name.\npublic virtual bool unregisterFormat(const std::string & name) \nUnregisters the media format matching the given name.\npublic virtual void setDefault(const std::string & name) \nSets the default fallback media format.\npublic virtual bool exists(const std::string & name) \npublic virtual void clear() \npublic virtual FormatList formats() const \nclass scy::av::FPSCounter \nAn FPS counter based on the simple moving average (SMA) algorithm.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic double fps\n\n\n\npublic std::int64_t frames\n\n\n\npublic inline  FPSCounter()\n\n\n\npublic inline void reset()\n\n\n\npublic inline void tick()\n\n\n\n\nMembers\npublic double fps \npublic std::int64_t frames \npublic inline  FPSCounter() \npublic inline void reset() \npublic inline void tick() \nclass scy::av::FPSLimiter \nclass scy::av::FPSLimiter\n  : public scy::PacketProcessor\nThis class limits the throughput rate of IPackets in a PacketStream. If the throughput rate exceeds the max specified FPS then packets will be dropped.\nNote that revious processors must not fragment packets otherwise this class will not be accurate, and the packet drop rate will be too high.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicPacketSignalemitter\n\n\n\npublic inline  FPSLimiter(int max,bool videoOnly)\n\n\n\npublic inline virtual void process(IPacket& packet)\n\n\n\npublic inline virtual void onStreamStateChange(constPacketStreamState&)\n\n\n\nprotected int _max\n\n\n\nprotected bool _videoOnly\n\n\n\nprotectedlegacy::FPSCounter_counter\n\n\n\n\nMembers\npublicPacketSignalemitter \npublic inline  FPSLimiter(int max,bool videoOnly) \npublic inline virtual void process(IPacket& packet) \nThis method performs processing on the given packet and emits the result.\nNote: If packet processing is async (the packet is not in the current thread scope) then packet data must be copied. Copied data can be freed directly aFter the async call to emit() the outgoing packet.\npublic inline virtual void onStreamStateChange(constPacketStreamState&) \nCalled by the PacketStream to notify when the internal Stream state changes. On receiving the Stopped state, it is the responsibility of the adapter to have ceased all outgoing packet transmission, especially in multi-thread scenarios.\nprotected int _max \nprotected bool _videoOnly \nprotectedlegacy::FPSCounter_counter \nclass scy::av::ICapture \nclass scy::av::ICapture\n  : public scy::PacketStreamAdapter\n  : public scy::async::Startable\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicPacketSignalemitter\n\n\n\npublic inline  ICapture()\n\n\n\npublic inline virtual  ~ICapture()\n\n\n\npublic void start()\n\n\n\npublic void stop()\n\n\n\npublic void getEncoderFormat(Format& iformat)\nSets the input format for encoding with this capture device.\n\n\npublic inline virtual void onStreamStateChange(constPacketStreamState&)\n\n\n\n\nMembers\npublicPacketSignalemitter \npublic inline  ICapture() \npublic inline virtual  ~ICapture() \npublic void start() \npublic void stop() \npublic void getEncoderFormat(Format& iformat) \nSets the input format for encoding with this capture device.\npublic inline virtual void onStreamStateChange(constPacketStreamState&) \nCalled by the PacketStream to notify when the internal Stream state changes. On receiving the Stopped state, it is the responsibility of the adapter to have ceased all outgoing packet transmission, especially in multi-thread scenarios.\nclass scy::av::IDeviceManager \nA platform independent interface to enumerate audio and video devices on the system.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicSignal2 DevicesChanged\n\n\n\npublic inline virtual  ~IDeviceManager()\n\n\n\npublic bool initialize()\nInitialization.\n\n\npublic void uninitialize()\n\n\n\npublic bool getAudioInputDevices(std::vectorDevice> & devices)\nDevice enumeration.\n\n\npublic bool getAudioOutputDevices(std::vectorDevice> & devices)\n\n\n\npublic bool getAudioInputDevice(Device& out,const std::string & name,int id)\n\n\n\npublic bool getAudioInputDevice(Device& out,int id)\n\n\n\npublic bool getAudioOutputDevice(Device& out,const std::string & name,int id)\n\n\n\npublic bool getAudioOutputDevice(Device& out,int id)\n\n\n\npublic bool getVideoCaptureDevices(std::vectorDevice> & devs)\n\n\n\npublic bool getVideoCaptureDevice(Device& out,int id)\n\n\n\npublic bool getVideoCaptureDevice(Device& out,const std::string & name,int id)\n\n\n\npublic bool getDefaultAudioInputDevice(Device& device)\n\n\n\npublic bool getDefaultAudioOutputDevice(Device& device)\n\n\n\npublic bool getDefaultVideoCaptureDevice(Device& device)\n\n\n\npublic int getCapabilities()\nCapabilities.\n\n\npublic void print(std::ostream & ost)\n\n\n\n\nMembers\npublicSignal2 DevicesChanged \nSignals on DevicesChanged. Arg 1 is true when device is video, false for audio Arg 2 is true when device connects, flase on disconnection\npublic inline virtual  ~IDeviceManager() \npublic bool initialize() \nInitialization.\npublic void uninitialize() \npublic bool getAudioInputDevices(std::vectorDevice> & devices) \nDevice enumeration.\npublic bool getAudioOutputDevices(std::vectorDevice> & devices) \npublic bool getAudioInputDevice(Device& out,const std::string & name,int id) \npublic bool getAudioInputDevice(Device& out,int id) \npublic bool getAudioOutputDevice(Device& out,const std::string & name,int id) \npublic bool getAudioOutputDevice(Device& out,int id) \npublic bool getVideoCaptureDevices(std::vectorDevice> & devs) \npublic bool getVideoCaptureDevice(Device& out,int id) \npublic bool getVideoCaptureDevice(Device& out,const std::string & name,int id) \npublic bool getDefaultAudioInputDevice(Device& device) \npublic bool getDefaultAudioOutputDevice(Device& device) \npublic bool getDefaultVideoCaptureDevice(Device& device) \npublic int getCapabilities() \nCapabilities.\npublic void print(std::ostream & ost) \nclass scy::av::IEncoder \nclass scy::av::IEncoder\n  : public scy::Stateful\nThis is the abstract class for all encoders.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic void initialize()\n\n\n\npublic void uninitialize()\n\n\n\npublicEncoderOptions& options()\n\n\n\npublic inline virtual bool isNone() const\n\n\n\npublic inline virtual bool isReady() const\n\n\n\npublic inline virtual bool isEncoding() const\n\n\n\npublic inline virtual bool isActive() const\n\n\n\npublic inline virtual bool isStopped() const\n\n\n\npublic inline virtual bool isError() const\n\n\n\n\nMembers\npublic void initialize() \npublic void uninitialize() \npublicEncoderOptions& options() \npublic inline virtual bool isNone() const \npublic inline virtual bool isReady() const \npublic inline virtual bool isEncoding() const \npublic inline virtual bool isActive() const \npublic inline virtual bool isStopped() const \npublic inline virtual bool isError() const \nclass scy::av::LinuxDeviceManager \nclass scy::av::LinuxDeviceManager\n  : public scy::av::DeviceManager\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  LinuxDeviceManager()\n\n\n\npublic virtual  ~LinuxDeviceManager()\n\n\n\npublic virtual bool getCameras(std::vectorDevice> & devs)\n\n\n\n\nMembers\npublic  LinuxDeviceManager() \npublic virtual  ~LinuxDeviceManager() \npublic virtual bool getCameras(std::vectorDevice> & devs) \nclass scy::av::MacDeviceManager \nclass scy::av::MacDeviceManager\n  : public scy::av::DeviceManager\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  MacDeviceManager()\n\n\n\npublic virtual  ~MacDeviceManager()\n\n\n\npublic virtual bool getCameras(std::vectorDevice> & devs)\n\n\n\n\nMembers\npublic  MacDeviceManager() \npublic virtual  ~MacDeviceManager() \npublic virtual bool getCameras(std::vectorDevice> & devs) \nclass scy::av::MacDeviceWatcher \nclass scy::av::MacDeviceWatcher\n  : public scy::av::DeviceWatcher\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  explicit MacDeviceWatcher(IDeviceManager* dm)\n\n\n\npublic virtual  ~MacDeviceWatcher()\n\n\n\npublic virtual bool start()\n\n\n\npublic virtual void stop()\n\n\n\n\nMembers\npublic  explicit MacDeviceWatcher(IDeviceManager* dm) \npublic virtual  ~MacDeviceWatcher() \npublic virtual bool start() \npublic virtual void stop() \nclass scy::av::RealtimePacketQueue \nclass scy::av::RealtimePacketQueue\n  : public scy::AsyncPacketQueue\nThis class emits media packets based on their realtime pts value.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  RealtimePacketQueue(int maxSize)\n\n\n\npublic inline virtual  ~RealtimePacketQueue()\n\n\n\npublic inline std::int64_t realTime()\nReturn the current duration from stream start in microseconds.\n\n\nprotected std::int64_t _startTime\n\n\n\nprotected inline virtual PacketT * popNext()\n\n\n\nprotected inline virtual void onStreamStateChange(constPacketStreamState&)\n\n\n\n\nMembers\npublic inline  RealtimePacketQueue(int maxSize) \npublic inline virtual  ~RealtimePacketQueue() \npublic inline std::int64_t realTime() \nReturn the current duration from stream start in microseconds.\nprotected std::int64_t _startTime \nprotected inline virtual PacketT * popNext() \nprotected inline virtual void onStreamStateChange(constPacketStreamState&) \nCalled by the PacketStream to notify when the internal Stream state changes. On receiving the Stopped state, it is the responsibility of the adapter to have ceased all outgoing packet transmission, especially in multi-thread scenarios.\nstruct scy::av::AudioCodec \nstruct scy::av::AudioCodec\n  : public scy::av::Codec\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic int channels\n\n\n\npublic std::string sampleFmt\n\n\n\npublic  AudioCodec()\nint frameSize; // Frame size (optional value set by encoder/decoder) /// int bufferSize; // Buffer size (optional value set by encoder/decoder)\n\n\npublic  AudioCodec(const std::string & name,int channels,int sampleRate,int bitRate,const std::string & sampleFmt)\n\n\n\npublic  AudioCodec(const std::string & name,const std::string & encoder,int channels,int sampleRate,int bitRate,const std::string & sampleFmt)\n\n\n\npublic virtual  ~AudioCodec()\nAudioCodec(const AudioCodec& r);.\n\n\npublic virtual std::string toString() const\n\n\n\npublic virtual void print(std::ostream & ost)\n\n\n\n\nMembers\npublic int channels \npublic std::string sampleFmt \nOne of: u8, s16, s32, flt, dbl, u8p, s16p, s32p, fltp, dblp\npublic  AudioCodec() \nint frameSize; // Frame size (optional value set by encoder/decoder) /// int bufferSize; // Buffer size (optional value set by encoder/decoder)\npublic  AudioCodec(const std::string & name,int channels,int sampleRate,int bitRate,const std::string & sampleFmt) \npublic  AudioCodec(const std::string & name,const std::string & encoder,int channels,int sampleRate,int bitRate,const std::string & sampleFmt) \npublic virtual  ~AudioCodec() \nAudioCodec(const AudioCodec& r);.\npublic virtual std::string toString() const \npublic virtual void print(std::ostream & ost) \nstruct scy::av::AudioPacket \nstruct scy::av::AudioPacket\n  : public scy::av::MediaPacket\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::size_t numSamples\n\n\n\npublic inline  AudioPacket(std::uint8_t * data,std::size_t size,std::size_t numSamples,std::int64_t time)\n\n\n\npublic inline virtual  ~AudioPacket()\nAudioPacket(const AudioPacket& r) : /// MediaPacket(r) {}.\n\n\npublic inline virtualIPacket* clone() const\n\n\n\npublic inline virtual std::uint8_t * samples() const\n\n\n\npublic inline virtual const char * className() const\n\n\n\n\nMembers\npublic std::size_t numSamples \npublic inline  AudioPacket(std::uint8_t * data,std::size_t size,std::size_t numSamples,std::int64_t time) \npublic inline virtual  ~AudioPacket() \nAudioPacket(const AudioPacket& r) : /// MediaPacket(r) {}.\npublic inline virtualIPacket* clone() const \npublic inline virtual std::uint8_t * samples() const \npublic inline virtual const char * className() const \nstruct scy::av::Codec \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::string name\nThe display name for this codec.\n\n\npublic std::string encoder\nThe encoder name for FFmpeg.\n\n\npublic int sampleRate\nThe sampling rate or RTP clock rate.\n\n\npublic int bitRate\nThe bit rate to encode at.\n\n\npublic int quality\nOptional quality value, variable range depending on codec.\n\n\npublic bool enabled\nWeather or not the codec is available for use.\n\n\npublic  Codec()\n\n\n\npublic  Codec(const std::string & name,int sampleRate,int bitRate,bool enabled)\n\n\n\npublic  Codec(const std::string & name,const std::string & encoder,int sampleRate,int bitRate,bool enabled)\n\n\n\npublic virtual  ~Codec()\nCodec(const Codec& r);.\n\n\npublic virtual std::string toString() const\n\n\n\npublic virtual void print(std::ostream & ost)\n\n\n\n\nMembers\npublic std::string name \nThe display name for this codec.\npublic std::string encoder \nThe encoder name for FFmpeg.\npublic int sampleRate \nThe sampling rate or RTP clock rate.\npublic int bitRate \nThe bit rate to encode at.\npublic int quality \nOptional quality value, variable range depending on codec.\npublic bool enabled \nWeather or not the codec is available for use.\npublic  Codec() \npublic  Codec(const std::string & name,int sampleRate,int bitRate,bool enabled) \npublic  Codec(const std::string & name,const std::string & encoder,int sampleRate,int bitRate,bool enabled) \npublic virtual  ~Codec() \nCodec(const Codec& r);.\npublic virtual std::string toString() const \npublic virtual void print(std::ostream & ost) \nstruct scy::av::Device \nRepresents a system audio, video or render device.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::string type\n\n\n\npublic int id\n\n\n\npublic std::string name\n\n\n\npublic std::string guid\n\n\n\npublic bool isDefault\n\n\n\npublic bool isAvailable\n\n\n\npublic  Device()\n\n\n\npublic  Device(const std::string & type,int id,const std::string & name,const std::string & guid,bool isDefault,bool isAvailable)\n\n\n\npublic void print(std::ostream & os)\n\n\n\npublic inline bool operator==(constDevice& that) const\n\n\n\n\nMembers\npublic std::string type \npublic int id \npublic std::string name \npublic std::string guid \npublic bool isDefault \npublic bool isAvailable \npublic  Device() \npublic  Device(const std::string & type,int id,const std::string & name,const std::string & guid,bool isDefault,bool isAvailable) \npublic void print(std::ostream & os) \npublic inline bool operator==(constDevice& that) const \nstruct scy::av::EncoderOptions \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicFormatiformat\n\n\n\npublicFormatoformat\n\n\n\npublic std::string ifile\n\n\n\npublic std::string ofile\n\n\n\npublic long duration\n\n\n\npublic inline  EncoderOptions(constFormat& iformat,constFormat& oformat,const std::string & ifile,const std::string & ofile,long duration)\n\n\n\npublic inline virtual  ~EncoderOptions()\n\n\n\n\nMembers\npublicFormatiformat \npublicFormatoformat \npublic std::string ifile \npublic std::string ofile \npublic long duration \npublic inline  EncoderOptions(constFormat& iformat,constFormat& oformat,const std::string & ifile,const std::string & ofile,long duration) \npublic inline virtual  ~EncoderOptions() \nstruct scy::av::EncoderState \nstruct scy::av::EncoderState\n  : public scy::State\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual std::string str(unsigned int id) const\n\n\n\n\nMembers\npublic inline virtual std::string str(unsigned int id) const \nstruct scy::av::Format \nDefines a media container format which is available through the Format Registry for encoding/decoding. A format defined preferred default values for each codec.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::string name\nBase Format Variables.\n\n\npublic std::string id\nThe short name of this format.\n\n\npublicVideoCodecvideo\nThe video codec.\n\n\npublicAudioCodecaudio\nThe audio codec.\n\n\npublic int priority\nThe priority this format will be displayed on the list.\n\n\npublic  Format()\nCtors/Dtors.\n\n\npublic  Format(const std::string & name,const std::string & id,constVideoCodec& video,constAudioCodec& audio,int priority)\n\n\n\npublic  Format(const std::string & name,const std::string & id,constVideoCodec& video,int priority)\n\n\n\npublic  Format(const std::string & name,const std::string & id,constAudioCodec& audio,int priority)\n\n\n\npublic  Format(constFormat& r)\n\n\n\npublicTypetype() const\nThe format type.\n\n\npublic virtual std::string toString() const\n\n\n\npublic virtual void print(std::ostream & ost)\n\n\n\n\nMembers\npublic std::string name \nBase Format Variables.\nThe display name of this format.\npublic std::string id \nThe short name of this format.\npublicVideoCodecvideo \nThe video codec.\npublicAudioCodecaudio \nThe audio codec.\npublic int priority \nThe priority this format will be displayed on the list.\npublic  Format() \nCtors/Dtors.\npublic  Format(const std::string & name,const std::string & id,constVideoCodec& video,constAudioCodec& audio,int priority) \npublic  Format(const std::string & name,const std::string & id,constVideoCodec& video,int priority) \npublic  Format(const std::string & name,const std::string & id,constAudioCodec& audio,int priority) \npublic  Format(constFormat& r) \npublicTypetype() const \nThe format type.\npublic virtual std::string toString() const \npublic virtual void print(std::ostream & ost) \nstruct scy::av::MediaPacket \nstruct scy::av::MediaPacket\n  : public scy::RawPacket\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::int64_t time\n\n\n\npublic inline  MediaPacket(std::uint8_t * data,std::size_t size,std::int64_t time)\n\n\n\npublic inline  MediaPacket(constMediaPacket& r)\n\n\n\npublic inline virtual  ~MediaPacket()\n\n\n\npublic inline virtualIPacket* clone() const\n\n\n\npublic inline virtual const char * className() const\n\n\n\n\nMembers\npublic std::int64_t time \npublic inline  MediaPacket(std::uint8_t * data,std::size_t size,std::int64_t time) \npublic inline  MediaPacket(constMediaPacket& r) \npublic inline virtual  ~MediaPacket() \npublic inline virtualIPacket* clone() const \npublic inline virtual const char * className() const \nstruct scy::av::VideoCodec \nstruct scy::av::VideoCodec\n  : public scy::av::Codec\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic int width\n\n\n\npublic int height\n\n\n\npublic double fps\n\n\n\npublic std::string pixelFmt\n\n\n\npublic  VideoCodec()\n\n\n\npublic  VideoCodec(const std::string & name,int width,int height,double fps,int bitRate,int sampleRate,const std::string & pixelFmt)\n\n\n\npublic  VideoCodec(const std::string & name,const std::string & encoder,int width,int height,double fps,int bitRate,int sampleRate,const std::string & pixelFmt)\n\n\n\npublic  VideoCodec(constVideoCodec& r)\n\n\n\npublic virtual  ~VideoCodec()\n\n\n\npublic virtual std::string toString() const\n\n\n\npublic virtual void print(std::ostream & ost)\n\n\n\n\nMembers\npublic int width \npublic int height \npublic double fps \npublic std::string pixelFmt \npublic  VideoCodec() \npublic  VideoCodec(const std::string & name,int width,int height,double fps,int bitRate,int sampleRate,const std::string & pixelFmt) \npublic  VideoCodec(const std::string & name,const std::string & encoder,int width,int height,double fps,int bitRate,int sampleRate,const std::string & pixelFmt) \npublic  VideoCodec(constVideoCodec& r) \npublic virtual  ~VideoCodec() \npublic virtual std::string toString() const \npublic virtual void print(std::ostream & ost) \nstruct scy::av::VideoPacket \nstruct scy::av::VideoPacket\n  : public scy::av::MediaPacket\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic int width\n\n\n\npublic int height\n\n\n\npublic bool iframe\n\n\n\npublic inline  VideoPacket(std::uint8_t * data,std::size_t size,int width,int height,std::int64_t time)\n\n\n\npublic inline  VideoPacket(constVideoPacket& r)\n\n\n\npublic inline virtual  ~VideoPacket()\n\n\n\npublic inline virtualIPacket* clone() const\n\n\n\npublic inline virtual const char * className() const\n\n\n\n\nMembers\npublic int width \npublic int height \npublic bool iframe \npublic inline  VideoPacket(std::uint8_t * data,std::size_t size,int width,int height,std::int64_t time) \npublic inline  VideoPacket(constVideoPacket& r) \npublic inline virtual  ~VideoPacket() \npublic inline virtualIPacket* clone() const \npublic inline virtual const char * className() const \nnamespace scy::av::legacy \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nstructscy::av::legacy::FPSCounter\n\n\n\n\nstruct scy::av::legacy::FPSCounter \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic clock_t start\n\n\n\npublic clock_t end\n\n\n\npublic std::int64_t frames\n\n\n\npublic double total\n\n\n\npublic double fps\n\n\n\npublic inline  FPSCounter()\n\n\n\npublic inline void tick()\n\n\n\npublic inline void reset()\n\n\n\npublic inline bool started()\n\n\n\npublic inline void startFrame()\n\n\n\npublic inline double endFrame()\n\n\n\n\nMembers\npublic clock_t start \npublic clock_t end \npublic std::int64_t frames \npublic double total \npublic double fps \npublic inline  FPSCounter() \npublic inline void tick() \npublic inline void reset() \npublic inline bool started() \npublic inline void startFrame() \npublic inline double endFrame() \n"},"api-base.html":{"url":"api-base.html","title":"Base","keywords":"","body":"Module  base\nThe base module contains reusable cross platform tools and utilities.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy\n\n\n\nnamespacescy::async\nClasses for asynchronous programming.\n\n\nnamespacescy::base64\n\n\n\nnamespacescy::hex\n\n\n\nnamespacescy::basic\n\n\n\nnamespacescy::ipc\nClasses for inter-process communication.\n\n\nnamespacescy::deleter\nDeleter Functors.\n\n\nnamespacescy::test\nModern unit testing classes.\n\n\nnamespacescy::util\n\n\n\n\nnamespace scy \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::AbstractCollection\n\n\n\nclassscy::Application\n\n\n\nclassscy::AsyncLogWriter\n\n\n\nclassscy::AsyncPacketQueue\n\n\n\nclassscy::AsyncQueue\n\n\n\nclassscy::AsyncStartable\n\n\n\nclassscy::BitReader\nA BitReader for reading binary streams.\n\n\nclassscy::BitWriter\n\n\n\nclassscy::Configuration\n\n\n\nclassscy::ConsoleChannel\n\n\n\nclassscy::ConstBuffer\n\n\n\nclassscy::DateTime\n\n\n\nclassscy::DateTimeFormat\n\n\n\nclassscy::DateTimeFormatter\n\n\n\nclassscy::DateTimeParser\n\n\n\nclassscy::Delegate\n\n\n\nclassscy::FileChannel\n\n\n\nclassscy::FlagPacket\nA simple flag packet for sending state flags along the packet stream.\n\n\nclassscy::GarbageCollector\nSimple garbage collector for deferred pointer deletion.\n\n\nclassscy::Idler\n\n\n\nclassscy::IPacket\n\n\n\nclassscy::IPacketCreationStrategy\n\n\n\nclassscy::KVCollection\nA reusable stack based unique key-value store for DRY coding.\n\n\nclassscy::LiveCollection\n\n\n\nclassscy::LocalDateTime\n\n\n\nclassscy::LogChannel\n\n\n\nclassscy::Logger\n\n\n\nclassscy::LogWriter\n\n\n\nclassscy::MutableBuffer\n\n\n\nclassscy::MutexState\n\n\n\nclassscy::NullSignal\n\n\n\nclassscy::NVCollection\n\n\n\nclassscy::PacketFactory\n\n\n\nclassscy::PacketProcessor\nFor 0.8.x compatibility.\n\n\nclassscy::PacketStream\n\n\n\nclassscy::PacketStreamAdapter\n\n\n\nclassscy::PacketTransaction\n\n\n\nclassscy::PointerCollection\n\n\n\nclassscy::Process\n\n\n\nclassscy::Queue\nImplements a thread-safe queue container.\n\n\nclassscy::Random\n\n\n\nclassscy::RawPacket\n\n\n\nclassscy::RotatingFileChannel\n\n\n\nclassscy::RunnableQueue\n\n\n\nclassscy::ScopedConfiguration\n\n\n\nclassscy::ScopedPointer\nScoped Pointer Classes.\n\n\nclassscy::ScopedRawPointer\n\n\n\nclassscy::ScopedSharedPointer\n\n\n\nclassscy::SharedObject\n\n\n\nclassscy::Signal\n\n\n\nclassscy::Signal2\n\n\n\nclassscy::Signal3\n\n\n\nclassscy::Signal4\n\n\n\nclassscy::SignalBase\n\n\n\nclassscy::Singleton\n\n\n\nclassscy::State\n\n\n\nclassscy::Stateful\n\n\n\nclassscy::StateSignal\n\n\n\nclassscy::StopPropagation\nThis exception is used to break out of a Signal callback scope.\n\n\nclassscy::Stopwatch\n\n\n\nclassscy::Stream\n\n\n\nclassscy::StreamWriter\n\n\n\nclassscy::SyncContext\n\n\n\nclassscy::SyncPacketQueue\n\n\n\nclassscy::SyncQueue\n\n\n\nclassscy::Task\n\n\n\nclassscy::TaskRunner\n\n\n\nclassscy::Thread\n\n\n\nclassscy::ThreadedStreamReader\n\n\n\nclassscy::TimedToken\nA token that expires after the specified duration.\n\n\nclassscy::Timeout\nSimple millisecond timeout counter which expires after a given delay.\n\n\nclassscy::Timer\n\n\n\nclassscy::Timespan\nA class that represents time spans up to microsecond resolution.\n\n\nclassscy::Timestamp\n\n\n\nclassscy::Timezone\nThis class provides information about the current timezone.\n\n\nclassscy::TZInfo\n\n\n\nstructscy::Bitwise\n\n\n\nstructscy::DelegateBase\n\n\n\nstructscy::DelegateCallback\n\n\n\nstructscy::DelegateCallback\n\n\n\nstructscy::DelegateCallback\n\n\n\nstructscy::DelegateCallback\n\n\n\nstructscy::DelegateCallback\n\n\n\nstructscy::DelegateCallback\n\n\n\nstructscy::DelegateCallback\n\n\n\nstructscy::DelegateCallback\n\n\n\nstructscy::DelegateCallback\n\n\n\nstructscy::DelegateCallback\n\n\n\nstructscy::DelegateCallback\n\n\n\nstructscy::DelegateCallback\n\n\n\nstructscy::DelegateCallback\n\n\n\nstructscy::Error\n\n\n\nstructscy::IPacketInfo\n\n\n\nstructscy::LogStream\n\n\n\nstructscy::OptionParser\n\n\n\nstructscy::PacketAdapterReference\nFor 0.8.x compatibility.\n\n\nstructscy::PacketCreationStrategy\n\n\n\nstructscy::PacketStreamState\n\n\n\nstructscy::SharedLibrary\n\n\n\nstructscy::TransactionState\n\n\n\n\nclass scy::AbstractCollection \nAbstractCollection is an abstract interface for managing a key-value store of indexed pointers.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  AbstractCollection()\n\n\n\npublic inline virtual  ~AbstractCollection()\n\n\n\npublic bool add(const TKey & key,TValue * item,bool whiny)\n\n\n\npublic bool remove(const TValue * item)\n\n\n\npublic TValue * remove(const TKey & key)\n\n\n\npublic bool exists(const TKey & key) const\n\n\n\npublic bool exists(const TValue * item) const\n\n\n\npublic bool free(const TKey & key)\n\n\n\npublic bool empty() const\n\n\n\npublic int size() const\n\n\n\npublic TValue * get(const TKey & key,bool whiny) const\n\n\n\npublic void clear()\n\n\n\n\nMembers\npublic inline  AbstractCollection() \npublic inline virtual  ~AbstractCollection() \npublic bool add(const TKey & key,TValue * item,bool whiny) \npublic bool remove(const TValue * item) \npublic TValue * remove(const TKey & key) \npublic bool exists(const TKey & key) const \npublic bool exists(const TValue * item) const \npublic bool free(const TKey & key) \npublic bool empty() const \npublic int size() const \npublic TValue * get(const TKey & key,bool whiny) const \npublic void clear() \nclass scy::Application \nA simple event based application which runs until the internal event loop is terminated.\nThe Application class provides shutdown handling (Ctrl-C).\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic uv::Loop * loop\n\n\n\npublic  Application(uv::Loop * loop)\n\n\n\npublic  ~Application()\n\n\n\npublic void run()\n\n\n\npublic void stop()\n\n\n\npublic void finalize()\n\n\n\npublic void bindShutdownSignal(std::function callback,void * opaque)\nBind the shutdown signal.\n\n\npublic void waitForShutdown(std::function callback,void * opaque)\nBind the shutdown signal and run the main event loop.\n\n\nprotected  Application(constApplication&)\n\n\n\nprotected  Application(Application&&)\n\n\n\nprotectedApplication& operator=(constApplication&)\n\n\n\nprotectedApplication& operator=(Application&&)\n\n\n\n\nMembers\npublic uv::Loop * loop \nThe active event loop. May be assigned at construction, otherwise the default event loop is used.\npublic  Application(uv::Loop * loop) \npublic  ~Application() \npublic void run() \npublic void stop() \npublic void finalize() \npublic void bindShutdownSignal(std::function callback,void * opaque) \nBind the shutdown signal.\nShutdown handling\npublic void waitForShutdown(std::function callback,void * opaque) \nBind the shutdown signal and run the main event loop.\nprotected  Application(constApplication&) \nprotected  Application(Application&&) \nprotectedApplication& operator=(constApplication&) \nprotectedApplication& operator=(Application&&) \nclass scy::AsyncLogWriter \nclass scy::AsyncLogWriter\n  : public scy::LogWriter\n  : public scy::async::Runnable\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  AsyncLogWriter()\n\n\n\npublic virtual  ~AsyncLogWriter()\n\n\n\npublic virtual void write(LogStream* stream)\nQueues the given log message stream.\n\n\npublic void flush()\nFlushes queued messages.\n\n\npublic virtual void run()\nWrites queued messages asynchronously.\n\n\npublic void clear()\nClears all queued messages.\n\n\nprotectedThread_thread\n\n\n\nprotected std::dequeLogStream* > _pending\n\n\n\nprotected mutableMutex_mutex\n\n\n\nprotected bool writeNext()\n\n\n\n\nMembers\npublic  AsyncLogWriter() \npublic virtual  ~AsyncLogWriter() \npublic virtual void write(LogStream* stream) \nQueues the given log message stream.\npublic void flush() \nFlushes queued messages.\npublic virtual void run() \nWrites queued messages asynchronously.\npublic void clear() \nClears all queued messages.\nprotectedThread_thread \nprotected std::dequeLogStream* > _pending \nprotected mutableMutex_mutex \nprotected bool writeNext() \nclass scy::AsyncPacketQueue \nclass scy::AsyncPacketQueue\n  : public scy::AsyncQueue\n  : public scy::PacketProcessor\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicPacketSignalemitter\n\n\n\npublic inline  AsyncPacketQueue(int maxSize)\n\n\n\npublic inline virtual  ~AsyncPacketQueue()\n\n\n\npublic inline virtual void close()\n\n\n\npublic inline virtual void process(IPacket& packet)\n\n\n\npublic inline virtual bool accepts(IPacket&)\n\n\n\nprotected inline virtual void dispatch(T & packet)\n\n\n\nprotected inline virtual void onStreamStateChange(constPacketStreamState&)\n\n\n\n\nMembers\npublicPacketSignalemitter \npublic inline  AsyncPacketQueue(int maxSize) \npublic inline virtual  ~AsyncPacketQueue() \npublic inline virtual void close() \npublic inline virtual void process(IPacket& packet) \nThis method performs processing on the given packet and emits the result.\nNote: If packet processing is async (the packet is not in the current thread scope) then packet data must be copied. Copied data can be freed directly aFter the async call to emit() the outgoing packet.\npublic inline virtual bool accepts(IPacket&) \nThis method ensures compatibility with the given packet type. Return false to reject the packet.\nprotected inline virtual void dispatch(T & packet) \nprotected inline virtual void onStreamStateChange(constPacketStreamState&) \nCalled by the PacketStream to notify when the internal Stream state changes. On receiving the Stopped state, it is the responsibility of the adapter to have ceased all outgoing packet transmission, especially in multi-thread scenarios.\nclass scy::AsyncQueue \nclass scy::AsyncQueue\n  : public scy::RunnableQueue\nAsyncQueue is a thread-based queue which receives packets from any thread source and dispatches them asynchronously.\nThis queue is useful for deferring load from operation critical system devices before performing long running tasks.\nThe thread will call the RunnableQueue's run() method to constantly flush outgoing packets until cancel() is called.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  AsyncQueue(int limit)\n\n\n\npublic inline virtual void cancel()\n\n\n\nprotectedThread_thread\n\n\n\nprotected inline virtual  ~AsyncQueue()\n\n\n\n\nMembers\npublic inline  AsyncQueue(int limit) \npublic inline virtual void cancel() \nprotectedThread_thread \nprotected inline virtual  ~AsyncQueue() \nclass scy::AsyncStartable \nclass scy::AsyncStartable\n  : public TStartable\nDepreciated: This class is an invisible wrapper around a TStartable instance, which provides asynchronous access to the TStartable start() and stop() methods. TStartable is an instance of async::Startable.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  AsyncStartable()\n\n\n\npublic inline virtual  ~AsyncStartable()\n\n\n\npublic inline virtual bool start()\n\n\n\npublic inline virtual void stop()\n\n\n\nprotectedThread_thread\n\n\n\n\nMembers\npublic inline  AsyncStartable() \npublic inline virtual  ~AsyncStartable() \npublic inline virtual bool start() \npublic inline virtual void stop() \nprotectedThread_thread \nclass scy::BitReader \nA BitReader for reading binary streams.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  BitReader(const char * bytes,std::size_t size,ByteOrderorder)\n\n\n\npublic  BitReader(const Buffer & buf,ByteOrderorder)\n\n\n\npublic  BitReader(constConstBuffer& pod,ByteOrderorder)\n\n\n\npublic  ~BitReader()\n\n\n\npublic void get(char * val,std::size_t len)\n\n\n\npublic void get(std::string & val,std::size_t len)\n\n\n\npublic void getU8(std::uint8_t & val)\n\n\n\npublic void getU16(std::uint16_t & val)\n\n\n\npublic void getU24(std::uint32_t & val)\n\n\n\npublic void getU32(std::uint32_t & val)\n\n\n\npublic void getU64(std::uint64_t & val)\n\n\n\npublic const char peek()\n\n\n\npublic const std::uint8_t peekU8()\n\n\n\npublic const std::uint16_t peekU16()\n\n\n\npublic const std::uint32_t peekU24()\n\n\n\npublic const std::uint32_t peekU32()\n\n\n\npublic const std::uint64_t peekU64()\n\n\n\npublic int skipToChar(char c)\nString parsing methods.\n\n\npublic int skipWhitespace()\n\n\n\npublic int skipToNextLine()\n\n\n\npublic int skipNextWord()\n\n\n\npublic int readNextWord(std::string & val)\n\n\n\npublic int readNextNumber(unsigned int & val)\n\n\n\npublic int readLine(std::string & val)\n\n\n\npublic int readToNext(std::string & val,char c)\n\n\n\npublic void seek(std::size_t val)\n\n\n\npublic void skip(std::size_t size)\n\n\n\npublic std::size_t limit() const\nReturns the read limit.\n\n\npublic inline std::size_t position() const\nReturns the current read position.\n\n\npublic std::size_t available() const\nReturns the number of elements between the current position and the limit.\n\n\npublic inline const char * begin() const\n\n\n\npublic inline const char * current() const\n\n\n\npublic inlineByteOrderorder() const\n\n\n\npublic std::string toString()\n\n\n\n\nMembers\npublic  BitReader(const char * bytes,std::size_t size,ByteOrderorder) \npublic  BitReader(const Buffer & buf,ByteOrderorder) \npublic  BitReader(constConstBuffer& pod,ByteOrderorder) \npublic  ~BitReader() \npublic void get(char * val,std::size_t len) \nReads a value from the BitReader. Returns false if there isn't enough data left for the specified type. Throws a std::out_of_range exception if reading past the limit.\npublic void get(std::string & val,std::size_t len) \npublic void getU8(std::uint8_t & val) \npublic void getU16(std::uint16_t & val) \npublic void getU24(std::uint32_t & val) \npublic void getU32(std::uint32_t & val) \npublic void getU64(std::uint64_t & val) \npublic const char peek() \npublic const std::uint8_t peekU8() \npublic const std::uint16_t peekU16() \npublic const std::uint32_t peekU24() \npublic const std::uint32_t peekU32() \npublic const std::uint64_t peekU64() \nPeeks data from the BitReader. -1 is returned if reading past boundary.\npublic int skipToChar(char c) \nString parsing methods.\npublic int skipWhitespace() \npublic int skipToNextLine() \npublic int skipNextWord() \npublic int readNextWord(std::string & val) \npublic int readNextNumber(unsigned int & val) \npublic int readLine(std::string & val) \npublic int readToNext(std::string & val,char c) \npublic void seek(std::size_t val) \nSet position pointer to absolute position. Throws a std::out_of_range exception if the value exceeds the limit.\npublic void skip(std::size_t size) \nSet position pointer to relative position. Throws a std::out_of_range exception if the value exceeds the limit.\npublic std::size_t limit() const \nReturns the read limit.\npublic inline std::size_t position() const \nReturns the current read position.\npublic std::size_t available() const \nReturns the number of elements between the current position and the limit.\npublic inline const char * begin() const \npublic inline const char * current() const \npublic inlineByteOrderorder() const \npublic std::string toString() \nclass scy::BitWriter \nA BitWriter for reading/writing binary streams.\nNote that when using the constructor with the Buffer reference as an argument, the writer will dynamically expand the given buffer when writing passed the buffer capacity. All other cases will throw a std::out_of_range error when writing past the buffer capacity.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  BitWriter(char * bytes,std::size_t size,ByteOrderorder)\n\n\n\npublic  BitWriter(Buffer & buf,ByteOrderorder)\n\n\n\npublic  BitWriter(MutableBuffer& pod,ByteOrderorder)\n\n\n\npublic  ~BitWriter()\n\n\n\npublic void put(const char * val,std::size_t len)\n\n\n\npublic void put(const std::string & val)\n\n\n\npublic void putU8(std::uint8_t val)\n\n\n\npublic void putU16(std::uint16_t val)\n\n\n\npublic void putU24(std::uint32_t val)\n\n\n\npublic void putU32(std::uint32_t val)\n\n\n\npublic void putU64(std::uint64_t val)\n\n\n\npublic bool update(const char * val,std::size_t len,std::size_t pos)\n\n\n\npublic bool update(const std::string & val,std::size_t pos)\n\n\n\npublic bool updateU8(std::uint8_t val,std::size_t pos)\n\n\n\npublic bool updateU16(std::uint16_t val,std::size_t pos)\n\n\n\npublic bool updateU24(std::uint32_t val,std::size_t pos)\n\n\n\npublic bool updateU32(std::uint32_t val,std::size_t pos)\n\n\n\npublic bool updateU64(std::uint64_t val,std::size_t pos)\n\n\n\npublic void seek(std::size_t val)\n\n\n\npublic void skip(std::size_t size)\n\n\n\npublic std::size_t limit() const\nReturns the write limit.\n\n\npublic inline std::size_t position() const\nReturns the current write position.\n\n\npublic std::size_t available() const\nReturns the number of elements between the current write position and the limit.\n\n\npublic inline char * begin()\n\n\n\npublic inline char * current()\n\n\n\npublic inline const char * begin() const\n\n\n\npublic inline const char * current() const\n\n\n\npublic inlineByteOrderorder() const\nReturns written bytes as a string.\n\n\npublic std::string toString()\n\n\n\n\nMembers\npublic  BitWriter(char * bytes,std::size_t size,ByteOrderorder) \npublic  BitWriter(Buffer & buf,ByteOrderorder) \npublic  BitWriter(MutableBuffer& pod,ByteOrderorder) \npublic  ~BitWriter() \npublic void put(const char * val,std::size_t len) \nAppend bytes to the buffer. Throws a std::out_of_range exception if reading past the limit.\npublic void put(const std::string & val) \npublic void putU8(std::uint8_t val) \npublic void putU16(std::uint16_t val) \npublic void putU24(std::uint32_t val) \npublic void putU32(std::uint32_t val) \npublic void putU64(std::uint64_t val) \npublic bool update(const char * val,std::size_t len,std::size_t pos) \nUpdate a byte range. Throws a std::out_of_range exception if reading past the limit.\npublic bool update(const std::string & val,std::size_t pos) \npublic bool updateU8(std::uint8_t val,std::size_t pos) \npublic bool updateU16(std::uint16_t val,std::size_t pos) \npublic bool updateU24(std::uint32_t val,std::size_t pos) \npublic bool updateU32(std::uint32_t val,std::size_t pos) \npublic bool updateU64(std::uint64_t val,std::size_t pos) \npublic void seek(std::size_t val) \nSet position pointer to absolute position. Throws a std::out_of_range exception if the value exceeds the limit.\npublic void skip(std::size_t size) \nSet position pointer to relative position. Throws a std::out_of_range exception if the value exceeds the limit.\npublic std::size_t limit() const \nReturns the write limit.\npublic inline std::size_t position() const \nReturns the current write position.\npublic std::size_t available() const \nReturns the number of elements between the current write position and the limit.\npublic inline char * begin() \npublic inline char * current() \npublic inline const char * begin() const \npublic inline const char * current() const \npublic inlineByteOrderorder() const \nReturns written bytes as a string.\npublic std::string toString() \nclass scy::Configuration \nConfiguration is an abstract base class for managing /// different kinds of configuration storage back ends such as /// JSON, XML, or database.\nSubclasses must override the getRaw() and setRaw() and methods.\nThis class is safe for multithreaded use.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicSignal2 PropertyChanged\nThe Key and Value of the changed configuration property.\n\n\npublic  Configuration()\nCreates the Configuration.\n\n\npublic virtual  ~Configuration()\nDestroys the Configuration.\n\n\npublic bool exists(const std::string & key) const\nReturns true if the property with the given key exists.\n\n\npublic std::string getString(const std::string & key) const\n\n\n\npublic std::string getString(const std::string & key,const std::string & defaultValue) const\n\n\n\npublic std::string getRawString(const std::string & key) const\n\n\n\npublic std::string getRawString(const std::string & key,const std::string & defaultValue) const\n\n\n\npublic int getInt(const std::string & key) const\n\n\n\npublic int getInt(const std::string & key,int defaultValue) const\n\n\n\npublic std::int64_t getLargeInt(const std::string & key) const\n\n\n\npublic std::int64_t getLargeInt(const std::string & key,std::int64_t defaultValue) const\n\n\n\npublic double getDouble(const std::string & key) const\n\n\n\npublic double getDouble(const std::string & key,double defaultValue) const\n\n\n\npublic bool getBool(const std::string & key) const\n\n\n\npublic bool getBool(const std::string & key,bool defaultValue) const\n\n\n\npublic void setString(const std::string & key,const std::string & value)\n\n\n\npublic void setInt(const std::string & key,int value)\n\n\n\npublic void setLargeInt(const std::string & key,std::int64_t value)\n\n\n\npublic void setDouble(const std::string & key,double value)\n\n\n\npublic void setBool(const std::string & key,bool value)\n\n\n\nprotected bool getRaw(const std::string & key,std::string & value) const\n\n\n\nprotected void setRaw(const std::string & key,const std::string & value)\n\n\n\n\nMembers\npublicSignal2 PropertyChanged \nThe Key and Value of the changed configuration property.\npublic  Configuration() \nCreates the Configuration.\npublic virtual  ~Configuration() \nDestroys the Configuration.\npublic bool exists(const std::string & key) const \nReturns true if the property with the given key exists.\npublic std::string getString(const std::string & key) const \nReturns the string value of the property with the given name. Throws a NotFoundException if the key does not exist.\npublic std::string getString(const std::string & key,const std::string & defaultValue) const \nIf a property with the given key exists, returns the property's string value, otherwise returns the given default value.\npublic std::string getRawString(const std::string & key) const \nReturns the raw string value of the property with the given name. Throws a NotFoundException if the key does not exist. References to other properties are not expanded.\npublic std::string getRawString(const std::string & key,const std::string & defaultValue) const \nIf a property with the given key exists, returns the property's raw string value, otherwise returns the given default value. References to other properties are not expanded.\npublic int getInt(const std::string & key) const \nReturns the int value of the property with the given name. Throws a NotFoundException if the key does not exist. Throws a SyntaxException if the property can not be converted to an int. Numbers starting with 0x are treated as hexadecimal.\npublic int getInt(const std::string & key,int defaultValue) const \nIf a property with the given key exists, returns the property's int value, otherwise returns the given default value. Throws a SyntaxException if the property can not be converted to an int. Numbers starting with 0x are treated as hexadecimal.\npublic std::int64_t getLargeInt(const std::string & key) const \nReturns the int value of the property with the given name. Throws a NotFoundException if the key does not exist. Throws a SyntaxException if the property can not be converted to an int. Numbers starting with 0x are treated as hexadecimal.\npublic std::int64_t getLargeInt(const std::string & key,std::int64_t defaultValue) const \nIf a property with the given key exists, returns the property's int value, otherwise returns the given default value. Throws a SyntaxException if the property can not be converted to an int. Numbers starting with 0x are treated as hexadecimal.\npublic double getDouble(const std::string & key) const \nReturns the double value of the property with the given name. Throws a NotFoundException if the key does not exist. Throws a SyntaxException if the property can not be converted to a double.\npublic double getDouble(const std::string & key,double defaultValue) const \nIf a property with the given key exists, returns the property's double value, otherwise returns the given default value. Throws a SyntaxException if the property can not be converted to an double.\npublic bool getBool(const std::string & key) const \nReturns the double value of the property with the given name. Throws a NotFoundException if the key does not exist. Throws a SyntaxException if the property can not be converted to a double.\npublic bool getBool(const std::string & key,bool defaultValue) const \nIf a property with the given key exists, returns the property's bool value, otherwise returns the given default value. Throws a SyntaxException if the property can not be converted to a boolean. The following string values can be converted into a boolean:\n\nnumerical values: non zero becomes true, zero becomes false\n\n\nstrings: true, yes, on become true, false, no, off become false Case does not matter.\n\npublic void setString(const std::string & key,const std::string & value) \nSets the property with the given key to the given value. An already existing value for the key is overwritten.\npublic void setInt(const std::string & key,int value) \nSets the property with the given key to the given value. An already existing value for the key is overwritten.\npublic void setLargeInt(const std::string & key,std::int64_t value) \nSets the property with the given key to the given value. An already existing value for the key is overwritten.\npublic void setDouble(const std::string & key,double value) \nSets the property with the given key to the given value. An already existing value for the key is overwritten.\npublic void setBool(const std::string & key,bool value) \nSets the property with the given key to the given value. An already existing value for the key is overwritten.\nprotected bool getRaw(const std::string & key,std::string & value) const \nIf the property with the given key exists, stores the property's value in value and returns true. Otherwise, returns false.\nMust be overridden by subclasses.\nprotected void setRaw(const std::string & key,const std::string & value) \nSets the property with the given key to the given value. An already existing value for the key is overwritten.\nThe implementation is responsible for emitting the PropertyChanged signal.\nclass scy::ConsoleChannel \nclass scy::ConsoleChannel\n  : public scy::LogChannel\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  ConsoleChannel(const std::string & name,LogLevel level,const std::string & timeFormat)\n\n\n\npublic inline virtual  ~ConsoleChannel()\n\n\n\npublic virtual void write(constLogStream& stream)\n\n\n\n\nMembers\npublic  ConsoleChannel(const std::string & name,LogLevel level,const std::string & timeFormat) \npublic inline virtual  ~ConsoleChannel() \npublic virtual void write(constLogStream& stream) \nclass scy::ConstBuffer \nThe ConstBuffer class provides a safe representation of a buffer that cannot be modified. It does not own the underlying data, and so is cheap to copy or assign.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  ConstBuffer()\nConstruct an empty buffer.\n\n\npublic inline  ConstBuffer(const void * data,std::size_t size)\nConstruct a buffer to represent the given memory range.\n\n\npublic inline  ConstBuffer(constMutableBuffer& b)\nConstruct a non-modifiable buffer from a modifiable one.\n\n\npublic inline const void * data() const\n\n\n\npublic inline std::size_t size() const\n\n\n\npublic inline const char * cstr() const\nString methods.\n\n\npublic inline std::string str() const\n\n\n\n\nMembers\npublic inline  ConstBuffer() \nConstruct an empty buffer.\npublic inline  ConstBuffer(const void * data,std::size_t size) \nConstruct a buffer to represent the given memory range.\npublic inline  ConstBuffer(constMutableBuffer& b) \nConstruct a non-modifiable buffer from a modifiable one.\npublic inline const void * data() const \npublic inline std::size_t size() const \npublic inline const char * cstr() const \nString methods.\npublic inline std::string str() const \nclass scy::DateTime \nThis class represents an instant in time, expressed in years, months, days, hours, minutes, seconds and milliseconds based on the Gregorian calendar. The class is mainly useful for conversions between UTC, Julian day and Gregorian calendar dates.\nThe date and time stored in a DateTime is always in UTC (Coordinated Universal Time) and thus independent of the timezone in effect on the system.\nConversion calculations are based on algorithms collected and described by Peter Baum at http://vsg.cape.com/~pbaum/date/date0.htm\nInternally, this class stores a date/time in two forms (UTC and broken down) for performance reasons. Only use this class for conversions between date/time representations. Use the Timestamp class for everything else.\nNotes:\n\nZero is a valid year (in accordance with ISO 8601 and astronomical year numbering)\n\n\nYear zero (0) is a leap year\n\n\nNegative years (years preceding 1 BC) are not supported\n\nFor more information, please see:\n\nhttp://en.wikipedia.org/wiki/Gregorian_Calendar\n\n\nhttp://en.wikipedia.org/wiki/Julian_day\n\n\nhttp://en.wikipedia.org/wiki/UTC\n\n\nhttp://en.wikipedia.org/wiki/ISO_8601\n\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  DateTime()\nCreates a DateTime for the current date and time.\n\n\npublic  DateTime(constTimestamp& timestamp)\n\n\n\npublic  DateTime(int year,int month,int day,int hour,int minute,int second,int millisecond,int microsecond)\n\n\n\npublic  DateTime(double julianDay)\nCreates a DateTime for the given Julian day.\n\n\npublic  DateTime(Timestamp::UtcTimeValutcTime,Timestamp::TimeDiffdiff)\n\n\n\npublic  DateTime(constDateTime& dateTime)\nCopy constructor. Creates the DateTime from another one.\n\n\npublic  ~DateTime()\nDestroys the DateTime.\n\n\npublicDateTime& operator=(constDateTime& dateTime)\nAssigns another DateTime.\n\n\npublicDateTime& operator=(constTimestamp& timestamp)\nAssigns a Timestamp.\n\n\npublicDateTime& operator=(double julianDay)\nAssigns a Julian day.\n\n\npublicDateTime& assign(int year,int month,int day,int hour,int minute,int second,int millisecond,int microseconds)\n\n\n\npublic void swap(DateTime& dateTime)\nSwaps the DateTime with another one.\n\n\npublic inline int year() const\nReturns the year.\n\n\npublic inline int month() const\nReturns the month (1 to 12).\n\n\npublic int week(int firstDayOfWeek) const\n\n\n\npublic inline int day() const\nReturns the day witin the month (1 to 31).\n\n\npublic int dayOfWeek() const\n\n\n\npublic int dayOfYear() const\n\n\n\npublic inline int hour() const\nReturns the hour (0 to 23).\n\n\npublic inline int hourAMPM() const\nReturns the hour (0 to 12).\n\n\npublic inline bool isAM() const\nReturns true if hour \n\n\npublic inline bool isPM() const\nReturns true if hour >= 12.\n\n\npublic inline int minute() const\nReturns the minute (0 to 59).\n\n\npublic inline int second() const\nReturns the second (0 to 59).\n\n\npublic inline int millisecond() const\nReturns the millisecond (0 to 999)\n\n\npublic inline int microsecond() const\nReturns the microsecond (0 to 999)\n\n\npublic double julianDay() const\nReturns the julian day for the date and time.\n\n\npublic inlineTimestamptimestamp() const\nReturns the date and time expressed as a Timestamp.\n\n\npublic inlineTimestamp::UtcTimeValutcTime() const\n\n\n\npublic inline bool operator==(constDateTime& dateTime) const\n\n\n\npublic inline bool operator!=(constDateTime& dateTime) const\n\n\n\npublic inline bool operatorDateTime& dateTime) const\n\n\n\npublic inline bool operatorDateTime& dateTime) const\n\n\n\npublic inline bool operator>(constDateTime& dateTime) const\n\n\n\npublic inline bool operator>=(constDateTime& dateTime) const\n\n\n\npublicDateTimeoperator+(constTimespan& span) const\n\n\n\npublicDateTimeoperator-(constTimespan& span) const\n\n\n\npublicTimespanoperator-(constDateTime& dateTime) const\n\n\n\npublicDateTime& operator+=(constTimespan& span)\n\n\n\npublicDateTime& operator-=(constTimespan& span)\n\n\n\npublic void makeUTC(int tzd)\nConverts a local time into UTC, by applying the given time zone differential.\n\n\npublic void makeLocal(int tzd)\nConverts a UTC time into a local time, by applying the given time zone differential.\n\n\nprotected void computeGregorian(double julianDay)\n\n\n\nprotected void computeDaytime()\nExtracts the daytime (hours, minutes, seconds, etc.) from the stored utcTime.\n\n\n\nMembers\npublic  DateTime() \nCreates a DateTime for the current date and time.\npublic  DateTime(constTimestamp& timestamp) \nCreates a DateTime for the date and time given in a Timestamp.\npublic  DateTime(int year,int month,int day,int hour,int minute,int second,int millisecond,int microsecond) \nCreates a DateTime for the given Gregorian date and time.\n\nyear is from 0 to 9999.\n\n\nmonth is from 1 to 12.\n\n\nday is from 1 to 31.\n\n\nhour is from 0 to 23.\n\n\nminute is from 0 to 59.\n\n\nsecond is from 0 to 59.\n\n\nmillisecond is from 0 to 999.\n\n\nmicrosecond is from 0 to 999.\n\npublic  DateTime(double julianDay) \nCreates a DateTime for the given Julian day.\npublic  DateTime(Timestamp::UtcTimeValutcTime,Timestamp::TimeDiffdiff) \nCreates a DateTime from an UtcTimeVal and a TimeDiff.\nMainly used internally by DateTime and friends.\npublic  DateTime(constDateTime& dateTime) \nCopy constructor. Creates the DateTime from another one.\npublic  ~DateTime() \nDestroys the DateTime.\npublicDateTime& operator=(constDateTime& dateTime) \nAssigns another DateTime.\npublicDateTime& operator=(constTimestamp& timestamp) \nAssigns a Timestamp.\npublicDateTime& operator=(double julianDay) \nAssigns a Julian day.\npublicDateTime& assign(int year,int month,int day,int hour,int minute,int second,int millisecond,int microseconds) \nAssigns a Gregorian date and time.\n\nyear is from 0 to 9999.\n\n\nmonth is from 1 to 12.\n\n\nday is from 1 to 31.\n\n\nhour is from 0 to 23.\n\n\nminute is from 0 to 59.\n\n\nsecond is from 0 to 59.\n\n\nmillisecond is from 0 to 999.\n\n\nmicrosecond is from 0 to 999.\n\npublic void swap(DateTime& dateTime) \nSwaps the DateTime with another one.\npublic inline int year() const \nReturns the year.\npublic inline int month() const \nReturns the month (1 to 12).\npublic int week(int firstDayOfWeek) const \nReturns the week number within the year. FirstDayOfWeek should be either SUNDAY (0) or MONDAY (1). The returned week number will be from 0 to 53. Week number 1 is the week containing January 4. This is in accordance to ISO 8601.\nThe following example assumes that firstDayOfWeek is MONDAY. For 2005, which started on a Saturday, week 1 will be the week starting on Monday, January 3. January 1 and 2 will fall within week 0 (or the last week of the previous year).\nFor 2007, which starts on a Monday, week 1 will be the week startung on Monday, January 1. There will be no week 0 in 2007.\npublic inline int day() const \nReturns the day witin the month (1 to 31).\npublic int dayOfWeek() const \nReturns the weekday (0 to 6, where 0 = Sunday, 1 = Monday, ..., 6 = Saturday).\npublic int dayOfYear() const \nReturns the number of the day in the year. January 1 is 1, February 1 is 32, etc.\npublic inline int hour() const \nReturns the hour (0 to 23).\npublic inline int hourAMPM() const \nReturns the hour (0 to 12).\npublic inline bool isAM() const \nReturns true if hour \npublic inline bool isPM() const \nReturns true if hour >= 12.\npublic inline int minute() const \nReturns the minute (0 to 59).\npublic inline int second() const \nReturns the second (0 to 59).\npublic inline int millisecond() const \nReturns the millisecond (0 to 999)\npublic inline int microsecond() const \nReturns the microsecond (0 to 999)\npublic double julianDay() const \nReturns the julian day for the date and time.\npublic inlineTimestamptimestamp() const \nReturns the date and time expressed as a Timestamp.\npublic inlineTimestamp::UtcTimeValutcTime() const \nReturns the date and time expressed in UTC-based time. UTC base time is midnight, October 15, 1582. Resolution is 100 nanoseconds.\npublic inline bool operator==(constDateTime& dateTime) const \npublic inline bool operator!=(constDateTime& dateTime) const \npublic inline bool operatorDateTime& dateTime) const \npublic inline bool operatorDateTime& dateTime) const \npublic inline bool operator>(constDateTime& dateTime) const \npublic inline bool operator>=(constDateTime& dateTime) const \npublicDateTimeoperator+(constTimespan& span) const \npublicDateTimeoperator-(constTimespan& span) const \npublicTimespanoperator-(constDateTime& dateTime) const \npublicDateTime& operator+=(constTimespan& span) \npublicDateTime& operator-=(constTimespan& span) \npublic void makeUTC(int tzd) \nConverts a local time into UTC, by applying the given time zone differential.\npublic void makeLocal(int tzd) \nConverts a UTC time into a local time, by applying the given time zone differential.\nprotected void computeGregorian(double julianDay) \nComputes the Gregorian date for the given Julian day. See http://vsg.cape.com/~pbaum/date/injdimp.htm, section 3.3.1 for the algorithm.\nprotected void computeDaytime() \nExtracts the daytime (hours, minutes, seconds, etc.) from the stored utcTime.\nclass scy::DateTimeFormat \nDefinition of date/time formats and various constants used by DateTimeFormatter and DateTimeParser.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\n\n\n\n\nMembers\nclass scy::DateTimeFormatter \nThis class converts dates and times into strings, supporting a variety of standard and custom formats.\nThere are two kind of static member functions: ///  format functions return a std::string containing the formatted value.\n\nappend* functions append the formatted value to an existing string.\n\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\n\n\n\n\nMembers\nclass scy::DateTimeParser \nThis class provides a method for parsing dates and times from strings. All parsing methods do their best to parse a meaningful result, even from malformed input strings.\nThe returned DateTime will always contain a time in the same timezone as the time in the string. Call DateTime::makeUTC() /// with the timeZoneDifferential returned by parse() to convert the DateTime to UTC.\nNote: When parsing a time in 12-hour (AM/PM) format, the hour (h) must be parsed before the AM/PM designator (a, A), otherwise the AM/PM designator will be ignored.\nSee the DateTimeFormatter class for a list of supported format specifiers. In addition to the format specifiers supported by DateTimeFormatter, an additional specifier is supported: r will parse a year given by either two or four digits. Years 69-00 are interpreted in the 20th century (1969-2000), years 01-68 in the 21th century (2001-2068).\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\n\n\n\n\nMembers\nclass scy::Delegate \nclass scy::Delegate\n  : public BaseT\n  : public CallbackT\nThis template class implements an adapter that sits between an DelegateBase and an object receiving notifications from it.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  Delegate(C * object,Method method,int priority)\n\n\n\npublic inline  Delegate(C * object,Method method,DataT filter,int priority)\n\n\n\npublic inline  Delegate(constDelegate& r)\n\n\n\npublic inline virtual  ~Delegate()\n\n\n\npublic inline BaseT * clone() const\n\n\n\npublic inline void emit(void * sender,P arg,P2 arg2,P3 arg3,P4 arg4)\n\n\n\npublic inline bool equals(constDerivedT* r) const\n\n\n\npublic inline void cancel()\n\n\n\npublic inline bool cancelled() const\n\n\n\npublic inline int priority() const\n\n\n\npublic inline void * object() const\n\n\n\nprotected int _priority\n\n\n\nprotected bool _cancelled\n\n\n\nprotected  Delegate()\n\n\n\n\nMembers\npublic inline  Delegate(C * object,Method method,int priority) \npublic inline  Delegate(C * object,Method method,DataT filter,int priority) \npublic inline  Delegate(constDelegate& r) \npublic inline virtual  ~Delegate() \npublic inline BaseT * clone() const \npublic inline void emit(void * sender,P arg,P2 arg2,P3 arg3,P4 arg4) \npublic inline bool equals(constDerivedT* r) const \npublic inline void cancel() \npublic inline bool cancelled() const \npublic inline int priority() const \npublic inline void * object() const \nprotected int _priority \nprotected bool _cancelled \nprotected  Delegate() \nclass scy::FileChannel \nclass scy::FileChannel\n  : public scy::LogChannel\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  FileChannel(const std::string & name,const std::string & path,LogLevel level,const char * timeFormat)\n\n\n\npublic virtual  ~FileChannel()\n\n\n\npublic virtual void write(constLogStream& stream)\n\n\n\npublic void setPath(const std::string & path)\n\n\n\npublic std::string path() const\n\n\n\nprotected std::ofstream _fstream\n\n\n\nprotected std::string _path\n\n\n\nprotected virtual void open()\n\n\n\nprotected virtual void close()\n\n\n\n\nMembers\npublic  FileChannel(const std::string & name,const std::string & path,LogLevel level,const char * timeFormat) \npublic virtual  ~FileChannel() \npublic virtual void write(constLogStream& stream) \npublic void setPath(const std::string & path) \npublic std::string path() const \nprotected std::ofstream _fstream \nprotected std::string _path \nprotected virtual void open() \nprotected virtual void close() \nclass scy::FlagPacket \nclass scy::FlagPacket\n  : public scy::IPacket\nA simple flag packet for sending state flags along the packet stream.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  FlagPacket(unsigned flags)\n\n\n\npublic inline virtualIPacket* clone() const\n\n\n\npublic inline  FlagPacket(constFlagPacket& that)\n\n\n\npublic inline virtual  ~FlagPacket()\n\n\n\npublic inline virtual std::size_t read(constConstBuffer&)\n\n\n\npublic inline virtual void write(Buffer &) const\n\n\n\npublic inline virtual const char * className() const\n\n\n\n\nMembers\npublic inline  FlagPacket(unsigned flags) \npublic inline virtualIPacket* clone() const \npublic inline  FlagPacket(constFlagPacket& that) \npublic inline virtual  ~FlagPacket() \npublic inline virtual std::size_t read(constConstBuffer&) \nRead/parse to the packet from the given input buffer. The number of bytes read is returned.\npublic inline virtual void write(Buffer &) const \nCopy/generate to the packet given output buffer. The number of bytes written can be obtained from the buffer.\nTodo: It may be prefferable to use our pod types here instead of buffer input, but the current codebase requires that the buffer be dynamically resizable for some protocols...\nvirtual std::size_t write(MutableBuffer&) const = 0;\npublic inline virtual const char * className() const \nclass scy::GarbageCollector \nSimple garbage collector for deferred pointer deletion.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  GarbageCollector()\n\n\n\npublic  ~GarbageCollector()\n\n\n\npublic template  inline void deleteLater(C * ptr)\nSchedules a pointer for deferred deletion.\n\n\npublic template  inline void deleteLater(std::shared_ptr ptr)\nSchedules a shared pointer for deferred deletion.\n\n\npublic void finalize()\n\n\n\npublic uv_thread_t tid()\n\n\n\nprotected mutableMutex_mutex\n\n\n\nprotected std::vectorScopedPointer* > _pending\n\n\n\nprotected std::vectorScopedPointer* > _ready\n\n\n\nprotecteduv::Handle_handle\n\n\n\nprotected bool _finalize\n\n\n\nprotected uv_thread_t _tid\n\n\n\nprotected void runAsync()\n\n\n\n\nMembers\npublic  GarbageCollector() \npublic  ~GarbageCollector() \npublic template  inline void deleteLater(C * ptr) \nSchedules a pointer for deferred deletion.\npublic template  inline void deleteLater(std::shared_ptr ptr) \nSchedules a shared pointer for deferred deletion.\npublic void finalize() \nFrees all scheduled pointers now. This method must be called from the main thread while the event loop is inactive.\npublic uv_thread_t tid() \nReturns the TID of the garbage collector event loop thread. The garbage collector must be running.\nprotected mutableMutex_mutex \nprotected std::vectorScopedPointer* > _pending \nprotected std::vectorScopedPointer* > _ready \nprotecteduv::Handle_handle \nprotected bool _finalize \nprotected uv_thread_t _tid \nprotected void runAsync() \nclass scy::Idler \nclass scy::Idler\n  : public scy::async::Runner\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Idler(uv::Loop * loop)\nCreate the idler context the given event loop and method.\n\n\npublic  Idler(uv::Loop * loop,std::function target)\n\n\n\npublic  Idler(uv::Loop * loop,std::function target,void * arg)\n\n\n\npublic virtual  ~Idler()\n\n\n\npublicuv::Handle& handle()\n\n\n\nprotecteduv::Handle_handle\n\n\n\nprotected virtual void init()\n\n\n\nprotected virtual void startAsync()\nStart the context from the control thread.\n\n\nprotected virtual bool async() const\n\n\n\n\nMembers\npublic  Idler(uv::Loop * loop) \nCreate the idler context the given event loop and method.\npublic  Idler(uv::Loop * loop,std::function target) \npublic  Idler(uv::Loop * loop,std::function target,void * arg) \npublic virtual  ~Idler() \npublicuv::Handle& handle() \nprotecteduv::Handle_handle \nprotected virtual void init() \nprotected virtual void startAsync() \nStart the context from the control thread.\nprotected virtual bool async() const \nReturns true if the implementation is thread-based, or false if it belongs to an event loop.\nclass scy::IPacket \nclass scy::IPacket\n  : public scy::basic::Polymorphic\nThe basic packet type which is passed around the LibSourcey system. IPacket can be extended for each protocol to enable polymorphic processing and callbacks using PacketStream and friends.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic void * source\n\n\n\npublic void * opaque\n\n\n\npublicIPacketInfo* info\n\n\n\npublicBitwiseflags\nProvides basic information about the packet.\n\n\npublic inline  IPacket(void * source,void * opaque,IPacketInfo* info,unsigned flags)\n\n\n\npublic inline  IPacket(constIPacket& r)\n\n\n\npublic inlineIPacket& operator=(constIPacket& r)\n\n\n\npublicIPacket* clone() const\n\n\n\npublic inline virtual  ~IPacket()\n\n\n\npublic std::size_t read(constConstBuffer&)\n\n\n\npublic void write(Buffer &) const\n\n\n\npublic inline virtual std::size_t size() const\n\n\n\npublic inline virtual bool hasData() const\n\n\n\npublic inline virtual char * data() const\nThe packet data pointer for buffered packets.\n\n\npublic inline virtual const char * constData() const\nThe const packet data pointer for buffered packets.\n\n\npublic const char * className() const\n\n\n\npublic inline virtual void print(std::ostream & os) const\n\n\n\n\nMembers\npublic void * source \nPacket source pointer reference which enables processors along the signal chain can determine the packet origin. Often a subclass of PacketStreamSource.\npublic void * opaque \nOptional client data pointer. This pointer is not managed by the packet.\npublicIPacketInfo* info \nOptional extra information about the packet. This pointer is managed by the packet.\npublicBitwiseflags \nProvides basic information about the packet.\npublic inline  IPacket(void * source,void * opaque,IPacketInfo* info,unsigned flags) \npublic inline  IPacket(constIPacket& r) \npublic inlineIPacket& operator=(constIPacket& r) \npublicIPacket* clone() const \npublic inline virtual  ~IPacket() \npublic std::size_t read(constConstBuffer&) \nRead/parse to the packet from the given input buffer. The number of bytes read is returned.\npublic void write(Buffer &) const \nCopy/generate to the packet given output buffer. The number of bytes written can be obtained from the buffer.\nTodo: It may be prefferable to use our pod types here instead of buffer input, but the current codebase requires that the buffer be dynamically resizable for some protocols...\nvirtual std::size_t write(MutableBuffer&) const = 0;\npublic inline virtual std::size_t size() const \nThe size of the packet in bytes.\nThis is the nember of bytes that will be written on a call to write(), but may not be the number of bytes that will be consumed by read().\npublic inline virtual bool hasData() const \npublic inline virtual char * data() const \nThe packet data pointer for buffered packets.\npublic inline virtual const char * constData() const \nThe const packet data pointer for buffered packets.\npublic const char * className() const \npublic inline virtual void print(std::ostream & os) const \nclass scy::IPacketCreationStrategy \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  IPacketCreationStrategy()\n\n\n\npublic inline virtual  ~IPacketCreationStrategy()\n\n\n\npublicIPacket* create(constConstBuffer& buffer,std::size_t & nread) const\n\n\n\npublic int priority() const\n\n\n\n\nMembers\npublic inline  IPacketCreationStrategy() \npublic inline virtual  ~IPacketCreationStrategy() \npublicIPacket* create(constConstBuffer& buffer,std::size_t & nread) const \npublic int priority() const \nclass scy::KVCollection \nA reusable stack based unique key-value store for DRY coding.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  KVCollection()\n\n\n\npublic inline virtual  ~KVCollection()\n\n\n\npublic inline virtual bool add(const TKey & key,const TValue & item,bool update,bool whiny)\n\n\n\npublic inline virtual TValue & get(const TKey & key)\n\n\n\npublic inline virtual const TValue & get(const TKey & key,const TValue & defaultValue) const\n\n\n\npublic inline virtual bool remove(const TKey & key)\n\n\n\npublic inline virtual bool has(const TKey & key) const\n\n\n\npublic inline virtual bool empty() const\n\n\n\npublic inline virtual int size() const\n\n\n\npublic inline virtual void clear()\n\n\n\npublic inline virtual Map & map()\n\n\n\nprotected Map _map\n\n\n\n\nMembers\npublic inline  KVCollection() \npublic inline virtual  ~KVCollection() \npublic inline virtual bool add(const TKey & key,const TValue & item,bool update,bool whiny) \npublic inline virtual TValue & get(const TKey & key) \npublic inline virtual const TValue & get(const TKey & key,const TValue & defaultValue) const \npublic inline virtual bool remove(const TKey & key) \npublic inline virtual bool has(const TKey & key) const \npublic inline virtual bool empty() const \npublic inline virtual int size() const \npublic inline virtual void clear() \npublic inline virtual Map & map() \nprotected Map _map \nclass scy::LiveCollection \nclass scy::LiveCollection\n  : public scy::PointerCollection\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicSignal ItemAdded\n\n\n\npublicSignal ItemRemoved\n\n\n\npublic inline virtual void onAdd(const TKey &,TValue * item)\n\n\n\npublic inline virtual void onRemove(const TKey &,TValue * item)\n\n\n\n\nMembers\npublicSignal ItemAdded \npublicSignal ItemRemoved \npublic inline virtual void onAdd(const TKey &,TValue * item) \npublic inline virtual void onRemove(const TKey &,TValue * item) \nclass scy::LocalDateTime \nThis class represents an instant in local time (as opposed to UTC), expressed in years, months, days, hours, minutes, seconds and milliseconds based on the Gregorian calendar.\nIn addition to the date and time, the class also maintains a time zone differential, which denotes the difference in seconds from UTC to local time, i.e. UTC = local time - time zone differential. Although LocalDateTime supports relational and arithmetic operators, all date/time comparisons and date/time arithmetics should be done in UTC, using the DateTime or Timestamp class for better performance. The relational operators normalize the dates/times involved to UTC before carrying out the comparison.\nThe time zone differential is based on the input date and time and current time zone. A number of constructors accept an explicit time zone differential parameter. These should not be used since daylight savings time processing is impossible since the time zone is unknown. Each of the constructors accepting a tzd parameter have been marked as deprecated and may be removed in a future revision.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  LocalDateTime()\n\n\n\npublic  LocalDateTime(int year,int month,int day,int hour,int minute,int second,int millisecond,int microsecond)\n\n\n\npublic  LocalDateTime(int tzd,int year,int month,int day,int hour,int minute,int second,int millisecond,int microsecond)\n\n\n\npublic  LocalDateTime(constDateTime& dateTime)\n\n\n\npublic  LocalDateTime(int tzd,constDateTime& dateTime)\n\n\n\npublic  LocalDateTime(int tzd,constDateTime& dateTime,bool adjust)\n\n\n\npublic  LocalDateTime(double julianDay)\nCreates a LocalDateTime for the given Julian day in the local time zone.\n\n\npublic  LocalDateTime(int tzd,double julianDay)\n\n\n\npublic  LocalDateTime(constLocalDateTime& dateTime)\nCopy constructor. Creates the LocalDateTime from another one.\n\n\npublic  ~LocalDateTime()\nDestroys the LocalDateTime.\n\n\npublicLocalDateTime& operator=(constLocalDateTime& dateTime)\nAssigns another LocalDateTime.\n\n\npublicLocalDateTime& operator=(constTimestamp& timestamp)\nAssigns a timestamp.\n\n\npublicLocalDateTime& operator=(double julianDay)\nAssigns a Julian day in the local time zone.\n\n\npublicLocalDateTime& assign(int year,int month,int day,int hour,int minute,int second,int millisecond,int microseconds)\n\n\n\npublicLocalDateTime& assign(int tzd,int year,int month,int day,int hour,int minute,int second,int millisecond,int microseconds)\n\n\n\npublicLocalDateTime& assign(int tzd,double julianDay)\n\n\n\npublic void swap(LocalDateTime& dateTime)\nSwaps the LocalDateTime with another one.\n\n\npublic inline int year() const\nReturns the year.\n\n\npublic inline int month() const\nReturns the month (1 to 12).\n\n\npublic inline int week(int firstDayOfWeek) const\n\n\n\npublic inline int day() const\nReturns the day witin the month (1 to 31).\n\n\npublic inline int dayOfWeek() const\n\n\n\npublic inline int dayOfYear() const\n\n\n\npublic inline int hour() const\nReturns the hour (0 to 23).\n\n\npublic inline int hourAMPM() const\nReturns the hour (0 to 12).\n\n\npublic inline bool isAM() const\nReturns true if hour \n\n\npublic inline bool isPM() const\nReturns true if hour >= 12.\n\n\npublic inline int minute() const\nReturns the minute (0 to 59).\n\n\npublic inline int second() const\nReturns the second (0 to 59).\n\n\npublic inline int millisecond() const\nReturns the millisecond (0 to 999)\n\n\npublic inline int microsecond() const\nReturns the microsecond (0 to 999)\n\n\npublic inline double julianDay() const\nReturns the julian day for the date.\n\n\npublic inline int tzd() const\nReturns the time zone differential.\n\n\npublicDateTimeutc() const\nReturns the UTC equivalent for the local date and time.\n\n\npublic inlineTimestamptimestamp() const\nReturns the date and time expressed as a Timestamp.\n\n\npublic inlineTimestamp::UtcTimeValutcTime() const\nReturns the UTC equivalent for the local date and time.\n\n\npublic bool operator==(constLocalDateTime& dateTime) const\n\n\n\npublic bool operator!=(constLocalDateTime& dateTime) const\n\n\n\npublic bool operatorLocalDateTime& dateTime) const\n\n\n\npublic bool operatorLocalDateTime& dateTime) const\n\n\n\npublic bool operator>(constLocalDateTime& dateTime) const\n\n\n\npublic bool operator>=(constLocalDateTime& dateTime) const\n\n\n\npublicLocalDateTimeoperator+(constTimespan& span) const\n\n\n\npublicLocalDateTimeoperator-(constTimespan& span) const\n\n\n\npublicTimespanoperator-(constLocalDateTime& dateTime) const\n\n\n\npublicLocalDateTime& operator+=(constTimespan& span)\n\n\n\npublicLocalDateTime& operator-=(constTimespan& span)\n\n\n\nprotected  LocalDateTime(Timestamp::UtcTimeValutcTime,Timestamp::TimeDiffdiff,int tzd)\n\n\n\nprotected void determineTzd(bool adjust)\n\n\n\nprotected inline void adjustForTzd()\nAdjust the _dateTime member based on the _tzd member.\n\n\nprotected std::time_t dstOffset(int & dstOffset) const\nDetermine the DST offset for the current date/time.\n\n\n\nMembers\npublic  LocalDateTime() \nCreates a LocalDateTime with the current date/time for the current time zone.\npublic  LocalDateTime(int year,int month,int day,int hour,int minute,int second,int millisecond,int microsecond) \nCreates a LocalDateTime for the given Gregorian local date and time.\n\nyear is from 0 to 9999.\n\n\nmonth is from 1 to 12.\n\n\nday is from 1 to 31.\n\n\nhour is from 0 to 23.\n\n\nminute is from 0 to 59.\n\n\nsecond is from 0 to 59.\n\n\nmillisecond is from 0 to 999.\n\n\nmicrosecond is from 0 to 999.\n\npublic  LocalDateTime(int tzd,int year,int month,int day,int hour,int minute,int second,int millisecond,int microsecond) \n@ deprecated Creates a LocalDateTime for the given Gregorian date and time in the time zone denoted by the time zone differential in tzd.\n\ntzd is in seconds.\n\n\nyear is from 0 to 9999.\n\n\nmonth is from 1 to 12.\n\n\nday is from 1 to 31.\n\n\nhour is from 0 to 23.\n\n\nminute is from 0 to 59.\n\n\nsecond is from 0 to 59.\n\n\nmillisecond is from 0 to 999.\n\n\nmicrosecond is from 0 to 999.\n\npublic  LocalDateTime(constDateTime& dateTime) \nCreates a LocalDateTime from the UTC time given in dateTime, using the time zone differential of the current time zone.\npublic  LocalDateTime(int tzd,constDateTime& dateTime) \n@ deprecated Creates a LocalDateTime from the UTC time given in dateTime, using the given time zone differential. Adjusts dateTime for the given time zone differential.\npublic  LocalDateTime(int tzd,constDateTime& dateTime,bool adjust) \n@ deprecated Creates a LocalDateTime from the UTC time given in dateTime, using the given time zone differential. If adjust is true, adjusts dateTime for the given time zone differential.\npublic  LocalDateTime(double julianDay) \nCreates a LocalDateTime for the given Julian day in the local time zone.\npublic  LocalDateTime(int tzd,double julianDay) \n@ deprecated Creates a LocalDateTime for the given Julian day in the time zone denoted by the time zone differential in tzd.\npublic  LocalDateTime(constLocalDateTime& dateTime) \nCopy constructor. Creates the LocalDateTime from another one.\npublic  ~LocalDateTime() \nDestroys the LocalDateTime.\npublicLocalDateTime& operator=(constLocalDateTime& dateTime) \nAssigns another LocalDateTime.\npublicLocalDateTime& operator=(constTimestamp& timestamp) \nAssigns a timestamp.\npublicLocalDateTime& operator=(double julianDay) \nAssigns a Julian day in the local time zone.\npublicLocalDateTime& assign(int year,int month,int day,int hour,int minute,int second,int millisecond,int microseconds) \nAssigns a Gregorian local date and time.\n\nyear is from 0 to 9999.\n\n\nmonth is from 1 to 12.\n\n\nday is from 1 to 31.\n\n\nhour is from 0 to 23.\n\n\nminute is from 0 to 59.\n\n\nsecond is from 0 to 59.\n\n\nmillisecond is from 0 to 999.\n\n\nmicrosecond is from 0 to 999.\n\npublicLocalDateTime& assign(int tzd,int year,int month,int day,int hour,int minute,int second,int millisecond,int microseconds) \n@ deprecated Assigns a Gregorian local date and time in the time zone denoted by the time zone differential in tzd.\n\ntzd is in seconds.\n\n\nyear is from 0 to 9999.\n\n\nmonth is from 1 to 12.\n\n\nday is from 1 to 31.\n\n\nhour is from 0 to 23.\n\n\nminute is from 0 to 59.\n\n\nsecond is from 0 to 59.\n\n\nmillisecond is from 0 to 999.\n\n\nmicrosecond is from 0 to 999.\n\npublicLocalDateTime& assign(int tzd,double julianDay) \n@ deprecated Assigns a Julian day in the time zone denoted by the time zone differential in tzd.\npublic void swap(LocalDateTime& dateTime) \nSwaps the LocalDateTime with another one.\npublic inline int year() const \nReturns the year.\npublic inline int month() const \nReturns the month (1 to 12).\npublic inline int week(int firstDayOfWeek) const \nReturns the week number within the year. FirstDayOfWeek should be either SUNDAY (0) or MONDAY (1). The returned week number will be from 0 to 53. Week number 1 is the week containing January 4. This is in accordance to ISO 8601.\nThe following example assumes that firstDayOfWeek is MONDAY. For 2005, which started on a Saturday, week 1 will be the week starting on Monday, January 3. January 1 and 2 will fall within week 0 (or the last week of the previous year).\nFor 2007, which starts on a Monday, week 1 will be the week startung on Monday, January 1. There will be no week 0 in 2007.\npublic inline int day() const \nReturns the day witin the month (1 to 31).\npublic inline int dayOfWeek() const \nReturns the weekday (0 to 6, where 0 = Sunday, 1 = Monday, ..., 6 = Saturday).\npublic inline int dayOfYear() const \nReturns the number of the day in the year. January 1 is 1, February 1 is 32, etc.\npublic inline int hour() const \nReturns the hour (0 to 23).\npublic inline int hourAMPM() const \nReturns the hour (0 to 12).\npublic inline bool isAM() const \nReturns true if hour \npublic inline bool isPM() const \nReturns true if hour >= 12.\npublic inline int minute() const \nReturns the minute (0 to 59).\npublic inline int second() const \nReturns the second (0 to 59).\npublic inline int millisecond() const \nReturns the millisecond (0 to 999)\npublic inline int microsecond() const \nReturns the microsecond (0 to 999)\npublic inline double julianDay() const \nReturns the julian day for the date.\npublic inline int tzd() const \nReturns the time zone differential.\npublicDateTimeutc() const \nReturns the UTC equivalent for the local date and time.\npublic inlineTimestamptimestamp() const \nReturns the date and time expressed as a Timestamp.\npublic inlineTimestamp::UtcTimeValutcTime() const \nReturns the UTC equivalent for the local date and time.\npublic bool operator==(constLocalDateTime& dateTime) const \npublic bool operator!=(constLocalDateTime& dateTime) const \npublic bool operatorLocalDateTime& dateTime) const \npublic bool operatorLocalDateTime& dateTime) const \npublic bool operator>(constLocalDateTime& dateTime) const \npublic bool operator>=(constLocalDateTime& dateTime) const \npublicLocalDateTimeoperator+(constTimespan& span) const \npublicLocalDateTimeoperator-(constTimespan& span) const \npublicTimespanoperator-(constLocalDateTime& dateTime) const \npublicLocalDateTime& operator+=(constTimespan& span) \npublicLocalDateTime& operator-=(constTimespan& span) \nprotected  LocalDateTime(Timestamp::UtcTimeValutcTime,Timestamp::TimeDiffdiff,int tzd) \nprotected void determineTzd(bool adjust) \nRecalculate the tzd based on the _dateTime member based on the current timezone using the Standard C runtime functions. If adjust is true, then adjustForTzd() is called after the differential is calculated.\nprotected inline void adjustForTzd() \nAdjust the _dateTime member based on the _tzd member.\nprotected std::time_t dstOffset(int & dstOffset) const \nDetermine the DST offset for the current date/time.\nclass scy::LogChannel \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  LogChannel(const std::string & name,LogLevel level,const std::string & timeFormat)\n\n\n\npublic inline virtual  ~LogChannel()\n\n\n\npublic virtual void write(constLogStream& stream)\n\n\n\npublic virtual void write(const std::string & message,LogLevel level,const char * realm,const void * ptr)\n\n\n\npublic virtual void format(constLogStream& stream,std::ostream & ost)\n\n\n\npublic inline std::string name() const\n\n\n\npublic inline LogLevel level() const\n\n\n\npublic inline std::string timeFormat() const\n\n\n\npublic inline void setLevel(LogLevel level)\n\n\n\npublic inline void setDateFormat(const std::string & format)\n\n\n\npublic inline void setFilter(const std::string & filter)\n\n\n\nprotected std::string _name\n\n\n\nprotected LogLevel _level\n\n\n\nprotected std::string _timeFormat\n\n\n\nprotected std::string _filter\n\n\n\n\nMembers\npublic  LogChannel(const std::string & name,LogLevel level,const std::string & timeFormat) \npublic inline virtual  ~LogChannel() \npublic virtual void write(constLogStream& stream) \npublic virtual void write(const std::string & message,LogLevel level,const char * realm,const void * ptr) \npublic virtual void format(constLogStream& stream,std::ostream & ost) \npublic inline std::string name() const \npublic inline LogLevel level() const \npublic inline std::string timeFormat() const \npublic inline void setLevel(LogLevel level) \npublic inline void setDateFormat(const std::string & format) \npublic inline void setFilter(const std::string & filter) \nprotected std::string _name \nprotected LogLevel _level \nprotected std::string _timeFormat \nprotected std::string _filter \nclass scy::Logger \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Logger()\n\n\n\npublic  ~Logger()\n\n\n\npublic void add(LogChannel* channel)\nAdds the given log channel.\n\n\npublic void remove(const std::string & name,bool freePointer)\n\n\n\npublicLogChannel* get(const std::string & name,bool whiny) const\n\n\n\npublic void setDefault(const std::string & name)\nSets the default log to the specified log channel.\n\n\npublic void setWriter(LogWriter* writer)\nSets the log writer instance.\n\n\npublicLogChannel* getDefault() const\n\n\n\npublic void write(constLogStream& stream)\n\n\n\npublic void write(LogStream* stream)\n\n\n\npublicLogStream& send(const char * level,const char * realm,const void * ptr,const char * channel) const\n\n\n\nprotected mutableMutex_mutex\n\n\n\nprotected LogChannelMap _channels\n\n\n\nprotectedLogChannel* _defaultChannel\n\n\n\nprotectedLogWriter* _writer\n\n\n\nprotected  Logger(constLogger&)\nNon-copyable and non-movable.\n\n\nprotected  Logger(Logger&&)\n\n\n\nprotectedLogger& operator=(constLogger&)\n\n\n\nprotectedLogger& operator=(Logger&&)\n\n\n\n\nMembers\npublic  Logger() \npublic  ~Logger() \npublic void add(LogChannel* channel) \nAdds the given log channel.\npublic void remove(const std::string & name,bool freePointer) \nRemoves the given log channel by name, and optionally frees the pointer.\npublicLogChannel* get(const std::string & name,bool whiny) const \nReturns the specified log channel. Throws an exception if the channel doesn't exist.\npublic void setDefault(const std::string & name) \nSets the default log to the specified log channel.\npublic void setWriter(LogWriter* writer) \nSets the log writer instance.\npublicLogChannel* getDefault() const \nReturns the default log channel, or the nullptr channel if no default channel has been set.\npublic void write(constLogStream& stream) \nWrites the given message to the default log channel. The message will be copied.\npublic void write(LogStream* stream) \nWrites the given message to the default log channel. The stream pointer will be deleted when appropriate.\npublicLogStream& send(const char * level,const char * realm,const void * ptr,const char * channel) const \nSends to the default log using the given class instance. Recommend using write(LogStream&) to avoid copying data.\nprotected mutableMutex_mutex \nprotected LogChannelMap _channels \nprotectedLogChannel* _defaultChannel \nprotectedLogWriter* _writer \nprotected  Logger(constLogger&) \nNon-copyable and non-movable.\nprotected  Logger(Logger&&) \nprotectedLogger& operator=(constLogger&) \nprotectedLogger& operator=(Logger&&) \nclass scy::LogWriter \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  LogWriter()\n\n\n\npublic virtual  ~LogWriter()\n\n\n\npublic virtual void write(LogStream* stream)\nWrites the given log message stream.\n\n\n\nMembers\npublic  LogWriter() \npublic virtual  ~LogWriter() \npublic virtual void write(LogStream* stream) \nWrites the given log message stream.\nclass scy::MutableBuffer \nThe MutableBuffer class provides a safe representation of a buffer that can be modified. It does not own the underlying data, and so is cheap to copy or assign.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  MutableBuffer()\nConstruct an empty buffer.\n\n\npublic inline  MutableBuffer(void * data,std::size_t size)\nConstruct a buffer to represent the given memory range.\n\n\npublic inline void * data() const\n\n\n\npublic inline std::size_t size() const\n\n\n\npublic inline char * cstr() const\nString methods.\n\n\npublic inline std::string str() const\n\n\n\n\nMembers\npublic inline  MutableBuffer() \nConstruct an empty buffer.\npublic inline  MutableBuffer(void * data,std::size_t size) \nConstruct a buffer to represent the given memory range.\npublic inline void * data() const \npublic inline std::size_t size() const \npublic inline char * cstr() const \nString methods.\npublic inline std::string str() const \nclass scy::MutexState \nclass scy::MutexState\n  : public scy::State\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  MutexState(ID id)\n\n\n\npublic inline  MutexState(constMutexState& r)\n\n\n\npublic inline virtual  ~MutexState()\n\n\n\npublic inline virtual ID id() const\n\n\n\npublic inline virtual void set(ID id)\n\n\n\npublic inline virtual std::string message() const\n\n\n\npublic inline virtual void setMessage(const std::string & message)\n\n\n\nprotected mutableMutex_mutex\n\n\n\n\nMembers\npublic  MutexState(ID id) \npublic inline  MutexState(constMutexState& r) \npublic inline virtual  ~MutexState() \npublic inline virtual ID id() const \npublic inline virtual void set(ID id) \npublic inline virtual std::string message() const \npublic inline virtual void setMessage(const std::string & message) \nprotected mutableMutex_mutex \nclass scy::NullSignal \nclass scy::NullSignal\n  : public scy::SignalBase >\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\n\n\n\n\nMembers\nclass scy::NVCollection \nA storage container for a name value collections. This collection can store multiple entries for each name, and it's getters are case-insensitive.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  NVCollection()\n\n\n\npublic inline  NVCollection(constNVCollection& nvc)\n\n\n\npublic inline virtual  ~NVCollection()\n\n\n\npublic inlineNVCollection& operator=(constNVCollection& nvc)\nAssigns the name-value pairs of another NVCollection to this one.\n\n\npublic inline const std::string & operator[](const std::string & name) const\n\n\n\npublic inline void set(const std::string & name,const std::string & value)\nSets the value of the (first) name-value pair with the given name.\n\n\npublic inline void add(const std::string & name,const std::string & value)\nAdds a new name-value pair with the given name and value.\n\n\npublic inline const std::string & get(const std::string & name) const\n\n\n\npublic inline const std::string & get(const std::string & name,const std::string & defaultValue) const\n\n\n\npublic inline bool has(const std::string & name) const\n\n\n\npublic inline ConstIterator find(const std::string & name) const\n\n\n\npublic inline ConstIterator begin() const\n\n\n\npublic inline ConstIterator end() const\n\n\n\npublic inline bool empty() const\nReturns true iff the header does not have any content.\n\n\npublic inline int size() const\n\n\n\npublic inline void erase(const std::string & name)\nRemoves all name-value pairs with the given name.\n\n\npublic inline void clear()\nRemoves all name-value pairs and their values.\n\n\n\nMembers\npublic inline  NVCollection() \npublic inline  NVCollection(constNVCollection& nvc) \npublic inline virtual  ~NVCollection() \npublic inlineNVCollection& operator=(constNVCollection& nvc) \nAssigns the name-value pairs of another NVCollection to this one.\npublic inline const std::string & operator[](const std::string & name) const \nReturns the value of the (first) name-value pair with the given name.\nThrows a NotFoundException if the name-value pair does not exist.\npublic inline void set(const std::string & name,const std::string & value) \nSets the value of the (first) name-value pair with the given name.\npublic inline void add(const std::string & name,const std::string & value) \nAdds a new name-value pair with the given name and value.\npublic inline const std::string & get(const std::string & name) const \nReturns the value of the first name-value pair with the given name.\nThrows a NotFoundException if the name-value pair does not exist.\npublic inline const std::string & get(const std::string & name,const std::string & defaultValue) const \nReturns the value of the first name-value pair with the given name. If no value with the given name has been found, the defaultValue is returned.\npublic inline bool has(const std::string & name) const \nReturns true if there is at least one name-value pair with the given name.\npublic inline ConstIterator find(const std::string & name) const \nReturns an iterator pointing to the first name-value pair with the given name.\npublic inline ConstIterator begin() const \nReturns an iterator pointing to the begin of the name-value pair collection.\npublic inline ConstIterator end() const \nReturns an iterator pointing to the end of the name-value pair collection.\npublic inline bool empty() const \nReturns true iff the header does not have any content.\npublic inline int size() const \nReturns the number of name-value pairs in the collection.\npublic inline void erase(const std::string & name) \nRemoves all name-value pairs with the given name.\npublic inline void clear() \nRemoves all name-value pairs and their values.\nclass scy::PacketFactory \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  PacketFactory()\n\n\n\npublic inline virtual  ~PacketFactory()\n\n\n\npublic template  inline void registerPacketType(int priority)\n\n\n\npublic template  inline void unregisterPacketType()\n\n\n\npublic template  inline void registerStrategy(int priority)\n\n\n\npublic template  inline void unregisterStrategy()\n\n\n\npublic inline PacketCreationStrategyList & types()\n\n\n\npublic inline PacketCreationStrategyList types() const\n\n\n\npublic inline virtual bool onPacketCreated(IPacket*)\nreturning false will stop packet propagation\n\n\npublic inline virtualIPacket* createPacket(constConstBuffer& buffer,std::size_t & nread)\n\n\n\nprotected PacketCreationStrategyList _types\n\n\n\n\nMembers\npublic inline  PacketFactory() \npublic inline virtual  ~PacketFactory() \npublic template  inline void registerPacketType(int priority) \npublic template  inline void unregisterPacketType() \npublic template  inline void registerStrategy(int priority) \npublic template  inline void unregisterStrategy() \npublic inline PacketCreationStrategyList & types() \npublic inline PacketCreationStrategyList types() const \npublic inline virtual bool onPacketCreated(IPacket*) \nreturning false will stop packet propagation\npublic inline virtualIPacket* createPacket(constConstBuffer& buffer,std::size_t & nread) \nprotected PacketCreationStrategyList _types \nclass scy::PacketProcessor \nclass scy::PacketProcessor\n  : public scy::PacketStreamAdapter\nFor 0.8.x compatibility.\nThis class is a virtual interface for creating PacketStreamAdapters which process that and emit the IPacket type.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  PacketProcessor(PacketSignal& emitter)\n\n\n\npublic void process(IPacket& packet)\n\n\n\npublic inline virtual bool accepts(IPacket&)\n\n\n\npublic inline virtual void operatorIPacket& packet)\nStream operator alias for process()\n\n\n\nMembers\npublic inline  PacketProcessor(PacketSignal& emitter) \npublic void process(IPacket& packet) \nThis method performs processing on the given packet and emits the result.\nNote: If packet processing is async (the packet is not in the current thread scope) then packet data must be copied. Copied data can be freed directly aFter the async call to emit() the outgoing packet.\npublic inline virtual bool accepts(IPacket&) \nThis method ensures compatibility with the given packet type. Return false to reject the packet.\npublic inline virtual void operatorIPacket& packet) \nStream operator alias for process()\nclass scy::PacketStream \nclass scy::PacketStream\n  : public scy::Stateful\nThis class is used for processing and boradcasting IPackets in a flexible way. A PacketStream consists of one or many PacketSources, one or many PacketProcessors, and one or many delegate receivers.\nThis class enables the developer to setup a processor chain in order to perform arbitrary processing on data packets using interchangeable packet adapters, and pump the output to any delegate function,/// or even another PacketStream.\nNote that PacketStream itself inherits from PacketStreamAdapter,/// so a PacketStream be the source of another PacketStream.\nAll PacketStream methods are thread-safe, but once the stream is running you will not be able to attach or detach stream adapters.\nIn order to synchronize output packets with the application event loop take a look at the SyncPacketQueue class. For lengthy operations you can add an AsyncPacketQueue to the start of the stream to defer processing from the PacketSource thread.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicPacketSignalemitter\nSignals to delegates on outgoing packets.\n\n\npublicSignal Error\n\n\n\npublicNullSignalClose\n\n\n\npublic  PacketStream(const std::string & name)\n\n\n\npublic virtual  ~PacketStream()\n\n\n\npublic virtual void start()\nStart the stream and synchronized sources.\n\n\npublic virtual void stop()\nStop the stream and synchronized sources.\n\n\npublic virtual void pause()\nPause the stream.\n\n\npublic virtual void resume()\nResume the stream.\n\n\npublic virtual void close()\nClose the stream and transition the internal state to Closed.\n\n\npublic virtual void reset()\nCleanup all managed stream adapters and reset the stream state.\n\n\npublic virtual bool active() const\nReturns true when the stream is in the Active state.\n\n\npublic virtual bool stopped() const\nReturns true when the stream is in the Stopping or Stopped state.\n\n\npublic virtual bool closed() const\nReturns true when the stream is in the Closed or Error state.\n\n\npublic virtual bool lock()\n\n\n\npublic virtual bool locked() const\nReturns true is the stream is currently locked.\n\n\npublic virtual void write(char * data,std::size_t len)\nWrites data to the stream (nocopy).\n\n\npublic virtual void write(const char * data,std::size_t len)\nWrites data to the stream (copied).\n\n\npublic virtual void write(IPacket& packet)\nWrites an incoming packet onto the stream.\n\n\npublic virtual void attachSource(PacketSignal& source)\n\n\n\npublic virtual void attachSource(PacketStreamAdapter* source,bool freePointer,bool syncState)\n\n\n\npublic template  inline void attachSource(std::shared_ptr ptr,bool syncState)\n\n\n\npublic virtual bool detachSource(PacketSignal& source)\nDetaches the given source packet signal from the stream.\n\n\npublic virtual bool detachSource(PacketStreamAdapter* source)\n\n\n\npublic virtual void attach(PacketProcessor* proc,int order,bool freePointer)\n\n\n\npublic template  inline void attach(std::shared_ptr ptr,bool syncState)\n\n\n\npublic virtual bool detach(PacketProcessor* proc)\n\n\n\npublic virtual void synchronizeOutput(uv::Loop * loop)\nSynchronize stream output packets with the given event loop.\n\n\npublic virtual void autoStart(bool flag)\n\n\n\npublic virtual void closeOnError(bool flag)\n\n\n\npublic virtual void setClientData(void * data)\nAccessors for the unmanaged client data pointer.\n\n\npublic virtual void * clientData() const\n\n\n\npublic const std::exception_ptr & error()\nReturns the stream error (if any).\n\n\npublic std::string name() const\nReturns the name of the packet stream.\n\n\npublic PacketAdapterVec adapters() const\nReturns a combined list of all stream sources and processors.\n\n\npublic PacketAdapterVec sources() const\nReturns a list of all stream sources.\n\n\npublic PacketAdapterVec processors() const\nReturns a list of all stream processors.\n\n\npublic bool waitForRunner()\n\n\n\npublic bool waitForStateSync(PacketStreamState::ID state)\nBlock the calling thread until the given state is synchronized.\n\n\npublic int numSources() const\n\n\n\npublic int numProcessors() const\n\n\n\npublic int numAdapters() const\n\n\n\npublic template  inline AdapterT * getSource(int index)\n\n\n\npublic template  inline AdapterT * getProcessor(int index)\n\n\n\npublic inlinePacketProcessor* getProcessor(int order)\nReturns the PacketProcessor at the given position.\n\n\nprotected mutableMutex_mutex\n\n\n\nprotected mutableMutex_procMutex\n\n\n\nprotected std::string _name\n\n\n\nprotected PacketAdapterVec _sources\n\n\n\nprotected PacketAdapterVec _processors\n\n\n\nprotected std::dequePacketStreamState> _states\n\n\n\nprotected std::exception_ptr _error\n\n\n\nprotected bool _autoStart\n\n\n\nprotected bool _closeOnError\n\n\n\nprotected void * _clientData\n\n\n\nprotected void setup()\nAttach the source and processor delegate chain.\n\n\nprotected void teardown()\nDetach the source and processor delegate chain.\n\n\nprotected void emit(IPacket& packet)\n\n\n\nprotected void attachSource(PacketAdapterReference::Ptr ref)\n\n\n\nprotected void attach(PacketAdapterReference::Ptr ref)\n\n\n\nprotected void process(IPacket& packet)\nProcess incoming packets.\n\n\nprotected void startSources()\nStart synchronized sources.\n\n\nprotected void stopSources()\nStop synchronized sources.\n\n\nprotected void synchronizeStates()\nSynchronize queued states with adapters.\n\n\nprotected virtual void onStateChange(PacketStreamState& state,constPacketStreamState& oldState)\nOverride the Stateful::onStateChange method.\n\n\nprotected bool hasQueuedState(PacketStreamState::ID state) const\nReturns true if the given state ID is queued.\n\n\nprotected void assertCanModify()\n\n\n\n\nMembers\npublicPacketSignalemitter \nSignals to delegates on outgoing packets.\npublicSignal Error \nSignals that the PacketStream is in Error state. If stream output is synchronized then the Error signal will be sent from the synchronization context, otherwise it will be sent from the async processor context. See synchronizeOutput()\npublicNullSignalClose \nSignals that the PacketStream is in Close state. This signal is sent immediately via the close() method, and as such will be sent from the calling thread context.\npublic  PacketStream(const std::string & name) \npublic virtual  ~PacketStream() \npublic virtual void start() \nStart the stream and synchronized sources.\npublic virtual void stop() \nStop the stream and synchronized sources.\npublic virtual void pause() \nPause the stream.\npublic virtual void resume() \nResume the stream.\npublic virtual void close() \nClose the stream and transition the internal state to Closed.\npublic virtual void reset() \nCleanup all managed stream adapters and reset the stream state.\npublic virtual bool active() const \nReturns true when the stream is in the Active state.\npublic virtual bool stopped() const \nReturns true when the stream is in the Stopping or Stopped state.\npublic virtual bool closed() const \nReturns true when the stream is in the Closed or Error state.\npublic virtual bool lock() \nSets the stream to locked state. In a locked state no new adapters can be added or removed from the stream until the stream is stopped.\npublic virtual bool locked() const \nReturns true is the stream is currently locked.\npublic virtual void write(char * data,std::size_t len) \nWrites data to the stream (nocopy).\npublic virtual void write(const char * data,std::size_t len) \nWrites data to the stream (copied).\npublic virtual void write(IPacket& packet) \nWrites an incoming packet onto the stream.\npublic virtual void attachSource(PacketSignal& source) \nAttaches a source packet emitter to the stream. The source packet adapter can be another PacketStream::emitter.\npublic virtual void attachSource(PacketStreamAdapter* source,bool freePointer,bool syncState) \nAttaches a source packet emitter to the stream. If freePointer is true, the pointer will be deleted when the stream is closed. If syncState is true and the source is a basic::Stratable, then the source's start()/stop() methods will be synchronized when calling startSources()/stopSources().\npublic template  inline void attachSource(std::shared_ptr ptr,bool syncState) \nAttaches a source packet emitter to the stream. This method enables compatibility with shared_ptr managed adapter instances.\npublic virtual bool detachSource(PacketSignal& source) \nDetaches the given source packet signal from the stream.\npublic virtual bool detachSource(PacketStreamAdapter* source) \nDetaches the given source packet adapter from the stream. Note: The pointer will be forgotten about, so if the freePointer flag set when calling attachSource() will have no effect.\npublic virtual void attach(PacketProcessor* proc,int order,bool freePointer) \nAttaches a packet processor to the stream. Order determines the position of the processor in the stream queue. If freePointer is true, the pointer will be deleted when the stream closes.\npublic template  inline void attach(std::shared_ptr ptr,bool syncState) \nAttaches a packet processor to the stream. This method enables compatibility with shared_ptr managed adapter instances.\npublic virtual bool detach(PacketProcessor* proc) \nDetaches a packet processor from the stream. Note: The pointer will be forgotten about, so if the freePointer flag set when calling attach() will have no effect.\npublic virtual void synchronizeOutput(uv::Loop * loop) \nSynchronize stream output packets with the given event loop.\npublic virtual void autoStart(bool flag) \nSet the stream to auto start if inactive (default: false).\nWith this flag set the stream will automatically transition to Active state if the in either the None or Locaked state.\npublic virtual void closeOnError(bool flag) \nSet the stream to be closed on error (default: true).\nWith this flag set the stream will be automatically transitioned to Closed state from Error state.\npublic virtual void setClientData(void * data) \nAccessors for the unmanaged client data pointer.\npublic virtual void * clientData() const \npublic const std::exception_ptr & error() \nReturns the stream error (if any).\npublic std::string name() const \nReturns the name of the packet stream.\npublic PacketAdapterVec adapters() const \nReturns a combined list of all stream sources and processors.\npublic PacketAdapterVec sources() const \nReturns a list of all stream sources.\npublic PacketAdapterVec processors() const \nReturns a list of all stream processors.\npublic bool waitForRunner() \nBlock the calling thread until all packets have been flushed, and internal states have been synchronized. This function is only useful after calling stop() or pause().\npublic bool waitForStateSync(PacketStreamState::ID state) \nBlock the calling thread until the given state is synchronized.\npublic int numSources() const \npublic int numProcessors() const \npublic int numAdapters() const \npublic template  inline AdapterT * getSource(int index) \npublic template  inline AdapterT * getProcessor(int index) \npublic inlinePacketProcessor* getProcessor(int order) \nReturns the PacketProcessor at the given position.\nprotected mutableMutex_mutex \nprotected mutableMutex_procMutex \nprotected std::string _name \nprotected PacketAdapterVec _sources \nprotected PacketAdapterVec _processors \nprotected std::dequePacketStreamState> _states \nprotected std::exception_ptr _error \nprotected bool _autoStart \nprotected bool _closeOnError \nprotected void * _clientData \nprotected void setup() \nAttach the source and processor delegate chain.\nprotected void teardown() \nDetach the source and processor delegate chain.\nprotected void emit(IPacket& packet) \nEmit the final packet to listeners.\nSynchronized signals such as Close and Error are sent from this method. See synchronizeOutput()\nprotected void attachSource(PacketAdapterReference::Ptr ref) \nprotected void attach(PacketAdapterReference::Ptr ref) \nprotected void process(IPacket& packet) \nProcess incoming packets.\nprotected void startSources() \nStart synchronized sources.\nprotected void stopSources() \nStop synchronized sources.\nprotected void synchronizeStates() \nSynchronize queued states with adapters.\nprotected virtual void onStateChange(PacketStreamState& state,constPacketStreamState& oldState) \nOverride the Stateful::onStateChange method.\nprotected bool hasQueuedState(PacketStreamState::ID state) const \nReturns true if the given state ID is queued.\nprotected void assertCanModify() \nAsserts that the stream can be modified, ie is not in the Locked, Stopping or Active states.\nclass scy::PacketStreamAdapter \nThis class is a wrapper for integrating external classes with the a PacketStream's data flow and state machine.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  PacketStreamAdapter(PacketSignal& emitter)\n\n\n\npublic inline virtual  ~PacketStreamAdapter()\n\n\n\npublic virtual void emit(char * data,std::size_t len,unsigned flags)\n\n\n\npublic virtual void emit(const char * data,std::size_t len,unsigned flags)\n\n\n\npublic virtual void emit(const std::string & str,unsigned flags)\n\n\n\npublic virtual void emit(unsigned flags)\n\n\n\npublic virtual void emit(IPacket& packet)\n\n\n\npublicPacketSignal& getEmitter()\nReturns a reference to the outgoing packet signal.\n\n\npublic inline virtual void onStreamStateChange(constPacketStreamState&)\n\n\n\nprotectedPacketSignal& _emitter\n\n\n\nprotected  PacketStreamAdapter(constPacketStreamAdapter&)\n\n\n\nprotected  PacketStreamAdapter(PacketStreamAdapter&&)\n\n\n\nprotectedPacketStreamAdapter& operator=(constPacketStreamAdapter&)\n\n\n\nprotectedPacketStreamAdapter& operator=(PacketStreamAdapter&&)\n\n\n\n\nMembers\npublic  PacketStreamAdapter(PacketSignal& emitter) \npublic inline virtual  ~PacketStreamAdapter() \npublic virtual void emit(char * data,std::size_t len,unsigned flags) \npublic virtual void emit(const char * data,std::size_t len,unsigned flags) \npublic virtual void emit(const std::string & str,unsigned flags) \npublic virtual void emit(unsigned flags) \npublic virtual void emit(IPacket& packet) \npublicPacketSignal& getEmitter() \nReturns a reference to the outgoing packet signal.\npublic inline virtual void onStreamStateChange(constPacketStreamState&) \nCalled by the PacketStream to notify when the internal Stream state changes. On receiving the Stopped state, it is the responsibility of the adapter to have ceased all outgoing packet transmission, especially in multi-thread scenarios.\nprotectedPacketSignal& _emitter \nprotected  PacketStreamAdapter(constPacketStreamAdapter&) \nprotected  PacketStreamAdapter(PacketStreamAdapter&&) \nprotectedPacketStreamAdapter& operator=(constPacketStreamAdapter&) \nprotectedPacketStreamAdapter& operator=(PacketStreamAdapter&&) \nclass scy::PacketTransaction \nclass scy::PacketTransaction\n  : public scy::async::Sendable\n  : public scy::Stateful\nThis class provides request/response functionality for IPacket types.\nPacketTransactions are fire and forget. The object will be deleted after a successful response or a timeout.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  PacketTransaction(long timeout,int retries,uv::Loop * loop)\n\n\n\npublic inline  PacketTransaction(const PacketT & request,long timeout,int retries,uv::Loop * loop)\n\n\n\npublic inline virtual bool send()\n\n\n\npublic inline virtual void cancel()\n\n\n\npublic inline bool cancelled() const\n\n\n\npublic inline virtual void dispose()\n\n\n\npublic inline virtual bool canResend()\n\n\n\npublic inline int attempts() const\n\n\n\npublic inline int retries() const\n\n\n\npublic inline PacketT & request()\n\n\n\npublic inline PacketT request() const\n\n\n\npublic inline PacketT & response()\n\n\n\npublic inline PacketT response() const\n\n\n\nprotected PacketT _request\n\n\n\nprotected PacketT _response\n\n\n\nprotectedTimer_timer\n\n\n\nprotected int _timeout\nThe request timeout in milliseconds.\n\n\nprotected int _retries\nThe maximum number of attempts before the transaction is considered failed.\n\n\nprotected int _attempts\nThe number of times the transaction has been sent.\n\n\nprotected bool _destroyed\n\n\n\nprotected inline virtual  ~PacketTransaction()\n\n\n\nprotected inline virtual void onStateChange(TransactionState& state,constTransactionState&)\nOverride to handle post state change logic.\n\n\nprotected inline virtual bool handlePotentialResponse(const PacketT & packet)\n\n\n\nprotected bool checkResponse(const PacketT & packet)\n\n\n\nprotected inline virtual void onResponse()\nCalled when a successful response is received.\n\n\nprotected inline virtual void onTimeout(void *)\n\n\n\n\nMembers\npublic inline  PacketTransaction(long timeout,int retries,uv::Loop * loop) \npublic inline  PacketTransaction(const PacketT & request,long timeout,int retries,uv::Loop * loop) \npublic inline virtual bool send() \nStarts the transaction timer and sends the request. Overriding classes should implement send logic here.\npublic inline virtual void cancel() \nCancellation means that the agent will not retransmit the request, will not treat the lack of response to be a failure, but will wait the duration of the transaction timeout for a response.\npublic inline bool cancelled() const \npublic inline virtual void dispose() \nSchedules the transaction for deferred deletion.\nIt is safe to call this function while the transaction is still active, providing the call is made from the same loop thread which the timer is running on.\nProtected by the base implementation as this is called by the internal state machine.\npublic inline virtual bool canResend() \npublic inline int attempts() const \npublic inline int retries() const \npublic inline PacketT & request() \npublic inline PacketT request() const \npublic inline PacketT & response() \npublic inline PacketT response() const \nprotected PacketT _request \nprotected PacketT _response \nprotectedTimer_timer \nprotected int _timeout \nThe request timeout in milliseconds.\nprotected int _retries \nThe maximum number of attempts before the transaction is considered failed.\nprotected int _attempts \nThe number of times the transaction has been sent.\nprotected bool _destroyed \nprotected inline virtual  ~PacketTransaction() \nprotected inline virtual void onStateChange(TransactionState& state,constTransactionState&) \nOverride to handle post state change logic.\nprotected inline virtual bool handlePotentialResponse(const PacketT & packet) \nProcesses a potential response candidate and updates the state accordingly.\nprotected bool checkResponse(const PacketT & packet) \nChecks a potential response candidate and returns true on successful match.\nprotected inline virtual void onResponse() \nCalled when a successful response is received.\nprotected inline virtual void onTimeout(void *) \nclass scy::PointerCollection \nclass scy::PointerCollection\n  : public scy::AbstractCollection\nThis collection is used to maintain an map of any pointer type indexed by key value in a thread-safe way.\nThis class allows for custom memory handling of managed pointers via the TDeleter argument.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  PointerCollection()\n\n\n\npublic inline virtual  ~PointerCollection()\n\n\n\npublic inline virtual bool add(const TKey & key,TValue * item,bool whiny)\n\n\n\npublic inline virtual void update(const TKey & key,TValue * item)\n\n\n\npublic inline virtual TValue * get(const TKey & key,bool whiny) const\n\n\n\npublic inline virtual bool free(const TKey & key)\n\n\n\npublic inline virtual TValue * remove(const TKey & key)\n\n\n\npublic inline virtual bool remove(const TValue * item)\n\n\n\npublic inline virtual bool exists(const TKey & key) const\n\n\n\npublic inline virtual bool exists(const TValue * item) const\n\n\n\npublic inline virtual bool empty() const\n\n\n\npublic inline virtual int size() const\n\n\n\npublic inline virtual void clear()\n\n\n\npublic inline virtual Map map() const\n\n\n\npublic inline virtual Map & map()\n\n\n\npublic inline virtual void onAdd(const TKey &,TValue *)\n\n\n\npublic inline virtual void onRemove(const TKey &,TValue *)\n\n\n\nprotected Map _map\n\n\n\nprotected mutableMutex_mutex\n\n\n\n\nMembers\npublic inline  PointerCollection() \npublic inline virtual  ~PointerCollection() \npublic inline virtual bool add(const TKey & key,TValue * item,bool whiny) \npublic inline virtual void update(const TKey & key,TValue * item) \npublic inline virtual TValue * get(const TKey & key,bool whiny) const \npublic inline virtual bool free(const TKey & key) \npublic inline virtual TValue * remove(const TKey & key) \npublic inline virtual bool remove(const TValue * item) \npublic inline virtual bool exists(const TKey & key) const \npublic inline virtual bool exists(const TValue * item) const \npublic inline virtual bool empty() const \npublic inline virtual int size() const \npublic inline virtual void clear() \npublic inline virtual Map map() const \npublic inline virtual Map & map() \npublic inline virtual void onAdd(const TKey &,TValue *) \npublic inline virtual void onRemove(const TKey &,TValue *) \nprotected Map _map \nprotected mutableMutex_mutex \nclass scy::Process \nclass scy::Process\n  : public scy::uv::Handle\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::vector args\n\n\n\npublic std::function onexit\nExit callback; returns the exit status.\n\n\npublic ProcessOptions options\nProcess options.\n\n\npublic  Process(uv::Loop * loop)\n\n\n\npublic void spawn()\n\n\n\npublic bool kill(int signum)\nKills the process.\n\n\npublic int pid() const\nReturns the process PID.\n\n\nprotected uv_process_t _proc\n\n\n\n\nMembers\npublic std::vector args \nCommand line args. STL proxy for options.args\npublic std::function onexit \nExit callback; returns the exit status.\npublic ProcessOptions options \nProcess options.\npublic  Process(uv::Loop * loop) \npublic void spawn() \nSpawns the process. Options must be properly set. Throws and exception on error.\npublic bool kill(int signum) \nKills the process.\npublic int pid() const \nReturns the process PID.\nprotected uv_process_t _proc \nclass scy::Queue \nImplements a thread-safe queue container.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline void push(const T & data)\n\n\n\npublic inline bool empty() const\n\n\n\npublic inline T & front()\n\n\n\npublic inline T const  & front() const\n\n\n\npublic inline T & back()\n\n\n\npublic inline T const  & back() const\n\n\n\npublic inline void pop()\n\n\n\npublic template  inline std::size_t sort()\n\n\n\npublic inline std::size_t size()\n\n\n\npublic inline std::deque & queue()\n\n\n\n\nMembers\npublic inline void push(const T & data) \npublic inline bool empty() const \npublic inline T & front() \npublic inline T const  & front() const \npublic inline T & back() \npublic inline T const  & back() const \npublic inline void pop() \npublic template  inline std::size_t sort() \npublic inline std::size_t size() \npublic inline std::deque & queue() \nclass scy::Random \nRandom implements a pseudo random number generator (PRNG). The PRNG is a nonlinear additive feedback random number generator using 256 bytes of state information and a period of up to 2^69.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Random(int stateSize)\n\n\n\npublic  ~Random()\nDestroys the PRNG.\n\n\npublic void seed(std::uint32_t seed)\nSeeds the pseudo random generator with the given seed.\n\n\npublic void seed()\n\n\n\npublic std::uint32_t next()\nReturns the next 31-bit pseudo random number.\n\n\npublic std::uint32_t next(std::uint32_t n)\nReturns the next 31-bit pseudo random number modulo n.\n\n\npublic char nextChar()\nReturns the next pseudo random character.\n\n\npublic bool nextBool()\nReturns the next boolean pseudo random value.\n\n\npublic float nextFloat()\nReturns the next float pseudo random number between 0.0 and 1.0.\n\n\npublic double nextDouble()\nReturns the next double pseudo random number between 0.0 and 1.0.\n\n\nprotected void initState(std::uint32_t seed,char * arg_state,std::int32_t n)\n\n\n\n\nMembers\npublic  Random(int stateSize) \nCreates and initializes the PRNG. Specify either a state buffer size (8 to 256 bytes) or one of the Type values.\npublic  ~Random() \nDestroys the PRNG.\npublic void seed(std::uint32_t seed) \nSeeds the pseudo random generator with the given seed.\npublic void seed() \nSeeds the pseudo random generator with a random seed obtained from a RandomInputStream.\npublic std::uint32_t next() \nReturns the next 31-bit pseudo random number.\npublic std::uint32_t next(std::uint32_t n) \nReturns the next 31-bit pseudo random number modulo n.\npublic char nextChar() \nReturns the next pseudo random character.\npublic bool nextBool() \nReturns the next boolean pseudo random value.\npublic float nextFloat() \nReturns the next float pseudo random number between 0.0 and 1.0.\npublic double nextDouble() \nReturns the next double pseudo random number between 0.0 and 1.0.\nprotected void initState(std::uint32_t seed,char * arg_state,std::int32_t n) \nclass scy::RawPacket \nclass scy::RawPacket\n  : public scy::IPacket\nRawPacket is the default data packet type which consists of an optionally managed char pointer and a size value.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic char * _data\n\n\n\npublic std::size_t _size\n\n\n\npublic bool _free\n\n\n\npublic inline  RawPacket(char * data,std::size_t size,unsigned flags,void * source,void * opaque,IPacketInfo* info)\n\n\n\npublic inline  RawPacket(const char * data,std::size_t size,unsigned flags,void * source,void * opaque,IPacketInfo* info)\n\n\n\npublic inline  RawPacket(constRawPacket& that)\n\n\n\npublic inline virtual  ~RawPacket()\n\n\n\npublic inline virtualIPacket* clone() const\n\n\n\npublic inline virtual void setData(char * data,std::size_t size)\n\n\n\npublic inline virtual void copyData(const char * data,std::size_t size)\n\n\n\npublic inline virtual std::size_t read(constConstBuffer&)\n\n\n\npublic inline virtual void write(Buffer &) const\n\n\n\npublic inline virtual char * data() const\nThe packet data pointer for buffered packets.\n\n\npublic inline virtual std::size_t size() const\n\n\n\npublic inline virtual const char * className() const\n\n\n\npublic inline virtual bool ownsBuffer() const\n\n\n\npublic inline virtual void assignDataOwnership()\n\n\n\n\nMembers\npublic char * _data \npublic std::size_t _size \npublic bool _free \npublic inline  RawPacket(char * data,std::size_t size,unsigned flags,void * source,void * opaque,IPacketInfo* info) \npublic inline  RawPacket(const char * data,std::size_t size,unsigned flags,void * source,void * opaque,IPacketInfo* info) \npublic inline  RawPacket(constRawPacket& that) \npublic inline virtual  ~RawPacket() \npublic inline virtualIPacket* clone() const \npublic inline virtual void setData(char * data,std::size_t size) \npublic inline virtual void copyData(const char * data,std::size_t size) \npublic inline virtual std::size_t read(constConstBuffer&) \nRead/parse to the packet from the given input buffer. The number of bytes read is returned.\npublic inline virtual void write(Buffer &) const \nCopy/generate to the packet given output buffer. The number of bytes written can be obtained from the buffer.\nTodo: It may be prefferable to use our pod types here instead of buffer input, but the current codebase requires that the buffer be dynamically resizable for some protocols...\nvirtual std::size_t write(MutableBuffer&) const = 0;\npublic inline virtual char * data() const \nThe packet data pointer for buffered packets.\npublic inline virtual std::size_t size() const \nThe size of the packet in bytes.\nThis is the nember of bytes that will be written on a call to write(), but may not be the number of bytes that will be consumed by read().\npublic inline virtual const char * className() const \npublic inline virtual bool ownsBuffer() const \npublic inline virtual void assignDataOwnership() \nclass scy::RotatingFileChannel \nclass scy::RotatingFileChannel\n  : public scy::LogChannel\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  RotatingFileChannel(const std::string & name,const std::string & dir,LogLevel level,const std::string & extension,int rotationInterval,const char * timeFormat)\n\n\n\npublic virtual  ~RotatingFileChannel()\n\n\n\npublic virtual void write(constLogStream& stream)\n\n\n\npublic virtual void rotate()\n\n\n\npublic inline std::string dir() const\n\n\n\npublic inline std::string filename() const\n\n\n\npublic inline int rotationInterval() const\n\n\n\npublic inline void setDir(const std::string & dir)\n\n\n\npublic inline void setExtension(const std::string & ext)\n\n\n\npublic inline void setRotationInterval(int interval)\n\n\n\nprotected std::ofstream * _fstream\n\n\n\nprotected std::string _dir\n\n\n\nprotected std::string _filename\n\n\n\nprotected std::string _extension\n\n\n\nprotected int _rotationInterval\nThe log rotation interval in seconds.\n\n\nprotected time_t _rotatedAt\nThe time the log was last rotated.\n\n\n\nMembers\npublic  RotatingFileChannel(const std::string & name,const std::string & dir,LogLevel level,const std::string & extension,int rotationInterval,const char * timeFormat) \npublic virtual  ~RotatingFileChannel() \npublic virtual void write(constLogStream& stream) \npublic virtual void rotate() \npublic inline std::string dir() const \npublic inline std::string filename() const \npublic inline int rotationInterval() const \npublic inline void setDir(const std::string & dir) \npublic inline void setExtension(const std::string & ext) \npublic inline void setRotationInterval(int interval) \nprotected std::ofstream * _fstream \nprotected std::string _dir \nprotected std::string _filename \nprotected std::string _extension \nprotected int _rotationInterval \nThe log rotation interval in seconds.\nprotected time_t _rotatedAt \nThe time the log was last rotated.\nclass scy::RunnableQueue \nclass scy::RunnableQueue\n  : public scy::Queue\n  : public scy::async::Runnable\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::function ondispatch\nMust be set before the queue is running.\n\n\npublic inline  RunnableQueue(int limit,int timeout)\n\n\n\npublic inline virtual  ~RunnableQueue()\n\n\n\npublic inline virtual void push(T * item)\nThe queue takes ownership of the item pointer.\n\n\npublic inline virtual void flush()\n\n\n\npublic inline void clear()\n\n\n\npublic inline virtual void run()\n\n\n\npublic inline virtual void runTimeout()\n\n\n\npublic inline virtual void dispatch(T & item)\n\n\n\npublic inline void setTimeout(int milliseconds)\nint timeout() /// { /// Mutex::ScopedLock lock(_mutex); /// return _timeout; /// }\n\n\nprotected int _limit\n\n\n\nprotected int _timeout\n\n\n\nprotected mutableMutex_mutex\nqueue_t _queue;\n\n\nprotected  RunnableQueue(constRunnableQueue&)\n\n\n\nprotectedRunnableQueue& operator=(constRunnableQueue&)\n\n\n\nprotected inline virtual T * popNext()\n\n\n\nprotected inline virtual bool dispatchNext()\n\n\n\n\nMembers\npublic std::function ondispatch \nMust be set before the queue is running.\nThe default dispatch function.\npublic inline  RunnableQueue(int limit,int timeout) \npublic inline virtual  ~RunnableQueue() \npublic inline virtual void push(T * item) \nThe queue takes ownership of the item pointer.\npublic inline virtual void flush() \npublic inline void clear() \npublic inline virtual void run() \nbool empty() /// { /// // Disabling mutex lock for bool check. //Mutex::ScopedLock lock(_mutex); /// return empty(); /// } If not timeout is set this method blocks until cancel() // is called, otherwise runTimeout() will be called. Pseudo protected for std::bind compatability.\npublic inline virtual void runTimeout() \nuntil the queue is empty or the timeout expires. Pseudo protected for std::bind compatability.\npublic inline virtual void dispatch(T & item) \npublic inline void setTimeout(int milliseconds) \nint timeout() /// { /// Mutex::ScopedLock lock(_mutex); /// return _timeout; /// }\nprotected int _limit \nprotected int _timeout \nprotected mutableMutex_mutex \nqueue_t _queue;\nprotected  RunnableQueue(constRunnableQueue&) \nprotectedRunnableQueue& operator=(constRunnableQueue&) \nprotected inline virtual T * popNext() \nprotected inline virtual bool dispatchNext() \nclass scy::ScopedConfiguration \nScopedConfiguration provides multiple levels of configuration for a module. Multiple levels means that there is a module level scope, and a default scope. When a property is accessed, the module scope value will be used if available, otherwise the default scope value will be used.\nExample scoping: Module: channels.[name].modes.[name].[value] Default: modes.[name].[value]\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicConfiguration& config\n\n\n\npublic std::string currentScope\n\n\n\npublic std::string defaultScope\n\n\n\npublic  ScopedConfiguration(Configuration& config,const std::string & currentScope,const std::string & defaultScope)\n\n\n\npublic  ScopedConfiguration(constScopedConfiguration& that)\n\n\n\npublic std::string getString(const std::string & key,const std::string & defaultValue,bool forceDefaultScope) const\n\n\n\npublic int getInt(const std::string & key,int defaultValue,bool forceDefaultScope) const\n\n\n\npublic double getDouble(const std::string & key,double defaultValue,bool forceDefaultScope) const\n\n\n\npublic bool getBool(const std::string & key,bool defaultValue,bool forceDefaultScope) const\n\n\n\npublic void setString(const std::string & key,const std::string & value,bool defaultScope)\n\n\n\npublic void setInt(const std::string & key,int value,bool defaultScope)\n\n\n\npublic void setDouble(const std::string & key,double value,bool defaultScope)\n\n\n\npublic void setBool(const std::string & key,bool value,bool defaultScope)\n\n\n\npublic std::string getCurrentScope(const std::string & key) const\n\n\n\npublic std::string getDafaultKey(const std::string & key) const\n\n\n\npublic std::string getScopedKey(const std::string & key,bool defaultScope) const\n\n\n\n\nMembers\npublicConfiguration& config \npublic std::string currentScope \npublic std::string defaultScope \npublic  ScopedConfiguration(Configuration& config,const std::string & currentScope,const std::string & defaultScope) \npublic  ScopedConfiguration(constScopedConfiguration& that) \npublic std::string getString(const std::string & key,const std::string & defaultValue,bool forceDefaultScope) const \npublic int getInt(const std::string & key,int defaultValue,bool forceDefaultScope) const \npublic double getDouble(const std::string & key,double defaultValue,bool forceDefaultScope) const \npublic bool getBool(const std::string & key,bool defaultValue,bool forceDefaultScope) const \npublic void setString(const std::string & key,const std::string & value,bool defaultScope) \npublic void setInt(const std::string & key,int value,bool defaultScope) \npublic void setDouble(const std::string & key,double value,bool defaultScope) \npublic void setBool(const std::string & key,bool value,bool defaultScope) \npublic std::string getCurrentScope(const std::string & key) const \npublic std::string getDafaultKey(const std::string & key) const \npublic std::string getScopedKey(const std::string & key,bool defaultScope) const \nclass scy::ScopedPointer \nScoped Pointer Classes.\nScopedPointer provides an interface for holding and ansynchronously deleting a pointer in various ways.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  ScopedPointer()\n\n\n\npublic inline virtual  ~ScopedPointer()\n\n\n\n\nMembers\npublic inline  ScopedPointer() \npublic inline virtual  ~ScopedPointer() \nclass scy::ScopedRawPointer \nclass scy::ScopedRawPointer\n  : public scy::ScopedPointer\nScopedRawPointer implements the ScopedPointer interface to provide a method for deleting a raw pointer.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic void * ptr\n\n\n\npublic inline  ScopedRawPointer(void * p)\n\n\n\npublic inline virtual  ~ScopedRawPointer()\n\n\n\n\nMembers\npublic void * ptr \npublic inline  ScopedRawPointer(void * p) \npublic inline virtual  ~ScopedRawPointer() \nclass scy::ScopedSharedPointer \nclass scy::ScopedSharedPointer\n  : public scy::ScopedPointer\nScopedSharedPointer implements the ScopedPointer interface to provide deferred deletion for shared_ptr managed pointers. Note that this class does not guarantee deletion of the managed pointer; all it does is copy the shared_ptr and release it when the ScopedSharedPointer instance is deleted, which makes it useful for certain asyncronous scenarios.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::shared_ptr ptr\n\n\n\npublic inline  ScopedSharedPointer(std::shared_ptr p)\n\n\n\npublic inline virtual  ~ScopedSharedPointer()\n\n\n\n\nMembers\npublic std::shared_ptr ptr \npublic inline  ScopedSharedPointer(std::shared_ptr p) \npublic inline virtual  ~ScopedSharedPointer() \nclass scy::SharedObject \nSharedObject is the base class for objects that employ reference counting based garbage collection.\nReference-counted objects inhibit construction by copying and assignment.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  SharedObject(bool deferred)\n\n\n\npublic inline void duplicate()\nIncrement the object's reference count.\n\n\npublic inline void release()\n\n\n\npublic inline unsigned refCount() const\n\n\n\nprotected std::atomic count\n\n\n\nprotected bool deferred\n\n\n\nprotected inline virtual void freeMemory()\n\n\n\nprotected inline virtual  ~SharedObject()\n\n\n\nprotected  SharedObject(constSharedObject&)\n\n\n\nprotectedSharedObject& operator=(constSharedObject&)\n\n\n\n\nMembers\npublic inline  SharedObject(bool deferred) \nCreates the SharedObject with an initial reference count of one.\npublic inline void duplicate() \nIncrement the object's reference count.\npublic inline void release() \nDecrement the object's reference count and calls delete if the count reaches zero.\npublic inline unsigned refCount() const \nprotected std::atomic count \nprotected bool deferred \nprotected inline virtual void freeMemory() \nDeletes the instance when the reference count reaches zero. This method can be overridden for different deletion strategies.\nprotected inline virtual  ~SharedObject() \nDestroys the SharedObject. The destructor should never be called directly.\nprotected  SharedObject(constSharedObject&) \nprotectedSharedObject& operator=(constSharedObject&) \nclass scy::Signal \nclass scy::Signal\n  : public scy::SignalBase, P >\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\n\n\n\n\nMembers\nclass scy::Signal2 \nclass scy::Signal2\n  : public scy::SignalBase, P, P2 >\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\n\n\n\n\nMembers\nclass scy::Signal3 \nclass scy::Signal3\n  : public scy::SignalBase, P, P2, P3 >\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\n\n\n\n\nMembers\nclass scy::Signal4 \nclass scy::Signal4\n  : public scy::SignalBase, P, P2, P3, P4 >\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\n\n\n\n\nMembers\nclass scy::SignalBase \nThis class implements a thread-safe signal which broadcasts arbitrary data to multiple receiver delegates.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  SignalBase()\n\n\n\npublic inline virtual  ~SignalBase()\n\n\n\npublic inline void operator+=(const DelegateT & delegate)\n\n\n\npublic inline void operator-=(const DelegateT & delegate)\n\n\n\npublic inline void operator-=(const void * klass)\n\n\n\npublic inline void attach(const DelegateT & delegate)\n\n\n\npublic inline bool detach(const DelegateT & delegate)\n\n\n\npublic inline void detach(const void * klass)\nDetaches all delegates associated with the given class instance.\n\n\npublic inline void cleanup()\nDeletes cancelled delegates.\n\n\npublic inline void obtain(DelegateList & active)\n\n\n\npublic inline virtual void emit(void * sender)\n\n\n\npublic inline virtual void emit(void * sender,P arg)\n\n\n\npublic inline virtual void emit(void * sender,P arg,P2 arg2)\n\n\n\npublic inline virtual void emit(void * sender,P arg,P2 arg2,P3 arg3)\n\n\n\npublic inline virtual void emit(void * sender,P arg,P2 arg2,P3 arg3,P4 arg4)\n\n\n\npublic inline void clear()\n\n\n\npublic inline void enable(bool flag)\n\n\n\npublic inline bool enabled() const\n\n\n\npublic inline DelegateList delegates() const\n\n\n\npublic inline int ndelegates() const\n\n\n\nprotected DelegateList _delegates\n\n\n\nprotected bool _enabled\n\n\n\nprotected bool _dirty\n\n\n\nprotected int _count\n\n\n\nprotected mutableMutex_mutex\n\n\n\n\nMembers\npublic inline  SignalBase() \npublic inline virtual  ~SignalBase() \npublic inline void operator+=(const DelegateT & delegate) \npublic inline void operator-=(const DelegateT & delegate) \npublic inline void operator-=(const void * klass) \npublic inline void attach(const DelegateT & delegate) \nAttaches a delegate to the signal. If the delegate already exists it will overwrite the previous delegate.\npublic inline bool detach(const DelegateT & delegate) \nDetaches a delegate from the signal. Returns true if the delegate was detached, false otherwise.\npublic inline void detach(const void * klass) \nDetaches all delegates associated with the given class instance.\npublic inline void cleanup() \nDeletes cancelled delegates.\npublic inline void obtain(DelegateList & active) \nRetrieves a list of active delegates while simultaneously deleting any redundant delegates.\npublic inline virtual void emit(void * sender) \npublic inline virtual void emit(void * sender,P arg) \npublic inline virtual void emit(void * sender,P arg,P2 arg2) \npublic inline virtual void emit(void * sender,P arg,P2 arg2,P3 arg3) \npublic inline virtual void emit(void * sender,P arg,P2 arg2,P3 arg3,P4 arg4) \npublic inline void clear() \npublic inline void enable(bool flag) \npublic inline bool enabled() const \npublic inline DelegateList delegates() const \npublic inline int ndelegates() const \nReturns the number of delegates connected to the signal. Use this instead of delegates().size() since the container is not updated in real time.\nprotected DelegateList _delegates \nprotected bool _enabled \nprotected bool _dirty \nprotected int _count \nprotected mutableMutex_mutex \nclass scy::Singleton \nThis is a helper template class for managing singleton objects allocated on the heap.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  Singleton()\nCreates the Singleton wrapper.\n\n\npublic inline  ~Singleton()\n\n\n\npublic inline S * get()\n\n\n\npublic inline S * swap(S * newPtr)\n\n\n\npublic inline void destroy()\nDestroys the managed singleton instance.\n\n\n\nMembers\npublic inline  Singleton() \nCreates the Singleton wrapper.\npublic inline  ~Singleton() \nDestroys the Singleton wrapper and the managed singleton instance it holds.\npublic inline S * get() \nReturns a pointer to the singleton object hold by the Singleton. The first call to get on a nullptr singleton will instantiate the singleton.\npublic inline S * swap(S * newPtr) \nSwaps the old pointer with the new one and returns the old instance.\npublic inline void destroy() \nDestroys the managed singleton instance.\nclass scy::State \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  State(ID id,const std::string & message)\n\n\n\npublic inline virtual  ~State()\n\n\n\npublic virtual ID id() const\n\n\n\npublic virtual void set(ID id)\n\n\n\npublic virtual std::string message() const\n\n\n\npublic virtual void setMessage(const std::string & message)\n\n\n\npublic virtual std::string str(ID id) const\n\n\n\npublic virtual std::string toString() const\n\n\n\npublic inline virtual bool between(ID lid,ID rid) const\n\n\n\npublic inline virtual bool equals(ID id) const\n\n\n\npublic inline bool operator==(constState& r)\n\n\n\npublic inline bool operator==(const State::ID & r)\n\n\n\nprotected ID _id\n\n\n\nprotected std::string _message\n\n\n\n\nMembers\npublic  State(ID id,const std::string & message) \npublic inline virtual  ~State() \npublic virtual ID id() const \npublic virtual void set(ID id) \npublic virtual std::string message() const \npublic virtual void setMessage(const std::string & message) \npublic virtual std::string str(ID id) const \npublic virtual std::string toString() const \npublic inline virtual bool between(ID lid,ID rid) const \npublic inline virtual bool equals(ID id) const \npublic inline bool operator==(constState& r) \npublic inline bool operator==(const State::ID & r) \nprotected ID _id \nprotected std::string _message \nclass scy::Stateful \nThis class implements a simple state machine. T should be a derived State type.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicSignal2 StateChange\nSignals when the state changes.\n\n\npublic inline  Stateful()\n\n\n\npublic inline virtual  ~Stateful()\n\n\n\npublic inline virtual bool stateEquals(unsigned int id) const\n\n\n\npublic inline virtual bool stateBetween(unsigned int lid,unsigned int rid) const\n\n\n\npublic inline virtual T & state()\n\n\n\npublic inline virtual const T state() const\n\n\n\nprotected T _state\n\n\n\nprotected inline virtual bool beforeStateChange(const T & state)\n\n\n\nprotected inline virtual void onStateChange(T &,const T &)\nOverride to handle post state change logic.\n\n\nprotected inline virtual bool setState(void * sender,unsigned int id,const std::string & message)\n\n\n\nprotected inline virtual bool setState(void * sender,const T & state)\n\n\n\nprotected inline virtual void setStateMessage(const std::string & message)\n\n\n\n\nMembers\npublicSignal2 StateChange \nSignals when the state changes.\npublic inline  Stateful() \npublic inline virtual  ~Stateful() \npublic inline virtual bool stateEquals(unsigned int id) const \npublic inline virtual bool stateBetween(unsigned int lid,unsigned int rid) const \npublic inline virtual T & state() \npublic inline virtual const T state() const \nprotected T _state \nprotected inline virtual bool beforeStateChange(const T & state) \nOverride to handle pre state change logic. Return false to prevent state change.\nprotected inline virtual void onStateChange(T &,const T &) \nOverride to handle post state change logic.\nprotected inline virtual bool setState(void * sender,unsigned int id,const std::string & message) \nSets the state and sends the state signal if the state change was successful.\nprotected inline virtual bool setState(void * sender,const T & state) \nSets the state and sends the state signal if the state change was successful.\nprotected inline virtual void setStateMessage(const std::string & message) \nclass scy::StateSignal \nclass scy::StateSignal\n  : public scy::MutexState\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  StateSignal(ID id)\n\n\n\npublic  StateSignal(constStateSignal& r)\n\n\n\npublic inline virtual  ~StateSignal()\n\n\n\npublic virtual bool change(ID id)\n\n\n\npublic virtual bool canChange(ID id)\n\n\n\npublic virtual void onChange(ID id,ID prev)\n\n\n\nprotected virtual void set(ID id)\n\n\n\n\nMembers\npublic  StateSignal(ID id) \npublic  StateSignal(constStateSignal& r) \npublic inline virtual  ~StateSignal() \npublic virtual bool change(ID id) \npublic virtual bool canChange(ID id) \npublic virtual void onChange(ID id,ID prev) \nprotected virtual void set(ID id) \nFired when the state changes to signal the new and previous states.\nclass scy::StopPropagation \nclass scy::StopPropagation\n  : public exception\nThis exception is used to break out of a Signal callback scope.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual  ~StopPropagation()\n\n\n\n\nMembers\npublic inline virtual  ~StopPropagation() \nclass scy::Stopwatch \nA simple facility to measure time intervals with microsecond resolution.\nThe Stopwatch uses the current system time, so if the system time changes the measured time will be incorrect.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Stopwatch()\n\n\n\npublic  ~Stopwatch()\n\n\n\npublic void start()\nStarts (or restarts) the stopwatch.\n\n\npublic void stop()\nStops or pauses the stopwatch.\n\n\npublic void reset()\nResets the stopwatch.\n\n\npublic void restart()\nResets and starts the stopwatch.\n\n\npublicTimestamp::TimeDiffelapsed() const\n\n\n\npublic int elapsedSeconds() const\n\n\n\npublic int elapsedMilliseconds() const\n\n\n\n\nMembers\npublic  Stopwatch() \npublic  ~Stopwatch() \npublic void start() \nStarts (or restarts) the stopwatch.\npublic void stop() \nStops or pauses the stopwatch.\npublic void reset() \nResets the stopwatch.\npublic void restart() \nResets and starts the stopwatch.\npublicTimestamp::TimeDiffelapsed() const \nReturns the elapsed time in microseconds since the stopwatch started.\npublic int elapsedSeconds() const \nReturns the number of seconds elapsed since the stopwatch started.\npublic int elapsedMilliseconds() const \nReturns the number of milliseconds elapsed since the stopwatch started.\nclass scy::Stream \nclass scy::Stream\n  : public scy::uv::Handle\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicSignal2 Read\nSignals when data can be read from the stream.\n\n\npublic inline  Stream(uv::Loop * loop,void * stream)\n\n\n\npublic inline virtual void close()\n\n\n\npublic inline bool shutdown()\n\n\n\npublic inline bool write(const char * data,std::size_t len)\n\n\n\npublic inline Buffer & buffer()\n\n\n\npublic inline virtual bool closed() const\nReturns true if the native socket handle is closed.\n\n\nprotected Buffer _buffer\n\n\n\nprotected inline virtual bool readStart()\n\n\n\nprotected inline virtual bool readStop()\n\n\n\nprotected inline virtual void onRead(const char * data,std::size_t len)\n\n\n\nprotected inline virtual  ~Stream()\n\n\n\nprotected inline virtual void * self()\n\n\n\n\nMembers\npublicSignal2 Read \nSignals when data can be read from the stream.\npublic inline  Stream(uv::Loop * loop,void * stream) \npublic inline virtual void close() \nCloses and resets the stream handle. This will close the active socket/pipe and destroy the uv_stream_t handle.\nIf the stream is already closed this call will have no side-effects.\npublic inline bool shutdown() \nSends a shutdown packet to the connected peer. Returns true if the shutdown packet was sent.\npublic inline bool write(const char * data,std::size_t len) \nWrites data to the stream.\nReturns false if the underlying socket is closed. This method does not throw an exception.\npublic inline Buffer & buffer() \npublic inline virtual bool closed() const \nReturns true if the native socket handle is closed.\nprotected Buffer _buffer \nprotected inline virtual bool readStart() \nprotected inline virtual bool readStop() \nprotected inline virtual void onRead(const char * data,std::size_t len) \nprotected inline virtual  ~Stream() \nprotected inline virtual void * self() \nclass scy::StreamWriter \nclass scy::StreamWriter\n  : public scy::PacketProcessor\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicPacketSignalemitter\n\n\n\npublic inline  StreamWriter(std::ostream * stream)\n\n\n\npublic inline virtual  ~StreamWriter()\n\n\n\npublic inline virtual void process(IPacket& packet)\n\n\n\npublic template  inline StreamT & stream()\n\n\n\npublic inline std::ostream & stream()\n\n\n\nprotected std::ostream * _ostream\n\n\n\n\nMembers\npublicPacketSignalemitter \npublic inline  StreamWriter(std::ostream * stream) \npublic inline virtual  ~StreamWriter() \npublic inline virtual void process(IPacket& packet) \nThis method performs processing on the given packet and emits the result.\nNote: If packet processing is async (the packet is not in the current thread scope) then packet data must be copied. Copied data can be freed directly aFter the async call to emit() the outgoing packet.\npublic template  inline StreamT & stream() \npublic inline std::ostream & stream() \nprotected std::ostream * _ostream \nclass scy::SyncContext \nclass scy::SyncContext\n  : public scy::async::Runner\nSyncContext enables any thread to communicate with the associated event loop via synchronized callbacks.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  SyncContext(uv::Loop * loop)\n\n\n\npublic  SyncContext(uv::Loop * loop,std::function target)\n\n\n\npublic  SyncContext(uv::Loop * loop,std::function target,void * arg)\n\n\n\npublic virtual  ~SyncContext()\n\n\n\npublic void post()\n\n\n\npublic virtual void cancel()\n\n\n\npublic virtual void close()\n\n\n\npublic virtual bool closed()\n\n\n\npublicuv::Handle& handle()\n\n\n\nprotecteduv::Handle_handle\n\n\n\nprotected virtual void startAsync()\nStart the context from the control thread.\n\n\nprotected virtual bool async() const\n\n\n\n\nMembers\npublic  SyncContext(uv::Loop * loop) \nCreate the synchronization context the given event loop and method. The target method will be called from the event loop context.\npublic  SyncContext(uv::Loop * loop,std::function target) \npublic  SyncContext(uv::Loop * loop,std::function target,void * arg) \npublic virtual  ~SyncContext() \npublic void post() \nSend a synchronization request to the event loop. Call this each time you want the target method called synchronously. The synchronous method will be called on next iteration. This is not atomic, so do not expect a callback for every request.\npublic virtual void cancel() \npublic virtual void close() \npublic virtual bool closed() \npublicuv::Handle& handle() \nprotecteduv::Handle_handle \nprotected virtual void startAsync() \nStart the context from the control thread.\nprotected virtual bool async() const \nReturns true if the implementation is thread-based, or false if it belongs to an event loop.\nclass scy::SyncPacketQueue \nclass scy::SyncPacketQueue\n  : public scy::SyncQueue\n  : public scy::PacketProcessor\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicPacketSignalemitter\n\n\n\npublic inline  SyncPacketQueue(uv::Loop * loop,int maxSize)\n\n\n\npublic inline  SyncPacketQueue(int maxSize)\n\n\n\npublic inline virtual  ~SyncPacketQueue()\n\n\n\npublic inline virtual void process(IPacket& packet)\n\n\n\npublic inline virtual bool accepts(IPacket&)\n\n\n\nprotected inline virtual void dispatch(T & packet)\n\n\n\nprotected inline virtual void onStreamStateChange(constPacketStreamState&)\n\n\n\n\nMembers\npublicPacketSignalemitter \npublic inline  SyncPacketQueue(uv::Loop * loop,int maxSize) \npublic inline  SyncPacketQueue(int maxSize) \npublic inline virtual  ~SyncPacketQueue() \npublic inline virtual void process(IPacket& packet) \nThis method performs processing on the given packet and emits the result.\nNote: If packet processing is async (the packet is not in the current thread scope) then packet data must be copied. Copied data can be freed directly aFter the async call to emit() the outgoing packet.\npublic inline virtual bool accepts(IPacket&) \nThis method ensures compatibility with the given packet type. Return false to reject the packet.\nprotected inline virtual void dispatch(T & packet) \nEmit should never be called after closure. Any late packets should have been dealt with and dropped by the run() function.\nprotected inline virtual void onStreamStateChange(constPacketStreamState&) \nCalled by the PacketStream to notify when the internal Stream state changes. On receiving the Stopped state, it is the responsibility of the adapter to have ceased all outgoing packet transmission, especially in multi-thread scenarios.\nclass scy::SyncQueue \nclass scy::SyncQueue\n  : public scy::RunnableQueue\nSyncQueue extends SyncContext to implement a synchronized FIFO queue which receives T objects from any thread and synchronizes them for safe consumption by the associated event loop.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  SyncQueue(uv::Loop * loop,int limit,int timeout)\n\n\n\npublic inline virtual  ~SyncQueue()\ntime for all callbacks to return.\n\n\npublic inline virtual void push(T * item)\nItem pointers are now managed by the SyncQueue.\n\n\npublic inline virtual void cancel()\n\n\n\npublic inlineSyncContext& sync()\n\n\n\nprotectedSyncContext_sync\n\n\n\n\nMembers\npublic inline  SyncQueue(uv::Loop * loop,int limit,int timeout) \npublic inline virtual  ~SyncQueue() \ntime for all callbacks to return.\npublic inline virtual void push(T * item) \nItem pointers are now managed by the SyncQueue.\npublic inline virtual void cancel() \npublic inlineSyncContext& sync() \nprotectedSyncContext_sync \nclass scy::Task \nclass scy::Task\n  : public scy::async::Runnable\nThis class is for implementing any kind async task that is compatible with a TaskRunner.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Task(bool repeat)\n\n\n\npublic virtual void destroy()\nSets the task to destroyed state.\n\n\npublic virtual bool destroyed() const\nSignals that the task should be disposed of.\n\n\npublic virtual bool repeating() const\n\n\n\npublic virtual std::uint32_t id() const\nUnique task ID.\n\n\nprotected std::uint32_t _id\n\n\n\nprotected bool _repeating\n\n\n\nprotected bool _destroyed\n\n\n\nprotected  Task(constTask& task)\n\n\n\nprotectedTask& operator=(Taskconst &)\n\n\n\nprotected virtual  ~Task()\nShould remain protected.\n\n\nprotected void run()\n\n\n\n\nMembers\npublic  Task(bool repeat) \npublic virtual void destroy() \nSets the task to destroyed state.\npublic virtual bool destroyed() const \nSignals that the task should be disposed of.\npublic virtual bool repeating() const \nSignals that the task's should be called repeatedly by the TaskRunner. If this returns false the task will be cancelled()\npublic virtual std::uint32_t id() const \nUnique task ID.\nprotected std::uint32_t _id \nprotected bool _repeating \nprotected bool _destroyed \nprotected  Task(constTask& task) \nprotectedTask& operator=(Taskconst &) \nprotected virtual  ~Task() \nShould remain protected.\nprotected void run() \nCalled by the TaskRunner to run the task. Override this method to implement task action. Returning true means the true should be called again, and false will cause the task to be destroyed. The task will similarly be destroyed id destroy() was called during the current task iteration.\nclass scy::TaskRunner \nclass scy::TaskRunner\n  : public scy::async::Runnable\nThe TaskRunner is an asynchronous event loop in charge of running one or many tasks.\nThe TaskRunner continually loops through each task in the task list calling the task's run() method.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicNullSignalIdle\nFires after completing an iteration of all tasks.\n\n\npublicNullSignalShutdown\nSignals when the TaskRunner is shutting down.\n\n\npublic  TaskRunner(async::Runner::Ptr runner)\n\n\n\npublic virtual  ~TaskRunner()\n\n\n\npublic virtual bool start(Task* task)\nStarts a task, adding it if it doesn't exist.\n\n\npublic virtual bool cancel(Task* task)\n\n\n\npublic virtual bool destroy(Task* task)\nQueues a task for destruction.\n\n\npublic virtual bool exists(Task* task) const\nReturns weather or not a task exists.\n\n\npublic virtualTask* get(std::uint32_t id) const\n\n\n\npublic virtual void setRunner(async::Runner::Ptr runner)\n\n\n\npublic inline virtual const char * className() const\n\n\n\nprotected mutableMutex_mutex\n\n\n\nprotected TaskList _tasks\n\n\n\nprotected async::Runner::Ptr _runner\n\n\n\nprotected virtual void run()\nCalled by the async context to run the next task.\n\n\nprotected virtual bool add(Task* task)\nAdds a task to the runner.\n\n\nprotected virtual bool remove(Task* task)\nRemoves a task from the runner.\n\n\nprotected virtualTask* next() const\nReturns the next task to be run.\n\n\nprotected virtual void clear()\nDestroys and clears all manages tasks.\n\n\nprotected virtual void onAdd(Task* task)\nCalled after a task is added.\n\n\nprotected virtual void onStart(Task* task)\nCalled after a task is started.\n\n\nprotected virtual void onCancel(Task* task)\nCalled after a task is cancelled.\n\n\nprotected virtual void onRemove(Task* task)\nCalled after a task is removed.\n\n\nprotected virtual void onRun(Task* task)\nCalled after a task has run.\n\n\n\nMembers\npublicNullSignalIdle \nFires after completing an iteration of all tasks.\npublicNullSignalShutdown \nSignals when the TaskRunner is shutting down.\npublic  TaskRunner(async::Runner::Ptr runner) \npublic virtual  ~TaskRunner() \npublic virtual bool start(Task* task) \nStarts a task, adding it if it doesn't exist.\npublic virtual bool cancel(Task* task) \nCancels a task. The task reference will be managed the TaskRunner until the task is destroyed.\npublic virtual bool destroy(Task* task) \nQueues a task for destruction.\npublic virtual bool exists(Task* task) const \nReturns weather or not a task exists.\npublic virtualTask* get(std::uint32_t id) const \nReturns the task pointer matching the given ID, or nullptr if no task exists.\npublic virtual void setRunner(async::Runner::Ptr runner) \nSet the asynchronous context for packet processing. This may be a Thread or another derivative of Async. Must be set before the stream is activated.\npublic inline virtual const char * className() const \nprotected mutableMutex_mutex \nprotected TaskList _tasks \nprotected async::Runner::Ptr _runner \nprotected virtual void run() \nCalled by the async context to run the next task.\nprotected virtual bool add(Task* task) \nAdds a task to the runner.\nprotected virtual bool remove(Task* task) \nRemoves a task from the runner.\nprotected virtualTask* next() const \nReturns the next task to be run.\nprotected virtual void clear() \nDestroys and clears all manages tasks.\nprotected virtual void onAdd(Task* task) \nCalled after a task is added.\nprotected virtual void onStart(Task* task) \nCalled after a task is started.\nprotected virtual void onCancel(Task* task) \nCalled after a task is cancelled.\nprotected virtual void onRemove(Task* task) \nCalled after a task is removed.\nprotected virtual void onRun(Task* task) \nCalled after a task has run.\nclass scy::Thread \nclass scy::Thread\n  : public scy::async::Runner\nThis class implements a platform-independent wrapper around an operating system thread.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Thread()\n\n\n\npublic  Thread(async::Runnable& target)\n\n\n\npublic  Thread(std::function target)\n\n\n\npublic  Thread(std::function target,void * arg)\n\n\n\npublic virtual  ~Thread()\n\n\n\npublic void join()\nWaits until the thread exits.\n\n\npublic bool waitForExit(int timeout)\n\n\n\npublic uv_thread_t id() const\nReturns the native thread handle.\n\n\nprotected uv_thread_t _handle\n\n\n\nprotected  Thread(constThread&)\n\n\n\nprotectedThread& operator=(constThread&)\n\n\n\nprotected virtual bool async() const\n\n\n\nprotected virtual void startAsync()\nStart the context from the control thread.\n\n\n\nMembers\npublic  Thread() \npublic  Thread(async::Runnable& target) \npublic  Thread(std::function target) \npublic  Thread(std::function target,void * arg) \npublic virtual  ~Thread() \npublic void join() \nWaits until the thread exits.\npublic bool waitForExit(int timeout) \nWaits until the thread exits. The thread should be cancelled beore calling this method. This method must be called from outside the current thread context or deadlock will ensue.\npublic uv_thread_t id() const \nReturns the native thread handle.\nprotected uv_thread_t _handle \nprotected  Thread(constThread&) \nprotectedThread& operator=(constThread&) \nprotected virtual bool async() const \nReturns true if the implementation is thread-based, or false if it belongs to an event loop.\nprotected virtual void startAsync() \nStart the context from the control thread.\nclass scy::ThreadedStreamReader \nclass scy::ThreadedStreamReader\n  : public scy::PacketStreamAdapter\n  : public scy::async::Startable\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicPacketSignalemitter\n\n\n\npublic inline  ThreadedStreamReader(std::istream * is)\n\n\n\npublic inline  ~ThreadedStreamReader()\n\n\n\npublic inline virtual void start()\n\n\n\npublic inline virtual void stop()\n\n\n\npublic template  inline StreamT & stream()\n\n\n\npublic inline std::istream & stream()\n\n\n\nprotectedThread_runner\n\n\n\nprotected std::istream * _istream\n\n\n\n\nMembers\npublicPacketSignalemitter \npublic inline  ThreadedStreamReader(std::istream * is) \npublic inline  ~ThreadedStreamReader() \npublic inline virtual void start() \npublic inline virtual void stop() \npublic template  inline StreamT & stream() \npublic inline std::istream & stream() \nprotectedThread_runner \nprotected std::istream * _istream \nclass scy::TimedToken \nclass scy::TimedToken\n  : public scy::Timeout\nA token that expires after the specified duration.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  TimedToken(long duration)\n\n\n\npublic  TimedToken(const std::string & id,long duration)\n\n\n\npublic inline std::string id() const\n\n\n\npublic inline bool operator==(constTimedToken& r) const\n\n\n\npublic inline bool operator==(const std::string & r) const\n\n\n\nprotected std::string _id\n\n\n\n\nMembers\npublic  TimedToken(long duration) \npublic  TimedToken(const std::string & id,long duration) \npublic inline std::string id() const \npublic inline bool operator==(constTimedToken& r) const \npublic inline bool operator==(const std::string & r) const \nprotected std::string _id \nclass scy::Timeout \nSimple millisecond timeout counter which expires after a given delay.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Timeout(long delay,bool autoStart)\n\n\n\npublic  Timeout(constTimeout& src)\n\n\n\npublic  ~Timeout()\n\n\n\npublic bool running() const\n\n\n\npublic void start()\n\n\n\npublic void stop()\n\n\n\npublic void reset()\n\n\n\npublic long remaining() const\n\n\n\npublic bool expired() const\n\n\n\npublic inline void setDelay(long delay)\n\n\n\npublic inline clock_t startAt() const\n\n\n\npublic inline long delay() const\n\n\n\npublicTimeout& operator=(constTimeout& src)\n\n\n\nprotected clock_t _startAt\n\n\n\nprotected long _delay\n\n\n\n\nMembers\npublic  Timeout(long delay,bool autoStart) \npublic  Timeout(constTimeout& src) \npublic  ~Timeout() \npublic bool running() const \npublic void start() \npublic void stop() \npublic void reset() \npublic long remaining() const \npublic bool expired() const \npublic inline void setDelay(long delay) \npublic inline clock_t startAt() const \npublic inline long delay() const \npublicTimeout& operator=(constTimeout& src) \nprotected clock_t _startAt \nprotected long _delay \nclass scy::Timer \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicNullSignalTimeout\n\n\n\npublic  Timer(uv::Loop * loop)\n\n\n\npublic virtual  ~Timer()\n\n\n\npublic virtual void start(std::int64_t interval)\n\n\n\npublic virtual void start(std::int64_t timeout,std::int64_t interval)\n\n\n\npublic virtual void stop()\nStops the timer.\n\n\npublic virtual void restart()\n\n\n\npublic virtual void again()\n\n\n\npublic virtual void setInterval(std::int64_t interval)\n\n\n\npublic bool active() const\n\n\n\npublic std::int64_t timeout() const\n\n\n\npublic std::int64_t interval() const\n\n\n\npublic std::int64_t count()\n\n\n\npublicuv::Handle& handle()\n\n\n\nprotecteduv::Handle_handle\n\n\n\nprotected std::int64_t _timeout\n\n\n\nprotected std::int64_t _interval\n\n\n\nprotected std::int64_t _count\n\n\n\nprotected  Timer(constTimer&)\n\n\n\nprotectedTimer& operator=(constTimer&)\n\n\n\nprotected virtual void init()\n\n\n\n\nMembers\npublicNullSignalTimeout \npublic  Timer(uv::Loop * loop) \npublic virtual  ~Timer() \npublic virtual void start(std::int64_t interval) \npublic virtual void start(std::int64_t timeout,std::int64_t interval) \nStarts the timer, an interval value of zero will only trigger once after timeout.\npublic virtual void stop() \nStops the timer.\npublic virtual void restart() \nRestarts the timer, even if it hasn't been started yet. An interval or interval must be set or an exception will be thrown.\npublic virtual void again() \nStop the timer, and if it is repeating restart it using the repeat value as the timeout. If the timer has never been started before it returns -1 and sets the error to UV_EINVAL.\npublic virtual void setInterval(std::int64_t interval) \nSet the repeat value. Note that if the repeat value is set from a timer callback it does not immediately take effect. If the timer was non-repeating before, it will have been stopped. If it was repeating, then the old repeat value will have been used to schedule the next timeout.\npublic bool active() const \npublic std::int64_t timeout() const \npublic std::int64_t interval() const \npublic std::int64_t count() \npublicuv::Handle& handle() \nprotecteduv::Handle_handle \nprotected std::int64_t _timeout \nprotected std::int64_t _interval \nprotected std::int64_t _count \nprotected  Timer(constTimer&) \nprotectedTimer& operator=(constTimer&) \nprotected virtual void init() \nclass scy::Timespan \nA class that represents time spans up to microsecond resolution.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Timespan()\nCreates a zero Timespan.\n\n\npublic  Timespan(TimeDiff microseconds)\nCreates a Timespan.\n\n\npublic  Timespan(long seconds,long microseconds)\n\n\n\npublic  Timespan(int days,int hours,int minutes,int seconds,int microseconds)\nCreates a Timespan.\n\n\npublic  Timespan(constTimespan& timespan)\nCreates a Timespan from another one.\n\n\npublic  ~Timespan()\nDestroys the Timespan.\n\n\npublicTimespan& operator=(constTimespan& timespan)\nAssignment operator.\n\n\npublicTimespan& operator=(TimeDiff microseconds)\nAssignment operator.\n\n\npublicTimespan& assign(int days,int hours,int minutes,int seconds,int microseconds)\nAssigns a new span.\n\n\npublicTimespan& assign(long seconds,long microseconds)\n\n\n\npublic void swap(Timespan& timespan)\nSwaps the Timespan with another one.\n\n\npublic inline bool operator==(constTimespan& ts) const\n\n\n\npublic inline bool operator!=(constTimespan& ts) const\n\n\n\npublic inline bool operator>(constTimespan& ts) const\n\n\n\npublic inline bool operator>=(constTimespan& ts) const\n\n\n\npublic inline bool operatorTimespan& ts) const\n\n\n\npublic inline bool operatorTimespan& ts) const\n\n\n\npublic inline bool operator==(TimeDiff microseconds) const\n\n\n\npublic inline bool operator!=(TimeDiff microseconds) const\n\n\n\npublic inline bool operator>(TimeDiff microseconds) const\n\n\n\npublic inline bool operator>=(TimeDiff microseconds) const\n\n\n\npublic inline bool operator\n\n\n\npublic inline bool operator\n\n\n\npublicTimespanoperator+(constTimespan& d) const\n\n\n\npublicTimespanoperator-(constTimespan& d) const\n\n\n\npublicTimespan& operator+=(constTimespan& d)\n\n\n\npublicTimespan& operator-=(constTimespan& d)\n\n\n\npublicTimespanoperator+(TimeDiff microseconds) const\n\n\n\npublicTimespanoperator-(TimeDiff microseconds) const\n\n\n\npublicTimespan& operator+=(TimeDiff microseconds)\n\n\n\npublicTimespan& operator-=(TimeDiff microseconds)\n\n\n\npublic inline int days() const\nReturns the number of days.\n\n\npublic inline int hours() const\nReturns the number of hours (0 to 23).\n\n\npublic inline int totalHours() const\nReturns the total number of hours.\n\n\npublic inline int minutes() const\nReturns the number of minutes (0 to 59).\n\n\npublic inline int totalMinutes() const\nReturns the total number of minutes.\n\n\npublic inline int seconds() const\nReturns the number of seconds (0 to 59).\n\n\npublic inline int totalSeconds() const\nReturns the total number of seconds.\n\n\npublic inline int milliseconds() const\nReturns the number of milliseconds (0 to 999).\n\n\npublic inline TimeDiff totalMilliseconds() const\nReturns the total number of milliseconds.\n\n\npublic inline int microseconds() const\n\n\n\npublic inline int useconds() const\n\n\n\npublic inline TimeDiff totalMicroseconds() const\nReturns the total number of microseconds.\n\n\n\nMembers\npublic  Timespan() \nCreates a zero Timespan.\npublic  Timespan(TimeDiff microseconds) \nCreates a Timespan.\npublic  Timespan(long seconds,long microseconds) \nCreates a Timespan. Useful for creating a Timespan from a struct timeval.\npublic  Timespan(int days,int hours,int minutes,int seconds,int microseconds) \nCreates a Timespan.\npublic  Timespan(constTimespan& timespan) \nCreates a Timespan from another one.\npublic  ~Timespan() \nDestroys the Timespan.\npublicTimespan& operator=(constTimespan& timespan) \nAssignment operator.\npublicTimespan& operator=(TimeDiff microseconds) \nAssignment operator.\npublicTimespan& assign(int days,int hours,int minutes,int seconds,int microseconds) \nAssigns a new span.\npublicTimespan& assign(long seconds,long microseconds) \nAssigns a new span. Useful for assigning from a struct timeval.\npublic void swap(Timespan& timespan) \nSwaps the Timespan with another one.\npublic inline bool operator==(constTimespan& ts) const \npublic inline bool operator!=(constTimespan& ts) const \npublic inline bool operator>(constTimespan& ts) const \npublic inline bool operator>=(constTimespan& ts) const \npublic inline bool operatorTimespan& ts) const \npublic inline bool operatorTimespan& ts) const \npublic inline bool operator==(TimeDiff microseconds) const \npublic inline bool operator!=(TimeDiff microseconds) const \npublic inline bool operator>(TimeDiff microseconds) const \npublic inline bool operator>=(TimeDiff microseconds) const \npublic inline bool operator \npublic inline bool operator \npublicTimespanoperator+(constTimespan& d) const \npublicTimespanoperator-(constTimespan& d) const \npublicTimespan& operator+=(constTimespan& d) \npublicTimespan& operator-=(constTimespan& d) \npublicTimespanoperator+(TimeDiff microseconds) const \npublicTimespanoperator-(TimeDiff microseconds) const \npublicTimespan& operator+=(TimeDiff microseconds) \npublicTimespan& operator-=(TimeDiff microseconds) \npublic inline int days() const \nReturns the number of days.\npublic inline int hours() const \nReturns the number of hours (0 to 23).\npublic inline int totalHours() const \nReturns the total number of hours.\npublic inline int minutes() const \nReturns the number of minutes (0 to 59).\npublic inline int totalMinutes() const \nReturns the total number of minutes.\npublic inline int seconds() const \nReturns the number of seconds (0 to 59).\npublic inline int totalSeconds() const \nReturns the total number of seconds.\npublic inline int milliseconds() const \nReturns the number of milliseconds (0 to 999).\npublic inline TimeDiff totalMilliseconds() const \nReturns the total number of milliseconds.\npublic inline int microseconds() const \nReturns the fractions of a millisecond in microseconds (0 to 999).\npublic inline int useconds() const \nReturns the fractions of a second in microseconds (0 to 999999).\npublic inline TimeDiff totalMicroseconds() const \nReturns the total number of microseconds.\nclass scy::Timestamp \nA Timestamp stores a monotonic* time value with (theoretical) microseconds resolution. Timestamps can be compared with each other and simple arithmetics are supported.\n[*] Note that Timestamp values are only monotonic as long as the systems's clock is monotonic as well (and not, e.g. set back).\nTimestamps are UTC (Coordinated Universal Time) based and thus independent of the timezone in effect on the system.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Timestamp()\nCreates a timestamp with the current time.\n\n\npublic  Timestamp(TimeValtv)\nCreates a timestamp from the given time value.\n\n\npublic  Timestamp(constTimestamp& other)\nCopy constructor.\n\n\npublic  ~Timestamp()\nDestroys the timestamp.\n\n\npublicTimestamp& operator=(constTimestamp& other)\n\n\n\npublicTimestamp& operator=(TimeValtv)\n\n\n\npublic void swap(Timestamp& timestamp)\nSwaps the Timestamp with another one.\n\n\npublic void update()\nUpdates the Timestamp with the current time.\n\n\npublic inline bool operator==(constTimestamp& ts) const\n\n\n\npublic inline bool operator!=(constTimestamp& ts) const\n\n\n\npublic inline bool operator>(constTimestamp& ts) const\n\n\n\npublic inline bool operator>=(constTimestamp& ts) const\n\n\n\npublic inline bool operatorTimestamp& ts) const\n\n\n\npublic inline bool operatorTimestamp& ts) const\n\n\n\npublic inlineTimestampoperator+(TimeDiffd) const\n\n\n\npublic inlineTimestampoperator-(TimeDiffd) const\n\n\n\npublic inlineTimeDiffoperator-(constTimestamp& ts) const\n\n\n\npublic inlineTimestamp& operator+=(TimeDiffd)\n\n\n\npublic inlineTimestamp& operator-=(TimeDiffd)\n\n\n\npublic inline std::time_t epochTime() const\n\n\n\npublic inlineUtcTimeValutcTime() const\n\n\n\npublic inlineTimeValepochMicroseconds() const\n\n\n\npublic inlineTimeDiffelapsed() const\n\n\n\npublic inline bool isElapsed(TimeDiffinterval) const\n\n\n\n\nMembers\npublic  Timestamp() \nCreates a timestamp with the current time.\npublic  Timestamp(TimeValtv) \nCreates a timestamp from the given time value.\npublic  Timestamp(constTimestamp& other) \nCopy constructor.\npublic  ~Timestamp() \nDestroys the timestamp.\npublicTimestamp& operator=(constTimestamp& other) \npublicTimestamp& operator=(TimeValtv) \npublic void swap(Timestamp& timestamp) \nSwaps the Timestamp with another one.\npublic void update() \nUpdates the Timestamp with the current time.\npublic inline bool operator==(constTimestamp& ts) const \npublic inline bool operator!=(constTimestamp& ts) const \npublic inline bool operator>(constTimestamp& ts) const \npublic inline bool operator>=(constTimestamp& ts) const \npublic inline bool operatorTimestamp& ts) const \npublic inline bool operatorTimestamp& ts) const \npublic inlineTimestampoperator+(TimeDiffd) const \npublic inlineTimestampoperator-(TimeDiffd) const \npublic inlineTimeDiffoperator-(constTimestamp& ts) const \npublic inlineTimestamp& operator+=(TimeDiffd) \npublic inlineTimestamp& operator-=(TimeDiffd) \npublic inline std::time_t epochTime() const \nReturns the timestamp expressed in time_t. time_t base time is midnight, January 1, 1970. Resolution is one second.\npublic inlineUtcTimeValutcTime() const \nReturns the timestamp expressed in UTC-based time. UTC base time is midnight, October 15, 1582. Resolution is 100 nanoseconds.\npublic inlineTimeValepochMicroseconds() const \nReturns the timestamp expressed in microseconds since the Unix epoch, midnight, January 1, 1970.\npublic inlineTimeDiffelapsed() const \nReturns the time elapsed since the time denoted by the timestamp. Equivalent to Timestamp() - *this.\npublic inline bool isElapsed(TimeDiffinterval) const \nReturns true iff the given interval has passed since the time denoted by the timestamp.\nclass scy::Timezone \nThis class provides information about the current timezone.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\n\n\n\n\nMembers\nclass scy::TZInfo \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  TZInfo()\n\n\n\npublic inline int timeZone()\n\n\n\npublic inline const char * name(bool dst)\n\n\n\n\nMembers\npublic inline  TZInfo() \npublic inline int timeZone() \npublic inline const char * name(bool dst) \nstruct scy::Bitwise \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic unsigned data\n\n\n\npublic inline  Bitwise(unsigned flags)\n\n\n\npublic inline virtual void reset()\n\n\n\npublic inline virtual void set(unsigned flag)\n\n\n\npublic inline virtual void add(unsigned flag)\n\n\n\npublic inline virtual void remove(unsigned flag)\n\n\n\npublic inline virtual void toggle(unsigned flag)\n\n\n\npublic inline virtual bool has(unsigned flag) const\n\n\n\n\nMembers\npublic unsigned data \npublic inline  Bitwise(unsigned flags) \npublic inline virtual void reset() \npublic inline virtual void set(unsigned flag) \npublic inline virtual void add(unsigned flag) \npublic inline virtual void remove(unsigned flag) \npublic inline virtual void toggle(unsigned flag) \npublic inline virtual bool has(unsigned flag) const \nstruct scy::DelegateBase \nThe abstract base for all instantiations of the Delegate template classes.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic void * data\n\n\n\npublic inline  DelegateBase(DataT data)\n\n\n\npublic inline  DelegateBase(constDelegateBase& r)\n\n\n\npublic inline virtual  ~DelegateBase()\n\n\n\n\nMembers\npublic void * data \npublic inline  DelegateBase(DataT data) \npublic inline  DelegateBase(constDelegateBase& r) \npublic inline virtual  ~DelegateBase() \nstruct scy::DelegateCallback \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\n\n\n\n\nMembers\nstruct scy::DelegateCallback \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual void emit(void * sender,void *,void *,void *,void *) const\n\n\n\n\nMembers\npublic inline virtual void emit(void * sender,void *,void *,void *,void *) const \nstruct scy::DelegateCallback \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual void emit(void * sender,void *,void *,void *,void *) const\n\n\n\n\nMembers\npublic inline virtual void emit(void * sender,void *,void *,void *,void *) const \nstruct scy::DelegateCallback \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual void emit(void *,P arg,void *,void *,void *) const\n\n\n\n\nMembers\npublic inline virtual void emit(void *,P arg,void *,void *,void *) const \nstruct scy::DelegateCallback \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual void emit(void * sender,P arg,void *,void *,void *) const\n\n\n\n\nMembers\npublic inline virtual void emit(void * sender,P arg,void *,void *,void *) const \nstruct scy::DelegateCallback \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual void emit(void *,P arg,P2 arg2,void *,void *) const\n\n\n\n\nMembers\npublic inline virtual void emit(void *,P arg,P2 arg2,void *,void *) const \nstruct scy::DelegateCallback \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual void emit(void * sender,P arg,P2 arg2,void *,void *) const\n\n\n\n\nMembers\npublic inline virtual void emit(void * sender,P arg,P2 arg2,void *,void *) const \nstruct scy::DelegateCallback \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual void emit(void *,P arg,P2 arg2,P3 arg3,void *) const\n\n\n\n\nMembers\npublic inline virtual void emit(void *,P arg,P2 arg2,P3 arg3,void *) const \nstruct scy::DelegateCallback \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual void emit(void * sender,P arg,P2 arg2,P3 arg3,void *) const\n\n\n\n\nMembers\npublic inline virtual void emit(void * sender,P arg,P2 arg2,P3 arg3,void *) const \nstruct scy::DelegateCallback \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual void emit(void *,P arg,P2 arg2,P3 arg3,P4 arg4) const\n\n\n\n\nMembers\npublic inline virtual void emit(void *,P arg,P2 arg2,P3 arg3,P4 arg4) const \nstruct scy::DelegateCallback \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual void emit(void * sender,P arg,P2 arg2,P3 arg3,P4 arg4) const\n\n\n\n\nMembers\npublic inline virtual void emit(void * sender,P arg,P2 arg2,P3 arg3,P4 arg4) const \nstruct scy::DelegateCallback \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual DefineCallbackFields void emit(void *,basic::Polymorphic& data,void *,void *,void *) const\n\n\n\n\nMembers\npublic inline virtual DefineCallbackFields void emit(void *,basic::Polymorphic& data,void *,void *,void *) const \nstruct scy::DelegateCallback \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual DefineCallbackFields void emit(void * sender,basic::Polymorphic& data,void *,void *,void *) const\n\n\n\n\nMembers\npublic inline virtual DefineCallbackFields void emit(void * sender,basic::Polymorphic& data,void *,void *,void *) const \nstruct scy::Error \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic int errorno\n\n\n\npublic std::string message\n\n\n\npublic std::exception_ptr exception\n\n\n\npublic inline  Error()\n\n\n\npublic inline  Error(const std::string & msg)\n\n\n\npublic inline  Error(const char * msg)\n\n\n\npublic inline bool any() const\n\n\n\npublic inline void reset()\n\n\n\npublic inline void rethrow()\n\n\n\n\nMembers\npublic int errorno \npublic std::string message \npublic std::exception_ptr exception \npublic inline  Error() \npublic inline  Error(const std::string & msg) \npublic inline  Error(const char * msg) \npublic inline bool any() const \npublic inline void reset() \npublic inline void rethrow() \nstruct scy::IPacketInfo \nAn abstract interface for packet sources to provide extra information about packets.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  IPacketInfo()\n\n\n\npublic inline virtual  ~IPacketInfo()\n\n\n\npublicIPacketInfo* clone() const\n\n\n\n\nMembers\npublic inline  IPacketInfo() \npublic inline virtual  ~IPacketInfo() \npublicIPacketInfo* clone() const \nstruct scy::LogStream \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic LogLevel level\n\n\n\npublic int line\n\n\n\npublic std::string realm\n\n\n\npublic std::string address\n\n\n\npublic std::ostringstream message\n\n\n\npublic std::time_t ts\n\n\n\npublicLogChannel* channel\n\n\n\npublic  LogStream(LogLevel level,const std::string & realm,int line,const void * ptr,const char * channel)\n\n\n\npublic  LogStream(LogLevel level,const std::string & realm,const std::string & address)\n\n\n\npublic  LogStream(constLogStream& that)\n\n\n\npublic  ~LogStream()\n\n\n\npublic inlineLogStream& operator\n\n\n\npublic inlineLogStream& operatorLogChannel* data)\n\n\n\npublic template  inlineLogStream& operator\n\n\n\npublic inlineLogStream& operator\n\n\n\n\nMembers\npublic LogLevel level \npublic int line \npublic std::string realm \npublic std::string address \npublic std::ostringstream message \npublic std::time_t ts \npublicLogChannel* channel \npublic  LogStream(LogLevel level,const std::string & realm,int line,const void * ptr,const char * channel) \npublic  LogStream(LogLevel level,const std::string & realm,const std::string & address) \npublic  LogStream(constLogStream& that) \npublic  ~LogStream() \npublic inlineLogStream& operator \npublic inlineLogStream& operatorLogChannel* data) \npublic template  inlineLogStream& operator \npublic inlineLogStream& operator \nHandle std::endl flags. This method flushes the log message and queues it for write. WARNING: After using std::endl to flush the message pointer should not be accessed.\nstruct scy::OptionParser \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::string exepath\n\n\n\npublic OptionMap args\n\n\n\npublic  OptionParser(int argc,char * argv,const char * delim)\n\n\n\npublic inline bool has(const char * key)\n\n\n\npublic inline std::string get(const char * key)\n\n\n\npublic template  inline NumericType get(const char * key)\n\n\n\n\nMembers\npublic std::string exepath \npublic OptionMap args \npublic  OptionParser(int argc,char * argv,const char * delim) \npublic inline bool has(const char * key) \npublic inline std::string get(const char * key) \npublic template  inline NumericType get(const char * key) \nstruct scy::PacketAdapterReference \nFor 0.8.x compatibility.\nProvides a reference to a PacketSignal instance.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicPacketStreamAdapter* ptr\n\n\n\npublicScopedPointer* deleter\n\n\n\npublic int order\n\n\n\npublic bool syncState\n\n\n\npublic inline  PacketAdapterReference(PacketStreamAdapter* ptr,ScopedPointer* deleter,int order,bool syncState)\n\n\n\npublic inline  ~PacketAdapterReference()\n\n\n\n\nMembers\npublicPacketStreamAdapter* ptr \npublicScopedPointer* deleter \npublic int order \npublic bool syncState \npublic inline  PacketAdapterReference(PacketStreamAdapter* ptr,ScopedPointer* deleter,int order,bool syncState) \npublic inline  ~PacketAdapterReference() \nstruct scy::PacketCreationStrategy \nstruct scy::PacketCreationStrategy\n  : public scy::IPacketCreationStrategy\nThis template class implements an adapter that sits between an SignalBase and an object receiving notifications from it.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  PacketCreationStrategy(int priority)\n\n\n\npublic inline virtual  ~PacketCreationStrategy()\n\n\n\npublic inline virtualIPacket* create(constConstBuffer& buffer,std::size_t & nread) const\n\n\n\npublic inline virtual int priority() const\n\n\n\nprotected int _priority\n\n\n\n\nMembers\npublic inline  PacketCreationStrategy(int priority) \npublic inline virtual  ~PacketCreationStrategy() \npublic inline virtualIPacket* create(constConstBuffer& buffer,std::size_t & nread) const \npublic inline virtual int priority() const \nprotected int _priority \nstruct scy::PacketStreamState \nstruct scy::PacketStreamState\n  : public scy::State\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual std::string str(unsigned int id) const\n\n\n\n\nMembers\npublic inline virtual std::string str(unsigned int id) const \nstruct scy::SharedLibrary \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline bool open(const std::string & path)\n\n\n\npublic inline void close()\n\n\n\npublic inline bool sym(const char * name,void ** ptr)\n\n\n\npublic inline void setError(const std::string & prefix)\n\n\n\npublic inline std::string error() const\n\n\n\nprotected uv_lib_t _lib\n\n\n\nprotected std::string _error\n\n\n\n\nMembers\npublic inline bool open(const std::string & path) \nOpens a shared library. The filename is in utf-8. Returns true on success and false on error. Call SharedLibrary::error() to get the error message.\npublic inline void close() \npublic inline bool sym(const char * name,void ** ptr) \nRetrieves a data pointer from a dynamic library. It is legal for a symbol to map to nullptr. Returns 0 on success and -1 if the symbol was not found.\npublic inline void setError(const std::string & prefix) \npublic inline std::string error() const \nprotected uv_lib_t _lib \nprotected std::string _error \nstruct scy::TransactionState \nstruct scy::TransactionState\n  : public scy::State\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual std::string str(unsigned int id) const\n\n\n\n\nMembers\npublic inline virtual std::string str(unsigned int id) const \nnamespace scy::async \nClasses for asynchronous programming.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::async::Flag\n\n\n\nclassscy::async::Runnable\n\n\n\nclassscy::async::Runner\n\n\n\nclassscy::async::Sendable\n\n\n\nclassscy::async::Startable\n\n\n\n\nclass scy::async::Flag \nA concurrent flag which can be used to request task cancellation.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  Flag()\n\n\n\npublic inline bool get() const\n\n\n\npublic inline void set(bool flag)\n\n\n\n\nMembers\npublic inline  Flag() \npublic inline bool get() const \npublic inline void set(bool flag) \nclass scy::async::Runnable \nA generic interface for classes that can be run and cancelled.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  Runnable()\n\n\n\npublic inline virtual  ~Runnable()\n\n\n\npublic void run()\nThe run method will be called by the async context.\n\n\npublic inline virtual void cancel(bool flag)\n\n\n\npublic inline virtual bool cancelled() const\nTrue when the task has been cancelled.\n\n\n\nMembers\npublic inline  Runnable() \npublic inline virtual  ~Runnable() \npublic void run() \nThe run method will be called by the async context.\npublic inline virtual void cancel(bool flag) \nCancel the current task. The run() method should return ASAP.\npublic inline virtual bool cancelled() const \nTrue when the task has been cancelled.\nclass scy::async::Runner \nRunner is a virtual interface for implementing asynchronous objects such as threads and futures.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Runner()\n\n\n\npublic virtual  ~Runner()\n\n\n\npublic virtual void start(async::Runnable& target)\n\n\n\npublic virtual void start(std::function target)\n\n\n\npublic virtual void start(std::function target,void * arg)\nStarts the thread with the given target.\n\n\npublic bool started() const\nReturns true if the async context has been started.\n\n\npublic bool running() const\nReturns true if the async context is currently running.\n\n\npublic void cancel()\nCancels the async context.\n\n\npublic bool cancelled() const\n\n\n\npublic bool repeating() const\nReturns true if the Runner is operating in repeating mode.\n\n\npublic uv_thread_t tid() const\nReturn the native thread ID.\n\n\npublic void setRepeating(bool flag)\n\n\n\npublic bool async() const\n\n\n\nprotected Context::ptr pContext\nShared pointer to the internal Runner::Context.\n\n\nprotected void startAsync()\nStart the context from the control thread.\n\n\nprotected  Runner(constRunner&)\n\n\n\nprotectedRunner& operator=(constRunner&)\n\n\n\n\nMembers\npublic  Runner() \npublic virtual  ~Runner() \npublic virtual void start(async::Runnable& target) \npublic virtual void start(std::function target) \npublic virtual void start(std::function target,void * arg) \nStarts the thread with the given target.\npublic bool started() const \nReturns true if the async context has been started.\npublic bool running() const \nReturns true if the async context is currently running.\npublic void cancel() \nCancels the async context.\npublic bool cancelled() const \nTrue when the task has been cancelled. It is up to the implementation to return at the earliest possible time.\npublic bool repeating() const \nReturns true if the Runner is operating in repeating mode.\npublic uv_thread_t tid() const \nReturn the native thread ID.\npublic void setRepeating(bool flag) \nThis setting means the implementation should call the target function repeatedly until cancelled. The importance of this method to normalize the functionality of threadded and event loop driven Runner models.\npublic bool async() const \nReturns true if the implementation is thread-based, or false if it belongs to an event loop.\nprotected Context::ptr pContext \nShared pointer to the internal Runner::Context.\nprotected void startAsync() \nStart the context from the control thread.\nprotected  Runner(constRunner&) \nprotectedRunner& operator=(constRunner&) \nclass scy::async::Sendable \nA generic interface for classes that can be sent and cancelled.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic bool send()\n\n\n\npublic inline virtual void cancel()\n\n\n\n\nMembers\npublic bool send() \npublic inline virtual void cancel() \nclass scy::async::Startable \nA generic interface for a classes that can be started and stopped.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic void start()\n\n\n\npublic void stop()\n\n\n\n\nMembers\npublic void start() \npublic void stop() \nnamespace scy::base64 \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nstructscy::base64::Decoder\n\n\n\nstructscy::base64::Encoder\n\n\n\n\nstruct scy::base64::Decoder \nstruct scy::base64::Decoder\n  : public scy::basic::Decoder\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic internal::decodestate _state\n\n\n\npublic int _buffersize\n\n\n\npublic inline  Decoder(int buffersize)\n\n\n\npublic inline int decode(char value_in)\n\n\n\npublic inline virtual std::size_t decode(const char * inbuf,std::size_t nread,char * outbuf)\n\n\n\npublic inline void decode(std::istream & istrm,std::ostream & ostrm)\n\n\n\n\nMembers\npublic internal::decodestate _state \npublic int _buffersize \npublic inline  Decoder(int buffersize) \npublic inline int decode(char value_in) \npublic inline virtual std::size_t decode(const char * inbuf,std::size_t nread,char * outbuf) \npublic inline void decode(std::istream & istrm,std::ostream & ostrm) \nstruct scy::base64::Encoder \nstruct scy::base64::Encoder\n  : public scy::basic::Encoder\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic internal::encodestate _state\n\n\n\npublic int _buffersize\n\n\n\npublic inline  Encoder(int buffersize)\n\n\n\npublic inline void encode(std::istream & istrm,std::ostream & ostrm)\n\n\n\npublic inline void encode(const std::string & in,std::string & out)\n\n\n\npublic inline virtual std::size_t encode(const char * inbuf,std::size_t nread,char * outbuf)\n\n\n\npublic inline virtual std::size_t finalize(char * outbuf)\n\n\n\npublic inline void setLineLength(int lineLength)\n\n\n\n\nMembers\npublic internal::encodestate _state \npublic int _buffersize \npublic inline  Encoder(int buffersize) \npublic inline void encode(std::istream & istrm,std::ostream & ostrm) \npublic inline void encode(const std::string & in,std::string & out) \npublic inline virtual std::size_t encode(const char * inbuf,std::size_t nread,char * outbuf) \npublic inline virtual std::size_t finalize(char * outbuf) \npublic inline void setLineLength(int lineLength) \nnamespace scy::hex \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nstructscy::hex::Decoder\n\n\n\nstructscy::hex::Encoder\n\n\n\n\nstruct scy::hex::Decoder \nstruct scy::hex::Decoder\n  : public scy::basic::Decoder\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic char lastbyte\n\n\n\npublic inline  Decoder()\n\n\n\npublic inline virtual  ~Decoder()\n\n\n\npublic inline virtual std::size_t decode(const char * inbuf,std::size_t nread,char * outbuf)\n\n\n\npublic inline virtual std::size_t finalize(char *)\n\n\n\npublic inline bool readnext(const char * inbuf,std::size_t nread,std::size_t & rpos,char & c)\n\n\n\npublic inline int nybble(const int n)\n\n\n\npublic inline bool iswspace(const char c)\n\n\n\n\nMembers\npublic char lastbyte \npublic inline  Decoder() \npublic inline virtual  ~Decoder() \npublic inline virtual std::size_t decode(const char * inbuf,std::size_t nread,char * outbuf) \npublic inline virtual std::size_t finalize(char *) \npublic inline bool readnext(const char * inbuf,std::size_t nread,std::size_t & rpos,char & c) \npublic inline int nybble(const int n) \npublic inline bool iswspace(const char c) \nstruct scy::hex::Encoder \nstruct scy::hex::Encoder\n  : public scy::basic::Encoder\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic int _linePos\n\n\n\npublic int _lineLength\n\n\n\npublic int _uppercase\n\n\n\npublic inline  Encoder()\n\n\n\npublic inline virtual std::size_t encode(const char * inbuf,std::size_t nread,char * outbuf)\n\n\n\npublic inline virtual std::size_t finalize(char *)\n\n\n\npublic inline void setUppercase(bool flag)\n\n\n\npublic inline void setLineLength(int lineLength)\n\n\n\n\nMembers\npublic int _linePos \npublic int _lineLength \npublic int _uppercase \npublic inline  Encoder() \npublic inline virtual std::size_t encode(const char * inbuf,std::size_t nread,char * outbuf) \npublic inline virtual std::size_t finalize(char *) \npublic inline void setUppercase(bool flag) \npublic inline void setLineLength(int lineLength) \nnamespace scy::basic \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::basic::Decoder\n\n\n\nclassscy::basic::Encoder\n\n\n\nclassscy::basic::Polymorphic\nA base module class for C++ callback polymorphism.\n\n\n\nclass scy::basic::Decoder \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  Decoder()\n\n\n\npublic inline virtual  ~Decoder()\n\n\n\npublic std::size_t decode(const char * inbuf,std::size_t nread,char * outbuf)\n\n\n\npublic inline virtual std::size_t finalize(char *)\n\n\n\n\nMembers\npublic inline  Decoder() \npublic inline virtual  ~Decoder() \npublic std::size_t decode(const char * inbuf,std::size_t nread,char * outbuf) \npublic inline virtual std::size_t finalize(char *) \nclass scy::basic::Encoder \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  Encoder()\n\n\n\npublic inline virtual  ~Encoder()\n\n\n\npublic std::size_t encode(const char * inbuf,std::size_t nread,char * outbuf)\n\n\n\npublic inline virtual std::size_t finalize(char *)\n\n\n\n\nMembers\npublic inline  Encoder() \npublic inline virtual  ~Encoder() \npublic std::size_t encode(const char * inbuf,std::size_t nread,char * outbuf) \npublic inline virtual std::size_t finalize(char *) \nclass scy::basic::Polymorphic \nA base module class for C++ callback polymorphism.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual  ~Polymorphic()\n\n\n\npublic template  inline bool is()\n\n\n\npublic template  inline T * as(bool whiny)\n\n\n\npublicscy::LogStream& log(const char * level) const\n\n\n\npublic const char * className() const\n\n\n\n\nMembers\npublic inline virtual  ~Polymorphic() \npublic template  inline bool is() \npublic template  inline T * as(bool whiny) \npublicscy::LogStream& log(const char * level) const \npublic const char * className() const \nnamespace scy::ipc \nClasses for inter-process communication.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::ipc::Queue\n\n\n\nclassscy::ipc::SyncQueue\n\n\n\nstructscy::ipc::Action\nDefault action type for executing synchronized callbacks.\n\n\n\nclass scy::ipc::Queue \nIPC queue is for safely passing templated actions between threads and processes.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  Queue()\n\n\n\npublic inline virtual  ~Queue()\n\n\n\npublic inline virtual void push(TAction * action)\n\n\n\npublic inline virtual TAction * pop()\n\n\n\npublic inline virtual void runSync()\n\n\n\npublic inline virtual void close()\n\n\n\npublic inline virtual void post()\n\n\n\npublic inline void waitForSync()\n\n\n\nprotected mutableMutex_mutex\n\n\n\nprotected std::deque _actions\n\n\n\n\nMembers\npublic inline  Queue() \npublic inline virtual  ~Queue() \npublic inline virtual void push(TAction * action) \npublic inline virtual TAction * pop() \npublic inline virtual void runSync() \npublic inline virtual void close() \npublic inline virtual void post() \npublic inline void waitForSync() \nprotected mutableMutex_mutex \nprotected std::deque _actions \nclass scy::ipc::SyncQueue \nclass scy::ipc::SyncQueue\n  : public scy::ipc::Queue\nIPC synchronization queue is for passing templated actions between threads and the event loop we are synchronizing with.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  SyncQueue(uv::Loop * loop)\n\n\n\npublic inline virtual  ~SyncQueue()\n\n\n\npublic inline virtual void close()\n\n\n\npublic inline virtual void post()\n\n\n\npublic inline virtualSyncContext& sync()\n\n\n\nprotectedSyncContext_sync\n\n\n\n\nMembers\npublic inline  SyncQueue(uv::Loop * loop) \npublic inline virtual  ~SyncQueue() \npublic inline virtual void close() \npublic inline virtual void post() \npublic inline virtualSyncContext& sync() \nprotectedSyncContext_sync \nstruct scy::ipc::Action \nDefault action type for executing synchronized callbacks.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic callback_t target\n\n\n\npublic void * arg\n\n\n\npublic std::string data\n\n\n\npublic inline  Action(callback_t target,void * arg,const std::string & data)\n\n\n\n\nMembers\npublic callback_t target \npublic void * arg \npublic std::string data \npublic inline  Action(callback_t target,void * arg,const std::string & data) \nnamespace scy::deleter \nDeleter Functors.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nstructscy::deleter::Array\n\n\n\nstructscy::deleter::Deferred\n\n\n\nstructscy::deleter::Dispose\n\n\n\n\nstruct scy::deleter::Array \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline void operator()(T * ptr)\n\n\n\n\nMembers\npublic inline void operator()(T * ptr) \nstruct scy::deleter::Deferred \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline void operator()(T * ptr)\n\n\n\n\nMembers\npublic inline void operator()(T * ptr) \nstruct scy::deleter::Dispose \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline void operator()(T * ptr)\n\n\n\n\nMembers\npublic inline void operator()(T * ptr) \nnamespace scy::test \nModern unit testing classes.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::test::FunctionTest\n\n\n\nclassscy::test::Test\n\n\n\nclassscy::test::TestRunner\n\n\n\n\nclass scy::test::FunctionTest \nclass scy::test::FunctionTest\n  : public scy::test::Test\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic voidfunc_t target\n\n\n\npublic inline  FunctionTest(voidfunc_t target,const std::string & name)\n\n\n\nprotected inline virtual  ~FunctionTest()\n\n\n\nprotected inline virtual void run()\nCalled by the TestRunner to run the test.\n\n\n\nMembers\npublic voidfunc_t target \npublic inline  FunctionTest(voidfunc_t target,const std::string & name) \nprotected inline virtual  ~FunctionTest() \nprotected inline virtual void run() \nCalled by the TestRunner to run the test.\nclass scy::test::Test \nThis class is for implementing any kind async test that is compatible with a TestRunner.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::string name\nThe name of the test.\n\n\npublic error_list_t errors\nA list of test errors.\n\n\npublic double duration\nThe test run duration for benchmarking.\n\n\npublic  Test(const std::string & name)\n\n\n\npublic virtual  ~Test()\nShould remain protected.\n\n\npublic void run()\nCalled by the TestRunner to run the test.\n\n\npublic bool passed()\nReturn true when the test passed without errors.\n\n\nprotected  Test(constTest& test)\n\n\n\nprotectedTest& operator=(Testconst &)\n\n\n\n\nMembers\npublic std::string name \nThe name of the test.\npublic error_list_t errors \nA list of test errors.\npublic double duration \nThe test run duration for benchmarking.\npublic  Test(const std::string & name) \npublic virtual  ~Test() \nShould remain protected.\npublic void run() \nCalled by the TestRunner to run the test.\npublic bool passed() \nReturn true when the test passed without errors.\nprotected  Test(constTest& test) \nprotectedTest& operator=(Testconst &) \nclass scy::test::TestRunner \nThe TestRunner is a queue in charge of running one or many tests.\nThe TestRunner continually loops through each test in the test list calling the test's run() method.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  TestRunner()\n\n\n\npublic virtual  ~TestRunner()\n\n\n\npublic void add(Test* test)\nAdd a test to the runner.\n\n\npublicTest* get(const std::string & name) const\n\n\n\npublic void run()\nCalled by the async context to run the next test.\n\n\npublic void clear()\nDestroy and clears all managed tests.\n\n\npublicTest* current() const\nReturn the currently active Test or nullptr.\n\n\npublic test_list_t tests() const\nReturn the list of tests.\n\n\npublic error_map_t errors() const\nReturn a map of tests and errors.\n\n\npublic bool passed() const\nReturn true if all tests passed.\n\n\nprotected mutableMutex_mutex\n\n\n\nprotected std::listTest* > _tests\n\n\n\nprotectedTest* _current\n\n\n\n\nMembers\npublic  TestRunner() \npublic virtual  ~TestRunner() \npublic void add(Test* test) \nAdd a test to the runner.\npublicTest* get(const std::string & name) const \nReturn a pointer to the test matching the given name, or nullptr if no matching test exists.\npublic void run() \nCalled by the async context to run the next test.\npublic void clear() \nDestroy and clears all managed tests.\npublicTest* current() const \nReturn the currently active Test or nullptr.\npublic test_list_t tests() const \nReturn the list of tests.\npublic error_map_t errors() const \nReturn a map of tests and errors.\npublic bool passed() const \nReturn true if all tests passed.\nprotected mutableMutex_mutex \nprotected std::listTest* > _tests \nprotectedTest* _current \nnamespace scy::util \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nstructscy::util::Version\n\n\n\n\nstruct scy::util::Version \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic int major\n\n\n\npublic int minor\n\n\n\npublic int revision\n\n\n\npublic int build\n\n\n\npublic inline  Version(const std::string & version)\n\n\n\npublic inline bool operatorVersion& other)\n\n\n\npublic inline bool operator==(constVersion& other)\n\n\n\n\nMembers\npublic int major \npublic int minor \npublic int revision \npublic int build \npublic inline  Version(const std::string & version) \npublic inline bool operatorVersion& other) \npublic inline bool operator==(constVersion& other) \n"},"api-crypto.html":{"url":"api-crypto.html","title":"Crypto","keywords":"","body":"Module  crypto\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy::crypto\n\n\n\nstructCRYPTO_dynlock_value\n\n\n\n\nnamespace scy::crypto \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::crypto::Cipher\n\n\n\nclassscy::crypto::Hash\n\n\n\nclassscy::crypto::X509Certificate\nThis class represents a X509 Certificate.\n\n\n\nclass scy::crypto::Cipher \nProvides symmetric algorithms for encryption and decryption. The algorithms that are available depend on the particular version of OpenSSL that is installed.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Cipher(const std::string & name)\n\n\n\npublic  Cipher(const std::string & name,constByteVec& key,constByteVec& iv)\n\n\n\npublic  Cipher(const std::string & name,const std::string & passphrase,const std::string & salt,int iterationCount)\n\n\n\npublic  ~Cipher()\nDestroys the Cipher.\n\n\npublic void initEncryptor()\nInitializes the Cipher for encryption.\n\n\npublic void initDecryptor()\nInitializes the Cipher for decryption.\n\n\npublic int update(const unsigned char * input,int inputLength,unsigned char * output,int outputLength)\n\n\n\npublic template  inline int update(const I & input,O & output)\nAlias for update() which accepts a range of buffer types.\n\n\npublic int final(unsigned char * output,int length)\n\n\n\npublic template  inline int final(O & output)\nAlias for final() which accepts a range of buffer types.\n\n\npublic int encrypt(const unsigned char * inbuf,std::size_t inlen,unsigned char * outbuf,std::size_t outlen,Encodingencoding)\n\n\n\npublic template  inline int encrypt(const I & input,O & output,Encodingencoding)\nAlias for encrypt() which accepts a range of buffer types.\n\n\npublic virtual std::string encryptString(const std::string & str,Encodingencoding)\nEncrypts a string and encodes it using the given encoding.\n\n\npublic virtual std::string decryptString(const std::string & str,Encodingencoding)\nDecrypts a string that is encoded with the given encoding.\n\n\npublic virtual void encryptStream(std::istream & source,std::ostream & sink,Encodingencoding)\nEncrypts an input stream and encodes it using the given encoding.\n\n\npublic virtual void decryptStream(std::istream & source,std::ostream & sink,Encodingencoding)\nDecrypts an input stream that is encoded with the given encoding.\n\n\npublic template  inline void setKey(const T & key)\nSets the key for the Cipher.\n\n\npublic template  inline void setIV(const T & iv)\nSets the initialization vector (IV) for the Cipher.\n\n\npublic int setPadding(int padding)\n\n\n\npublic constByteVec& getKey() const\nReturns the key for the Cipher.\n\n\npublic constByteVec& getIV() const\nReturns the initialization vector (IV) for the Cipher.\n\n\npublic const std::string & name() const\nReturns the name of the Cipher.\n\n\npublic int blockSize() const\nReturns the block size of the Cipher.\n\n\npublic int keySize() const\nReturns the key size of the Cipher.\n\n\npublic int ivSize() const\nReturns the IV size of the Cipher.\n\n\npublic const EVP_CIPHER * cipher()\nReturns the cipher object.\n\n\nprotected bool _initialized\n\n\n\nprotected bool _encrypt\n\n\n\nprotected const EVP_CIPHER * _cipher\n\n\n\nprotected std::string _name\n\n\n\nprotected EVP_CIPHER_CTX _ctx\n\n\n\nprotectedByteVec_key\n\n\n\nprotectedByteVec_iv\n\n\n\nprotected  Cipher()\n\n\n\nprotected  Cipher(constCipher&)\n\n\n\nprotectedCipher& operator=(constCipher&)\n\n\n\nprotected void generateKey(const std::string & passphrase,const std::string & salt,int iterationCount)\nGenerates and sets the key and IV from a password and optional salt string.\n\n\nprotected void setRandomKey()\nGenerates and sets key from random data.\n\n\nprotected void setRandomIV()\nGenerates and sets IV from random data.\n\n\nprotected void initialize(bool encrypt)\nInitializes the Cipher using the given direction.\n\n\n\nMembers\npublic  Cipher(const std::string & name) \nCreates a new Cipher object. Auto initializes the key and initialization vector with random bytes.\npublic  Cipher(const std::string & name,constByteVec& key,constByteVec& iv) \nCreates a new Cipher object, using the given cipher name, key and initialization vector.\npublic  Cipher(const std::string & name,const std::string & passphrase,const std::string & salt,int iterationCount) \nCreates a new Cipher object, using the given cipher name, passphrase, salt value and iteration count.\npublic  ~Cipher() \nDestroys the Cipher.\npublic void initEncryptor() \nInitializes the Cipher for encryption.\npublic void initDecryptor() \nInitializes the Cipher for decryption.\npublic int update(const unsigned char * input,int inputLength,unsigned char * output,int outputLength) \nEncrypts data in a streaming fashion. Hand consecutive blocks of data to the update method in order to encrypt it. Returns the encrypted data chunk. When done, the output of final() should be additionally added to the result.\npublic template  inline int update(const I & input,O & output) \nAlias for update() which accepts a range of buffer types.\npublic int final(unsigned char * output,int length) \nReturns the remaining data held in the cipher object. Further calls to update() or final() will return garbage.\nSee EVP_CipherFinal_ex for further information.\npublic template  inline int final(O & output) \nAlias for final() which accepts a range of buffer types.\npublic int encrypt(const unsigned char * inbuf,std::size_t inlen,unsigned char * outbuf,std::size_t outlen,Encodingencoding) \nEncrypts a buffer and encode it using the given encoding. This method performs the encryption, and calls final() internally.\npublic template  inline int encrypt(const I & input,O & output,Encodingencoding) \nAlias for encrypt() which accepts a range of buffer types.\npublic virtual std::string encryptString(const std::string & str,Encodingencoding) \nEncrypts a string and encodes it using the given encoding.\npublic virtual std::string decryptString(const std::string & str,Encodingencoding) \nDecrypts a string that is encoded with the given encoding.\npublic virtual void encryptStream(std::istream & source,std::ostream & sink,Encodingencoding) \nEncrypts an input stream and encodes it using the given encoding.\npublic virtual void decryptStream(std::istream & source,std::ostream & sink,Encodingencoding) \nDecrypts an input stream that is encoded with the given encoding.\npublic template  inline void setKey(const T & key) \nSets the key for the Cipher.\npublic template  inline void setIV(const T & iv) \nSets the initialization vector (IV) for the Cipher.\npublic int setPadding(int padding) \nEnables or disables padding. By default encryption operations are padded using standard block padding and the padding is checked and removed when decrypting. If the pad parameter is zero then no padding is performed, the total amount of data encrypted or decrypted must then be a multiple of the block size or an error will occur.\nSee EVP_CIPHER_CTX_set_padding for further information.\npublic constByteVec& getKey() const \nReturns the key for the Cipher.\npublic constByteVec& getIV() const \nReturns the initialization vector (IV) for the Cipher.\npublic const std::string & name() const \nReturns the name of the Cipher.\npublic int blockSize() const \nReturns the block size of the Cipher.\npublic int keySize() const \nReturns the key size of the Cipher.\npublic int ivSize() const \nReturns the IV size of the Cipher.\npublic const EVP_CIPHER * cipher() \nReturns the cipher object.\nprotected bool _initialized \nprotected bool _encrypt \nprotected const EVP_CIPHER * _cipher \nprotected std::string _name \nprotected EVP_CIPHER_CTX _ctx \nprotectedByteVec_key \nprotectedByteVec_iv \nprotected  Cipher() \nprotected  Cipher(constCipher&) \nprotectedCipher& operator=(constCipher&) \nprotected void generateKey(const std::string & passphrase,const std::string & salt,int iterationCount) \nGenerates and sets the key and IV from a password and optional salt string.\nprotected void setRandomKey() \nGenerates and sets key from random data.\nprotected void setRandomIV() \nGenerates and sets IV from random data.\nprotected void initialize(bool encrypt) \nInitializes the Cipher using the given direction.\nclass scy::crypto::Hash \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Hash(const std::string & algorithm)\n\n\n\npublic  ~Hash()\n\n\n\npublic void update(char data)\n\n\n\npublic void update(const std::string & data)\n\n\n\npublic void update(const void * data,unsigned length)\n\n\n\npublic constByteVec& digest()\nFinish up the digest operation and return the result.\n\n\npublic std::string digestStr()\nFinish up the digest operation and return the result as a string.\n\n\npublic void reset()\nResets the engine and digest state ready for the next computation.\n\n\npublic const std::string & algorithm(void) const\nReturns the hash algorithm being used.\n\n\nprotected EVP_MD_CTX _ctx\n\n\n\nprotected const EVP_MD * _md\n\n\n\nprotectedcrypto::ByteVec_digest\n\n\n\nprotected std::string _algorithm\n\n\n\nprotectedHash& operator=(Hashconst &)\n\n\n\n\nMembers\npublic  Hash(const std::string & algorithm) \npublic  ~Hash() \npublic void update(char data) \npublic void update(const std::string & data) \npublic void update(const void * data,unsigned length) \nThis function may (and normally will) be called many times for large blocks of data.\npublic constByteVec& digest() \nFinish up the digest operation and return the result.\npublic std::string digestStr() \nFinish up the digest operation and return the result as a string.\npublic void reset() \nResets the engine and digest state ready for the next computation.\npublic const std::string & algorithm(void) const \nReturns the hash algorithm being used.\nprotected EVP_MD_CTX _ctx \nprotected const EVP_MD * _md \nprotectedcrypto::ByteVec_digest \nprotected std::string _algorithm \nprotectedHash& operator=(Hashconst &) \nclass scy::crypto::X509Certificate \nThis class represents a X509 Certificate.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  explicit X509Certificate(const char * data,std::size_t length)\n\n\n\npublic  explicit X509Certificate(const std::string & path)\n\n\n\npublic  explicit X509Certificate(X509 * pCert)\n\n\n\npublic  X509Certificate(X509 * pCert,bool shared)\n\n\n\npublic  X509Certificate(constX509Certificate& cert)\nCreates the certificate by copying another one.\n\n\npublicX509Certificate& operator=(constX509Certificate& cert)\nAssigns a certificate.\n\n\npublic void swap(X509Certificate& cert)\nExchanges the certificate with another one.\n\n\npublic  ~X509Certificate()\nDestroys the X509Certificate.\n\n\npublic const std::string & issuerName() const\nReturns the certificate issuer's distinguished name.\n\n\npublic std::string issuerName(NIDnid) const\n\n\n\npublic const std::string & subjectName() const\nReturns the certificate subject's distinguished name.\n\n\npublic std::string subjectName(NIDnid) const\n\n\n\npublic std::string commonName() const\n\n\n\npublic void extractNames(std::string & commonName,std::set & domainNames) const\n\n\n\npublicDateTimevalidFrom() const\nReturns the date and time the certificate is valid from.\n\n\npublicDateTimeexpiresOn() const\nReturns the date and time the certificate expires.\n\n\npublic void save(std::ostream & stream) const\n\n\n\npublic void save(const std::string & path) const\n\n\n\npublic bool issuedBy(constX509Certificate& issuerCertificate) const\n\n\n\npublic const X509 * certificate() const\nReturns the underlying OpenSSL certificate.\n\n\nprotected void load(const char * data,std::size_t length)\n\n\n\nprotected void load(const std::string & path)\n\n\n\nprotected void init()\nExtracts issuer and subject name from the certificate.\n\n\n\nMembers\npublic  explicit X509Certificate(const char * data,std::size_t length) \nCreates the X509Certificate object by reading a certificate in PEM format from the given buffer.\npublic  explicit X509Certificate(const std::string & path) \nCreates the X509Certificate object by reading a certificate in PEM format from a file.\npublic  explicit X509Certificate(X509 * pCert) \nCreates the X509Certificate from an existing OpenSSL certificate. Ownership is taken of the certificate.\npublic  X509Certificate(X509 * pCert,bool shared) \nCreates the X509Certificate from an existing OpenSSL certificate. Ownership is taken of the certificate. If shared is true, the certificate's reference count is incremented.\npublic  X509Certificate(constX509Certificate& cert) \nCreates the certificate by copying another one.\npublicX509Certificate& operator=(constX509Certificate& cert) \nAssigns a certificate.\npublic void swap(X509Certificate& cert) \nExchanges the certificate with another one.\npublic  ~X509Certificate() \nDestroys the X509Certificate.\npublic const std::string & issuerName() const \nReturns the certificate issuer's distinguished name.\npublic std::string issuerName(NIDnid) const \nExtracts the information specified by the given NID (name identifier) from the certificate issuer's distinguished name.\npublic const std::string & subjectName() const \nReturns the certificate subject's distinguished name.\npublic std::string subjectName(NIDnid) const \nExtracts the information specified by the given NID (name identifier) from the certificate subject's distinguished name.\npublic std::string commonName() const \nReturns the common name stored in the certificate subject's distinguished name.\npublic void extractNames(std::string & commonName,std::set & domainNames) const \nExtracts the common name and the alias domain names from the certificate.\npublicDateTimevalidFrom() const \nReturns the date and time the certificate is valid from.\npublicDateTimeexpiresOn() const \nReturns the date and time the certificate expires.\npublic void save(std::ostream & stream) const \nWrites the certificate to the given stream. The certificate is written in PEM format.\npublic void save(const std::string & path) const \nWrites the certificate to the file given by path. The certificate is written in PEM format.\npublic bool issuedBy(constX509Certificate& issuerCertificate) const \nChecks whether the certificate has been issued by the issuer given by issuerCertificate. This can be used to validate a certificate chain.\nVerifies if the certificate has been signed with the issuer's private key, using the public key from the issuer certificate.\nReturns true if verification against the issuer certificate was successful, false otherwise.\npublic const X509 * certificate() const \nReturns the underlying OpenSSL certificate.\nprotected void load(const char * data,std::size_t length) \nLoads the certificate from the given buffer. The certificate must be in PEM format.\nprotected void load(const std::string & path) \nLoads the certificate from the given file. The certificate must be in PEM format.\nprotected void init() \nExtracts issuer and subject name from the certificate.\nstruct CRYPTO_dynlock_value \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicscy::Mutex_mutex\n\n\n\n\nMembers\npublicscy::Mutex_mutex \n"},"api-http.html":{"url":"api-http.html","title":"HTTP","keywords":"","body":"Module  http\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy::http\n\n\n\nnamespacescy::http::ws\n\n\n\n\nnamespace scy::http \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::http::Authenticator\n\n\n\nclassscy::http::BadRequestHandler\n\n\n\nclassscy::http::BasicAuthenticator\n\n\n\nclassscy::http::ChunkedAdapter\n\n\n\nclassscy::http::Client\n\n\n\nclassscy::http::ClientAdapter\n\n\n\nclassscy::http::ClientConnection\n\n\n\nclassscy::http::Connection\n\n\n\nclassscy::http::ConnectionAdapter\nDefault HTTP socket adapter for reading and writing HTTP messages.\n\n\nclassscy::http::Cookie\n\n\n\nclassscy::http::FilePart\nAn implementation of FilePart for plain files.\n\n\nclassscy::http::FormPart\nAn implementation of FormPart.\n\n\nclassscy::http::FormWriter\n\n\n\nclassscy::http::Message\n\n\n\nclassscy::http::MultipartAdapter\n\n\n\nclassscy::http::Parser\n\n\n\nclassscy::http::ParserObserver\n\n\n\nclassscy::http::ProgressSignal\n\n\n\nclassscy::http::Request\n\n\n\nclassscy::http::Response\nThis class encapsulates an HTTP response message.\n\n\nclassscy::http::Server\n\n\n\nclassscy::http::ServerAdapter\n\n\n\nclassscy::http::ServerConnection\n\n\n\nclassscy::http::ServerResponder\n\n\n\nclassscy::http::ServerResponderFactory\n\n\n\nclassscy::http::StringPart\nAn implementation of StringPart for plain files.\n\n\nclassscy::http::URL\n\n\n\nstructscy::http::Method\nHTTP request methods.\n\n\nstructscy::http::ParserError\n\n\n\n\nclass scy::http::Authenticator \nThis is a utility class for working with HTTP authentication (basic or digest) in http::Request objects.\nNote: Do not forget to read the entire response stream from the 401 response before sending the authenticated request, otherwise there may be problems if a persistent connection is used.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Authenticator()\nCreates an empty Authenticator object.\n\n\npublic  Authenticator(const std::string & username,const std::string & password)\nCreates an Authenticator object with the given username and password.\n\n\npublic  ~Authenticator()\nDestroys the Authenticator.\n\n\npublic void fromUserInfo(const std::string & userInfo)\n\n\n\npublic void fromURI(consthttp::URL& uri)\n\n\n\npublic inline void setUsername(const std::string & username)\nSets the username.\n\n\npublic inline const std::string & username() const\nReturns the username.\n\n\npublic inline void setPassword(const std::string & password)\nSets the password.\n\n\npublic inline const std::string & password() const\nReturns the password.\n\n\npublic void authenticate(http::Request& request,consthttp::Response& response)\n\n\n\npublic void updateAuthInfo(http::Request& request)\n\n\n\npublic void proxyAuthenticate(http::Request& request,consthttp::Response& response)\n\n\n\npublic void updateProxyAuthInfo(http::Request& request)\n\n\n\n\nMembers\npublic  Authenticator() \nCreates an empty Authenticator object.\npublic  Authenticator(const std::string & username,const std::string & password) \nCreates an Authenticator object with the given username and password.\npublic  ~Authenticator() \nDestroys the Authenticator.\npublic void fromUserInfo(const std::string & userInfo) \nParses username:password std::string and sets username and password of the credentials object. Throws SyntaxException on invalid user information.\npublic void fromURI(consthttp::URL& uri) \nExtracts username and password from the given URI and sets username and password of the credentials object. Does nothing if URI has no user info part.\npublic inline void setUsername(const std::string & username) \nSets the username.\npublic inline const std::string & username() const \nReturns the username.\npublic inline void setPassword(const std::string & password) \nSets the password.\npublic inline const std::string & password() const \nReturns the password.\npublic void authenticate(http::Request& request,consthttp::Response& response) \nInspects WWW-Authenticate header of the response, initializes the internal state (in case of digest authentication) and adds required information to the given http::Request.\nDoes nothing if there is no WWW-Authenticate header in the http::Response.\npublic void updateAuthInfo(http::Request& request) \nUpdates internal state (in case of digest authentication) and replaces authentication information in the request accordingly.\npublic void proxyAuthenticate(http::Request& request,consthttp::Response& response) \nInspects Proxy-Authenticate header of the response, initializes the internal state (in case of digest authentication) and adds required information to the given http::Request.\nDoes nothing if there is no Proxy-Authenticate header in the http::Response.\npublic void updateProxyAuthInfo(http::Request& request) \nUpdates internal state (in case of digest authentication) and replaces proxy authentication information in the request accordingly.\nclass scy::http::BadRequestHandler \nclass scy::http::BadRequestHandler\n  : public scy::http::ServerResponder\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  BadRequestHandler(ServerConnection& connection)\n\n\n\npublic inline virtual void onRequest(Request&,Response& response)\n\n\n\n\nMembers\npublic inline  BadRequestHandler(ServerConnection& connection) \npublic inline virtual void onRequest(Request&,Response& response) \nclass scy::http::BasicAuthenticator \nThis is a utility class for working with HTTP Basic Authentication in http::Request objects.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  BasicAuthenticator()\nCreates an empty BasicAuthenticator object.\n\n\npublic  BasicAuthenticator(const std::string & username,const std::string & password)\nCreates a BasicAuthenticator object with the given username and password.\n\n\npublic  explicit BasicAuthenticator(consthttp::Request& request)\n\n\n\npublic  explicit BasicAuthenticator(const std::string & authInfo)\n\n\n\npublic  ~BasicAuthenticator()\nDestroys the BasicAuthenticator.\n\n\npublic void setUsername(const std::string & username)\nSets the username.\n\n\npublic const std::string & username() const\nReturns the username.\n\n\npublic void setPassword(const std::string & password)\nSets the password.\n\n\npublic const std::string & password() const\nReturns the password.\n\n\npublic void authenticate(http::Request& request) const\nAdds authentication information to the given http::Request.\n\n\npublic void proxyAuthenticate(http::Request& request) const\nAdds proxy authentication information to the given http::Request.\n\n\nprotected void parseAuthInfo(const std::string & authInfo)\n\n\n\n\nMembers\npublic  BasicAuthenticator() \nCreates an empty BasicAuthenticator object.\npublic  BasicAuthenticator(const std::string & username,const std::string & password) \nCreates a BasicAuthenticator object with the given username and password.\npublic  explicit BasicAuthenticator(consthttp::Request& request) \nCreates a BasicAuthenticator object with the authentication information from the given request.\nThrows a NotAuthenticatedException if the request does not contain basic authentication information.\npublic  explicit BasicAuthenticator(const std::string & authInfo) \nCreates a BasicAuthenticator object with the authentication information in the given std::string. The authentication information can be extracted from a http::Request object by calling http::Request::getCredentials()).\npublic  ~BasicAuthenticator() \nDestroys the BasicAuthenticator.\npublic void setUsername(const std::string & username) \nSets the username.\npublic const std::string & username() const \nReturns the username.\npublic void setPassword(const std::string & password) \nSets the password.\npublic const std::string & password() const \nReturns the password.\npublic void authenticate(http::Request& request) const \nAdds authentication information to the given http::Request.\npublic void proxyAuthenticate(http::Request& request) const \nAdds proxy authentication information to the given http::Request.\nprotected void parseAuthInfo(const std::string & authInfo) \nExtracts username and password from Basic authentication info by base64-decoding authInfo and splitting the resulting std::string at the ':' delimiter.\nclass scy::http::ChunkedAdapter \nclass scy::http::ChunkedAdapter\n  : public scy::PacketProcessor\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicConnection* connection\n\n\n\npublic std::string contentType\n\n\n\npublic std::string frameSeparator\n\n\n\npublic bool initial\n\n\n\npublic bool nocopy\n\n\n\npublicPacketSignalemitter\n\n\n\npublic inline  ChunkedAdapter(Connection* connection,const std::string & frameSeparator,bool nocopy)\n\n\n\npublic inline  ChunkedAdapter(const std::string & contentType,const std::string & frameSeparator,bool nocopy)\n\n\n\npublic inline virtual  ~ChunkedAdapter()\n\n\n\npublic inline virtual void emitHeader()\n\n\n\npublic inline virtual void process(IPacket& packet)\n\n\n\n\nMembers\npublicConnection* connection \npublic std::string contentType \npublic std::string frameSeparator \npublic bool initial \npublic bool nocopy \npublicPacketSignalemitter \npublic inline  ChunkedAdapter(Connection* connection,const std::string & frameSeparator,bool nocopy) \npublic inline  ChunkedAdapter(const std::string & contentType,const std::string & frameSeparator,bool nocopy) \npublic inline virtual  ~ChunkedAdapter() \npublic inline virtual void emitHeader() \nSets HTTP headers for the initial response. This method must not include the final carriage return.\npublic inline virtual void process(IPacket& packet) \nThis method performs processing on the given packet and emits the result.\nNote: If packet processing is async (the packet is not in the current thread scope) then packet data must be copied. Copied data can be freed directly aFter the async call to emit() the outgoing packet.\nclass scy::http::Client \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicNullSignalShutdown\n\n\n\npublic  Client()\n\n\n\npublic virtual  ~Client()\n\n\n\npublic void shutdown()\nShutdown the Client and close all connections.\n\n\npublic template  inline ClientConnection::Ptr createConnectionT(constURL& url,uv::Loop * loop)\n\n\n\npublic inline ClientConnection::Ptr createConnection(constURL& url,uv::Loop * loop)\n\n\n\npublic virtual void addConnection(ClientConnection::Ptr conn)\n\n\n\npublic virtual void removeConnection(ClientConnection* conn)\n\n\n\nprotected ClientConnectionPtrVec _connections\n\n\n\nprotected void onConnectionClose(void *)\n\n\n\n\nMembers\npublicNullSignalShutdown \npublic  Client() \npublic virtual  ~Client() \npublic void shutdown() \nShutdown the Client and close all connections.\npublic template  inline ClientConnection::Ptr createConnectionT(constURL& url,uv::Loop * loop) \npublic inline ClientConnection::Ptr createConnection(constURL& url,uv::Loop * loop) \npublic virtual void addConnection(ClientConnection::Ptr conn) \npublic virtual void removeConnection(ClientConnection* conn) \nprotected ClientConnectionPtrVec _connections \nprotected void onConnectionClose(void *) \nclass scy::http::ClientAdapter \nclass scy::http::ClientAdapter\n  : public scy::http::ConnectionAdapter\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  ClientAdapter(ClientConnection& connection)\n\n\n\n\nMembers\npublic inline  ClientAdapter(ClientConnection& connection) \nclass scy::http::ClientConnection \nclass scy::http::ClientConnection\n  : public scy::http::Connection\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic void * opaque\nOptional unmanaged client data pointer.\n\n\npublicNullSignalConnect\nSignal when the client socket is connected and data can flow.\n\n\npublic`SignalResponse`& > Headers\nSignal when the response HTTP header has been received.\n\n\npublic`SignalMutableBuffer`& > Payload\nSignal when raw data is received.\n\n\npublic`SignalResponse`& > Complete\nSignal when the HTTP transaction is complete.\n\n\npublic  ClientConnection(constURL& url,const net::Socket::Ptr & socket)\nCreate a standalone connection with the given host.\n\n\npublic virtual  ~ClientConnection()\n\n\n\npublic virtual void send()\n\n\n\npublic virtual void send(http::Request& req)\n\n\n\npublic virtual int send(const char * data,std::size_t len,int flags)\nSend raw data to the peer.\n\n\npublic virtual void close()\nForcefully closes the HTTP connection.\n\n\npublic virtual void setReadStream(std::ostream * os)\n\n\n\npublic template  inline StreamT & readStream()\nReturn the cast read stream pointer or nullptr.\n\n\npublic virtual void onHeaders()\n\n\n\npublic virtual void onPayload(constMutableBuffer& buffer)\n\n\n\npublic virtual void onMessage()\n\n\n\npublic virtual void onComplete()\n\n\n\npublic virtual void onClose()\n\n\n\nprotectedURL_url\n\n\n\nprotected std::vector _outgoingBuffer\n\n\n\nprotected bool _connect\n\n\n\nprotected bool _active\n\n\n\nprotected bool _complete\n\n\n\nprotected virtual void connect()\n\n\n\nprotectedhttp::Client* client()\n\n\n\nprotected virtualhttp::Message* incomingHeader()\n\n\n\nprotected virtualhttp::Message* outgoingHeader()\n\n\n\nprotected virtual void onSocketConnect()\n\n\n\nprotected void onHostResolved(void *,constnet::DNSResult& result)\n\n\n\n\nMembers\npublic void * opaque \nOptional unmanaged client data pointer.\npublicNullSignalConnect \nSignal when the client socket is connected and data can flow.\npublic`SignalResponse`& > Headers \nSignal when the response HTTP header has been received.\npublic`SignalMutableBuffer`& > Payload \nSignal when raw data is received.\npublic`SignalResponse`& > Complete \nSignal when the HTTP transaction is complete.\npublic  ClientConnection(constURL& url,const net::Socket::Ptr & socket) \nCreate a standalone connection with the given host.\npublic virtual  ~ClientConnection() \npublic virtual void send() \nSend the HTTP request.\nCalls connect() internally if the socket is not already connecting or connected. The actual request will be sent when the socket is connected.\npublic virtual void send(http::Request& req) \nSend the given HTTP request. The given request will overwrite the internal HTTP request object.\nCalls connect() internally if the socket is not already connecting or connected. The actual request will be sent when the socket is connected.\npublic virtual int send(const char * data,std::size_t len,int flags) \nSend raw data to the peer.\npublic virtual void close() \nForcefully closes the HTTP connection.\npublic virtual void setReadStream(std::ostream * os) \nSet the output stream for writing response data to. The stream pointer is managed internally, and will be freed along with the connection.\npublic template  inline StreamT & readStream() \nReturn the cast read stream pointer or nullptr.\npublic virtual void onHeaders() \nReturn true if the server did not give us a proper response within the allotted time. bool expired() const;\npublic virtual void onPayload(constMutableBuffer& buffer) \npublic virtual void onMessage() \npublic virtual void onComplete() \npublic virtual void onClose() \nprotectedURL_url \nprotected std::vector _outgoingBuffer \nprotected bool _connect \nprotected bool _active \nprotected bool _complete \nprotected virtual void connect() \nConnects to the server endpoint. All sent data is buffered until the connection is made.\nprotectedhttp::Client* client() \nprotected virtualhttp::Message* incomingHeader() \nprotected virtualhttp::Message* outgoingHeader() \nprotected virtual void onSocketConnect() \nThese virtual methods can be overridden as necessary to intercept socket events before they hit the application.\nprotected void onHostResolved(void *,constnet::DNSResult& result) \nclass scy::http::Connection \nclass scy::http::Connection\n  : public scy::net::SocketAdapter\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicPacketStreamOutgoing\n\n\n\npublicPacketStreamIncoming\n\n\n\npublicProgressSignalIncomingProgress\nFired on download progress.\n\n\npublicProgressSignalOutgoingProgress\nFired on upload progress.\n\n\npublic  Connection(const net::Socket::Ptr & socket)\n\n\n\npublic virtual  ~Connection()\n\n\n\npublic virtual int send(const char * data,std::size_t len,int flags)\nSend raw data to the peer.\n\n\npublic virtual int sendHeader()\nSend the outdoing HTTP header.\n\n\npublic virtual void close()\n\n\n\npublic bool closed() const\nReturn true if the connection is closed.\n\n\npublicscy::Errorerror() const\nReturn the error object if any.\n\n\npublic void onHeaders()\n\n\n\npublic inline virtual void onPayload(constMutableBuffer&)\n\n\n\npublic void onMessage()\n\n\n\npublic virtual void onClose()\n\n\n\npublic bool shouldSendHeader() const\n\n\n\npublic void shouldSendHeader(bool flag)\nSet true to prevent auto-sending HTTP headers.\n\n\npublic void replaceAdapter(net::SocketAdapter* adapter)\n\n\n\npublic net::Socket::Ptr & socket()\nReturn the underlying socket pointer.\n\n\npublicRequest& request()\nThe HTTP request headers.\n\n\npublicResponse& response()\nThe HTTP response headers.\n\n\npublichttp::Message* incomingHeader()\n\n\n\npublichttp::Message* outgoingHeader()\n\n\n\nprotected net::Socket::Ptr _socket\n\n\n\nprotectedSocketAdapter* _adapter\n\n\n\nprotectedRequest_request\n\n\n\nprotectedResponse_response\n\n\n\nprotectedscy::Error_error\n\n\n\nprotected bool _closed\n\n\n\nprotected bool _shouldSendHeader\n\n\n\nprotected virtual void onSocketConnect()\n\n\n\nprotected virtual void onSocketRecv(constMutableBuffer& buffer,constnet::Address& peerAddress)\n\n\n\nprotected virtual void onSocketError(constscy::Error& error)\n\n\n\nprotected virtual void onSocketClose()\n\n\n\nprotected virtual void setError(constscy::Error& err)\nSet the internal error.\n\n\n\nMembers\npublicPacketStreamOutgoing \nThe Outgoing stream is responsible for packetizing raw application data into the agreed upon HTTP format and sending it to the peer.\npublicPacketStreamIncoming \nThe Incoming stream emits incoming HTTP packets for processing by the application.\nThis is useful for example when writing incoming data to a file.\npublicProgressSignalIncomingProgress \nFired on download progress.\npublicProgressSignalOutgoingProgress \nFired on upload progress.\npublic  Connection(const net::Socket::Ptr & socket) \npublic virtual  ~Connection() \npublic virtual int send(const char * data,std::size_t len,int flags) \nSend raw data to the peer.\npublic virtual int sendHeader() \nSend the outdoing HTTP header.\npublic virtual void close() \nClose the connection and schedule the object for deferred deletion.\npublic bool closed() const \nReturn true if the connection is closed.\npublicscy::Errorerror() const \nReturn the error object if any.\npublic void onHeaders() \nReturn true if the server did not give us a proper response within the allotted time. bool expired() const;\npublic inline virtual void onPayload(constMutableBuffer&) \npublic void onMessage() \npublic virtual void onClose() \npublic bool shouldSendHeader() const \npublic void shouldSendHeader(bool flag) \nSet true to prevent auto-sending HTTP headers.\npublic void replaceAdapter(net::SocketAdapter* adapter) \nAssign the new ConnectionAdapter and setup the chain The flow is: Connection  ConnectionAdapter  Socket\npublic net::Socket::Ptr & socket() \nReturn the underlying socket pointer.\npublicRequest& request() \nThe HTTP request headers.\npublicResponse& response() \nThe HTTP response headers.\npublichttp::Message* incomingHeader() \npublichttp::Message* outgoingHeader() \nprotected net::Socket::Ptr _socket \nprotectedSocketAdapter* _adapter \nprotectedRequest_request \nprotectedResponse_response \nprotectedscy::Error_error \nprotected bool _closed \nprotected bool _shouldSendHeader \nprotected virtual void onSocketConnect() \nThese virtual methods can be overridden as necessary to intercept socket events before they hit the application.\nprotected virtual void onSocketRecv(constMutableBuffer& buffer,constnet::Address& peerAddress) \nprotected virtual void onSocketError(constscy::Error& error) \nprotected virtual void onSocketClose() \nprotected virtual void setError(constscy::Error& err) \nSet the internal error.\nclass scy::http::ConnectionAdapter \nclass scy::http::ConnectionAdapter\n  : public scy::http::ParserObserver\n  : public scy::net::SocketAdapter\nDefault HTTP socket adapter for reading and writing HTTP messages.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  ConnectionAdapter(Connection& connection,http_parser_type type)\n\n\n\npublic virtual  ~ConnectionAdapter()\n\n\n\npublic virtual int send(const char * data,std::size_t len,int flags)\n\n\n\npublicParser& parser()\n\n\n\npublicConnection& connection()\n\n\n\nprotectedConnection& _connection\n\n\n\nprotectedParser_parser\n\n\n\nprotected virtual void onSocketRecv(constMutableBuffer& buffer,constnet::Address& peerAddress)\n\n\n\nprotected virtual void onParserHeader(const std::string & name,const std::string & value)\n\n\n\nprotected virtual void onParserHeadersEnd()\n\n\n\nprotected virtual void onParserChunk(const char * buf,std::size_t len)\n\n\n\nprotected virtual void onParserError(constParserError& err)\n\n\n\nprotected virtual void onParserEnd()\n\n\n\n\nMembers\npublic  ConnectionAdapter(Connection& connection,http_parser_type type) \npublic virtual  ~ConnectionAdapter() \npublic virtual int send(const char * data,std::size_t len,int flags) \nSends the given data buffer to the connected peer. Returns the number of bytes sent or -1 on error. No exception will be thrown. For TCP sockets the given peer address must match the connected peer address.\npublicParser& parser() \npublicConnection& connection() \nprotectedConnection& _connection \nprotectedParser_parser \nprotected virtual void onSocketRecv(constMutableBuffer& buffer,constnet::Address& peerAddress) \nprotected virtual void onParserHeader(const std::string & name,const std::string & value) \nprotected virtual void onParserHeadersEnd() \nprotected virtual void onParserChunk(const char * buf,std::size_t len) \nprotected virtual void onParserError(constParserError& err) \nprotected virtual void onParserEnd() \nclass scy::http::Cookie \nThis class represents a HTTP Cookie.\nA cookie is a small amount of information sent by a Web server to a Web browser, saved by the browser, and later sent back to the server. A cookie's value can uniquely identify a client, so cookies are commonly used for session management.\nA cookie has a name, a single value, and optional attributes such as a comment, path and domain qualifiers, a maximum age, and a version number.\nThis class supports both the Version 0 (by Netscape) and Version 1 (by RFC 2109) cookie specifications. By default, cookies are created using Version 0 to ensure the best interoperability.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Cookie()\nCreates an empty Cookie.\n\n\npublic  explicit Cookie(const std::string & name)\n\n\n\npublic  explicit Cookie(constNVCollection& nvc)\nCreates a cookie from the given NVCollection.\n\n\npublic  Cookie(const std::string & name,const std::string & value)\n\n\n\npublic  Cookie(constCookie& cookie)\nCreates the Cookie by copying another one.\n\n\npublic  ~Cookie()\nDestroys the Cookie.\n\n\npublicCookie& operator=(constCookie& cookie)\nAssigns a cookie.\n\n\npublic void setVersion(int version)\n\n\n\npublic inline int getVersion() const\n\n\n\npublic void setName(const std::string & name)\nSets the name of the cookie.\n\n\npublic inline const std::string & getName() const\nReturns the name of the cookie.\n\n\npublic void setValue(const std::string & value)\n\n\n\npublic inline const std::string & getValue() const\nReturns the value of the cookie.\n\n\npublic void setComment(const std::string & comment)\n\n\n\npublic inline const std::string & getComment() const\nReturns the comment for the cookie.\n\n\npublic void setDomain(const std::string & domain)\nSets the domain for the cookie.\n\n\npublic inline const std::string & getDomain() const\nReturns the domain for the cookie.\n\n\npublic void setPath(const std::string & path)\nSets the path for the cookie.\n\n\npublic inline const std::string & getPath() const\nReturns the path for the cookie.\n\n\npublic void setSecure(bool secure)\n\n\n\npublic inline bool getSecure() const\n\n\n\npublic void setMaxAge(int maxAge)\n\n\n\npublic inline int getMaxAge() const\n\n\n\npublic void setHttpOnly(bool flag)\nSets the HttpOnly flag for the cookie.\n\n\npublic inline bool getHttpOnly() const\nReturns true if the cookie's HttpOnly flag is set.\n\n\npublic std::string toString() const\n\n\n\n\nMembers\npublic  Cookie() \nCreates an empty Cookie.\npublic  explicit Cookie(const std::string & name) \nCreates a cookie with the given name. The cookie never expires.\npublic  explicit Cookie(constNVCollection& nvc) \nCreates a cookie from the given NVCollection.\npublic  Cookie(const std::string & name,const std::string & value) \nCreates a cookie with the given name and value. The cookie never expires.\nNote: If value contains whitespace or non-alphanumeric characters, the value should be escaped by calling escape() before passing it to the constructor.\npublic  Cookie(constCookie& cookie) \nCreates the Cookie by copying another one.\npublic  ~Cookie() \nDestroys the Cookie.\npublicCookie& operator=(constCookie& cookie) \nAssigns a cookie.\npublic void setVersion(int version) \nSets the version of the cookie.\nVersion must be either 0 (denoting a Netscape cookie) or 1 (denoting a RFC 2109 cookie).\npublic inline int getVersion() const \nReturns the version of the cookie, which is either 0 or 1.\npublic void setName(const std::string & name) \nSets the name of the cookie.\npublic inline const std::string & getName() const \nReturns the name of the cookie.\npublic void setValue(const std::string & value) \nSets the value of the cookie.\nAccording to the cookie specification, the size of the value should not exceed 4 Kbytes.\nNote: If value contains whitespace or non-alphanumeric characters, the value should be escaped by calling escape() prior to passing it to setName().\npublic inline const std::string & getValue() const \nReturns the value of the cookie.\npublic void setComment(const std::string & comment) \nSets the comment for the cookie.\nComments are only supported for version 1 cookies.\npublic inline const std::string & getComment() const \nReturns the comment for the cookie.\npublic void setDomain(const std::string & domain) \nSets the domain for the cookie.\npublic inline const std::string & getDomain() const \nReturns the domain for the cookie.\npublic void setPath(const std::string & path) \nSets the path for the cookie.\npublic inline const std::string & getPath() const \nReturns the path for the cookie.\npublic void setSecure(bool secure) \nSets the value of the secure flag for the cookie.\npublic inline bool getSecure() const \nReturns the value of the secure flag for the cookie.\npublic void setMaxAge(int maxAge) \nSets the maximum age in seconds for the cookie.\nA value of -1 causes the cookie to never expire on the client.\nA value of 0 deletes the cookie on the client.\npublic inline int getMaxAge() const \nReturns the maximum age in seconds for the cookie.\npublic void setHttpOnly(bool flag) \nSets the HttpOnly flag for the cookie.\npublic inline bool getHttpOnly() const \nReturns true if the cookie's HttpOnly flag is set.\npublic std::string toString() const \nReturns a std::string representation of the cookie, suitable for use in a Set-Cookie header.\nclass scy::http::FilePart \nclass scy::http::FilePart\n  : public scy::http::FormPart\nAn implementation of FilePart for plain files.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  FilePart(const std::string & path)\n\n\n\npublic  FilePart(const std::string & path,const std::string & contentType)\n\n\n\npublic  FilePart(const std::string & path,const std::string & filename,const std::string & contentType)\n\n\n\npublic virtual  ~FilePart()\nDestroys the FilePart.\n\n\npublic virtual void open()\n\n\n\npublic virtual void reset()\nReset the internal state and write position to the start.\n\n\npublic virtual bool writeChunk(FormWriter& writer)\n\n\n\npublic virtual void write(FormWriter& writer)\nWrites the form data to the given HTTP client connection.\n\n\npublic virtual void write(std::ostream & ostr)\nWrites the form data to the given output stream.\n\n\npublic const std::string & filename() const\nReturns the filename portion of the path.\n\n\npublic std::ifstream & stream()\nReturns the file input stream.\n\n\npublic virtual std::uint64_t length() const\nReturns the length of the current part.\n\n\nprotected std::string _path\n\n\n\nprotected std::string _filename\n\n\n\nprotected std::ifstream _istr\n\n\n\nprotected std::uint64_t _fileSize\n\n\n\n\nMembers\npublic  FilePart(const std::string & path) \nCreates the FilePart for the given path.\nThe MIME type is set to application/octet-stream.\nThrows an FileException if the file cannot be opened.\npublic  FilePart(const std::string & path,const std::string & contentType) \nCreates the FilePart for the given path and MIME type.\nThrows an FileException if the file cannot be opened.\npublic  FilePart(const std::string & path,const std::string & filename,const std::string & contentType) \nCreates the FilePart for the given path and MIME type. The given filename is used as part filename (see filename()) only.\nThrows an FileException if the file cannot be opened.\npublic virtual  ~FilePart() \nDestroys the FilePart.\npublic virtual void open() \nOpens the file.\nThrows an FileException if the file cannot be opened.\npublic virtual void reset() \nReset the internal state and write position to the start.\npublic virtual bool writeChunk(FormWriter& writer) \nWrites a form data chunk to the given HTTP client connection. Returns true if there is more data to be written.\npublic virtual void write(FormWriter& writer) \nWrites the form data to the given HTTP client connection.\npublic virtual void write(std::ostream & ostr) \nWrites the form data to the given output stream.\npublic const std::string & filename() const \nReturns the filename portion of the path.\npublic std::ifstream & stream() \nReturns the file input stream.\npublic virtual std::uint64_t length() const \nReturns the length of the current part.\nprotected std::string _path \nprotected std::string _filename \nprotected std::ifstream _istr \nprotected std::uint64_t _fileSize \nclass scy::http::FormPart \nAn implementation of FormPart.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  FormPart(const std::string & contentType)\nCreates the FormPart with the given MIME type.\n\n\npublic virtual  ~FormPart()\nDestroys the FormPart.\n\n\npublic virtual void reset()\nReset the internal state and write position to the start.\n\n\npublic bool writeChunk(FormWriter& writer)\n\n\n\npublic void write(FormWriter& writer)\nWrites the form data to the given HTTP client connection.\n\n\npublic void write(std::ostream & ostr)\nWrites the form data to the given output stream.\n\n\npublicNVCollection& headers()\n\n\n\npublic virtual bool initialWrite() const\nReturns true if this is the initial write.\n\n\npublic const std::string & contentType() const\nReturns the MIME type for this part or attachment.\n\n\npublic std::uint64_t length() const\nReturns the length of the current part.\n\n\nprotected std::string _contentType\n\n\n\nprotected std::uint64_t _length\n\n\n\nprotectedNVCollection_headers\n\n\n\nprotected bool _initialWrite\n\n\n\n\nMembers\npublic  FormPart(const std::string & contentType) \nCreates the FormPart with the given MIME type.\npublic virtual  ~FormPart() \nDestroys the FormPart.\npublic virtual void reset() \nReset the internal state and write position to the start.\npublic bool writeChunk(FormWriter& writer) \nWrites a form data chunk to the given HTTP client connection. Returns true if there is more data to be written.\npublic void write(FormWriter& writer) \nWrites the form data to the given HTTP client connection.\npublic void write(std::ostream & ostr) \nWrites the form data to the given output stream.\npublicNVCollection& headers() \nReturns a NVCollection containing additional header fields for the part.\npublic virtual bool initialWrite() const \nReturns true if this is the initial write.\npublic const std::string & contentType() const \nReturns the MIME type for this part or attachment.\npublic std::uint64_t length() const \nReturns the length of the current part.\nprotected std::string _contentType \nprotected std::uint64_t _length \nprotectedNVCollection_headers \nprotected bool _initialWrite \nclass scy::http::FormWriter \nclass scy::http::FormWriter\n  : public scy::NVCollection\n  : public scy::PacketStreamAdapter\n  : public scy::async::Startable\nFormWriter is a HTTP client connection adapter for writing HTML forms.\nThis class runs in its own thread so as not to block the event loop while uploading big files. Class members are not synchronized hence they should not be accessed while the form is sending, not that there would be any reason to do so.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicPacketSignalemitter\nThe outgoing packet emitter.\n\n\npublic virtual  ~FormWriter()\nDestroys the FormWriter.\n\n\npublic void addPart(const std::string & name,FormPart* part)\n\n\n\npublic virtual void start()\nStarts the sending thread.\n\n\npublic virtual void stop()\nStops the sending thread.\n\n\npublic bool complete() const\nReturns true if the request is complete.\n\n\npublic bool cancelled() const\nReturns true if the request is cancelled.\n\n\npublic void prepareSubmit()\n\n\n\npublic std::uint64_t calculateMultipartContentLength()\n\n\n\npublic void writeUrl(std::ostream & ostr)\n\n\n\npublic void writeMultipartChunk()\n\n\n\npublic void writeAsync()\n\n\n\npublic void setEncoding(const std::string & encoding)\n\n\n\npublic const std::string & encoding() const\nReturns the encoding used for posting the form.\n\n\npublic void setBoundary(const std::string & boundary)\n\n\n\npublic const std::string & boundary() const\nReturns the MIME boundary used for writing multipart form data.\n\n\npublicClientConnection& connection()\nThe associated HTTP client connection.\n\n\nprotectedClientConnection& _connection\n\n\n\nprotected async::Runner::Ptr _runner\n\n\n\nprotected std::string _encoding\n\n\n\nprotected std::string _boundary\n\n\n\nprotected PartQueue _parts\n\n\n\nprotected std::uint64_t _filesLength\n\n\n\nprotected int _writeState\n\n\n\nprotected bool _initial\n\n\n\nprotected bool _complete\n\n\n\nprotected  FormWriter(ClientConnection& conn,async::Runner::Ptr runner,const std::string & encoding)\n\n\n\nprotected  FormWriter(constFormWriter&)\n\n\n\nprotectedFormWriter& operator=(constFormWriter&)\n\n\n\nprotected void writePartHeader(constNVCollection& header,std::ostream & ostr)\n\n\n\nprotected void writeEnd(std::ostream & ostr)\nWrites the final boundary std::string to the output stream.\n\n\nprotected virtual void updateProgress(int nread)\n\n\n\n\nMembers\npublicPacketSignalemitter \nThe outgoing packet emitter.\npublic virtual  ~FormWriter() \nDestroys the FormWriter.\npublic void addPart(const std::string & name,FormPart* part) \nAdds an part/attachment (file upload) to the form.\nThe form takes ownership of the FilePart and deletes it when it is no longer needed. The part will only be sent if the encoding set for the form is \"multipart/form-data\"\npublic virtual void start() \nStarts the sending thread.\npublic virtual void stop() \nStops the sending thread.\npublic bool complete() const \nReturns true if the request is complete.\npublic bool cancelled() const \nReturns true if the request is cancelled.\npublic void prepareSubmit() \nPrepares the outgoing HTTP request object for submitting the form.\nIf the request method is GET, the encoded form is appended to the request URI as query std::string. Otherwise (the method is POST), the form's content type is set to the form's encoding. The form's parameters must be written to the request body separately, with a call to write. If the request's HTTP version is HTTP/1.0:\n\npersistent connections are disabled\n\n\nthe content transfer encoding is set to identity encoding Otherwise, if the request's HTTP version is HTTP/1.1:\n\n\nthe request's persistent connection state is left unchanged\n\n\nthe content transfer encoding is set to chunked\n\npublic std::uint64_t calculateMultipartContentLength() \nProcesses the entire stream and calculates the content length. Not used for chunked encoding.\npublic void writeUrl(std::ostream & ostr) \nWrites \"application/x-www-form-urlencoded\" encoded data to the client connection.\npublic void writeMultipartChunk() \nWrites the next multipart \"multipart/form-data\" encoded to the client connection. This method is non-blocking, // and is suitable for use with the event loop.\npublic void writeAsync() \nCalled asynchronously by the Runner to write the next message chunk. If \"multipart/form-data\" the next multipart chunk will be written. If \"application/x-www-form-urlencoded\" the entire message will be written. The complete flag will be set when the entire request has been written.\npublic void setEncoding(const std::string & encoding) \nSets the encoding used for posting the form.\nEncoding must be either \"application/x-www-form-urlencoded\" (which is the default) or \"multipart/form-data\".\npublic const std::string & encoding() const \nReturns the encoding used for posting the form.\npublic void setBoundary(const std::string & boundary) \nSets the boundary to use for separating form parts. Must be set before prepareSubmit() is called.\npublic const std::string & boundary() const \nReturns the MIME boundary used for writing multipart form data.\npublicClientConnection& connection() \nThe associated HTTP client connection.\nprotectedClientConnection& _connection \nprotected async::Runner::Ptr _runner \nprotected std::string _encoding \nprotected std::string _boundary \nprotected PartQueue _parts \nprotected std::uint64_t _filesLength \nprotected int _writeState \nprotected bool _initial \nprotected bool _complete \nprotected  FormWriter(ClientConnection& conn,async::Runner::Ptr runner,const std::string & encoding) \nCreates the FormWriter that uses the given encoding.\nEncoding must be either \"application/x-www-form-urlencoded\" (which is the default) or \"multipart/form-data\".\nprotected  FormWriter(constFormWriter&) \nprotectedFormWriter& operator=(constFormWriter&) \nprotected void writePartHeader(constNVCollection& header,std::ostream & ostr) \nWrites the message boundary std::string, followed by the message header to the output stream.\nprotected void writeEnd(std::ostream & ostr) \nWrites the final boundary std::string to the output stream.\nprotected virtual void updateProgress(int nread) \nUpdates the upload progress via the associated ClientConnection object.\nclass scy::http::Message \nclass scy::http::Message\n  : public scy::NVCollection\nThe base class for Request and Response.\nDefines the common properties of all HTTP messages. These are version, content length, content type and transfer encoding.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic void setVersion(const std::string & version)\nSets the HTTP version for this message.\n\n\npublic const std::string & getVersion() const\nReturns the HTTP version for this message.\n\n\npublic void setContentLength(std::uint64_t length)\n\n\n\npublic std::uint64_t getContentLength() const\n\n\n\npublic bool hasContentLength() const\nReturns true if a Content-Length header is present.\n\n\npublic void setTransferEncoding(const std::string & transferEncoding)\n\n\n\npublic const std::string & getTransferEncoding() const\n\n\n\npublic void setChunkedTransferEncoding(bool flag)\n\n\n\npublic bool isChunkedTransferEncoding() const\n\n\n\npublic void setContentType(const std::string & contentType)\n\n\n\npublic const std::string & getContentType() const\n\n\n\npublic void setKeepAlive(bool keepAlive)\n\n\n\npublic bool getKeepAlive() const\n\n\n\npublic virtual void write(std::ostream & ostr) const\n\n\n\nprotected  Message()\nCreates the Message with version HTTP/1.0.\n\n\nprotected  Message(const std::string & version)\n\n\n\nprotected virtual  ~Message()\nDestroys the Message.\n\n\n\nMembers\npublic void setVersion(const std::string & version) \nSets the HTTP version for this message.\npublic const std::string & getVersion() const \nReturns the HTTP version for this message.\npublic void setContentLength(std::uint64_t length) \nSets the Content-Length header.\nIf length is UNKNOWN_CONTENT_LENGTH, removes the Content-Length header.\npublic std::uint64_t getContentLength() const \nReturns the content length for this message, which may be UNKNOWN_CONTENT_LENGTH if no Content-Length header is present.\npublic bool hasContentLength() const \nReturns true if a Content-Length header is present.\npublic void setTransferEncoding(const std::string & transferEncoding) \nSets the transfer encoding for this message.\nThe value should be either IDENTITY_TRANSFER_CODING or CHUNKED_TRANSFER_CODING.\npublic const std::string & getTransferEncoding() const \nReturns the transfer encoding used for this message.\nNormally, this is the value of the Transfer-Encoding header field. If no such field is present, returns IDENTITY_TRANSFER_CODING.\npublic void setChunkedTransferEncoding(bool flag) \nIf flag is true, sets the Transfer-Encoding header to chunked. Otherwise, removes the Transfer-Encoding header.\npublic bool isChunkedTransferEncoding() const \nReturns true if the Transfer-Encoding header is set and its value is chunked.\npublic void setContentType(const std::string & contentType) \nSets the content type for this message.\nSpecify NO_CONTENT_TYPE to remove the Content-Type header.\npublic const std::string & getContentType() const \nReturns the content type for this message.\nIf no Content-Type header is present, returns UNKNOWN_CONTENT_TYPE.\npublic void setKeepAlive(bool keepAlive) \nSets the value of the Connection header field.\nThe value is set to \"Keep-Alive\" if keepAlive is true, or to \"Close\" otherwise.\npublic bool getKeepAlive() const \nReturns true if\n\nthe message has a Connection header field and its value is \"Keep-Alive\"\n\n\nthe message is a HTTP/1.1 message and not Connection header is set Returns false otherwise.\n\npublic virtual void write(std::ostream & ostr) const \nWrites the message header to the given output stream.\nThe format is one name-value pair per line, with name and value separated by a colon and lines delimited by a carriage return and a linefeed character. See RFC 2822 for details.\nprotected  Message() \nCreates the Message with version HTTP/1.0.\nprotected  Message(const std::string & version) \nCreates the Message and sets the version.\nprotected virtual  ~Message() \nDestroys the Message.\nclass scy::http::MultipartAdapter \nclass scy::http::MultipartAdapter\n  : public scy::PacketProcessor\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicConnection* connection\n\n\n\npublic std::string contentType\n\n\n\npublic bool isBase64\n\n\n\npublic bool initial\n\n\n\npublicPacketSignalemitter\n\n\n\npublic inline  MultipartAdapter(Connection* connection,bool base64)\n\n\n\npublic inline  MultipartAdapter(const std::string & contentType,bool base64)\n\n\n\npublic inline virtual  ~MultipartAdapter()\n\n\n\npublic inline virtual void emitHeader()\n\n\n\npublic inline virtual void emitChunkHeader()\nSets HTTP header for the current chunk.\n\n\npublic inline virtual void process(IPacket& packet)\n\n\n\n\nMembers\npublicConnection* connection \npublic std::string contentType \npublic bool isBase64 \npublic bool initial \npublicPacketSignalemitter \npublic inline  MultipartAdapter(Connection* connection,bool base64) \npublic inline  MultipartAdapter(const std::string & contentType,bool base64) \npublic inline virtual  ~MultipartAdapter() \npublic inline virtual void emitHeader() \npublic inline virtual void emitChunkHeader() \nSets HTTP header for the current chunk.\npublic inline virtual void process(IPacket& packet) \nThis method performs processing on the given packet and emits the result.\nNote: If packet processing is async (the packet is not in the current thread scope) then packet data must be copied. Copied data can be freed directly aFter the async call to emit() the outgoing packet.\nclass scy::http::Parser \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicParserObserver* _observer\n\n\n\npublichttp::Request* _request\n\n\n\npublichttp::Response* _response\n\n\n\npublichttp::Message* _message\n\n\n\npublic http_parser _parser\n\n\n\npublic http_parser_settings _settings\n\n\n\npublic bool _wasHeaderValue\n\n\n\npublic std::string _lastHeaderField\n\n\n\npublic std::string _lastHeaderValue\n\n\n\npublic bool _complete\n\n\n\npublicParserError* _error\n\n\n\npublic  Parser(http::Response* response)\n\n\n\npublic  Parser(http::Request* request)\n\n\n\npublic  Parser(http_parser_type type)\n\n\n\npublic  ~Parser()\n\n\n\npublic void init(http_parser_type type)\n\n\n\npublic std::size_t parse(const char * data,std::size_t length)\n\n\n\npublic void reset()\n\n\n\npublic bool complete() const\n\n\n\npublic void setParserError(const std::string & message)\n\n\n\npublic void setRequest(http::Request* request)\n\n\n\npublic void setResponse(http::Response* response)\n\n\n\npublic void setObserver(ParserObserver* observer)\n\n\n\npublichttp::Message* message()\n\n\n\npublicParserObserver* observer() const\n\n\n\npublic bool upgrade() const\n\n\n\npublic bool shouldKeepAlive() const\n\n\n\npublic void onURL(const std::string & value)\n\n\n\npublic void onHeader(const std::string & name,const std::string & value)\n\n\n\npublic void onHeadersEnd()\n\n\n\npublic void onBody(const char * buf,std::size_t len)\n\n\n\npublic void onMessageEnd()\n\n\n\npublic void onError(constParserError& err)\n\n\n\n\nMembers\npublicParserObserver* _observer \npublichttp::Request* _request \npublichttp::Response* _response \npublichttp::Message* _message \npublic http_parser _parser \npublic http_parser_settings _settings \npublic bool _wasHeaderValue \npublic std::string _lastHeaderField \npublic std::string _lastHeaderValue \npublic bool _complete \npublicParserError* _error \npublic  Parser(http::Response* response) \npublic  Parser(http::Request* request) \npublic  Parser(http_parser_type type) \npublic  ~Parser() \npublic void init(http_parser_type type) \npublic std::size_t parse(const char * data,std::size_t length) \npublic void reset() \nFeed data read from socket into the http_parser.\nReturns true of the message is complete, false if incomplete. Reset the parser state for a new message\npublic bool complete() const \nReturns true if parsing is complete, either in success or error.\npublic void setParserError(const std::string & message) \npublic void setRequest(http::Request* request) \npublic void setResponse(http::Response* response) \npublic void setObserver(ParserObserver* observer) \npublichttp::Message* message() \npublicParserObserver* observer() const \npublic bool upgrade() const \npublic bool shouldKeepAlive() const \npublic void onURL(const std::string & value) \npublic void onHeader(const std::string & name,const std::string & value) \npublic void onHeadersEnd() \npublic void onBody(const char * buf,std::size_t len) \npublic void onMessageEnd() \npublic void onError(constParserError& err) \nclass scy::http::ParserObserver \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic void onParserHeader(const std::string & name,const std::string & value)\n\n\n\npublic void onParserHeadersEnd()\n\n\n\npublic void onParserChunk(const char * data,std::size_t len)\n\n\n\npublic void onParserEnd()\n\n\n\npublic void onParserError(constParserError& err)\n\n\n\n\nMembers\npublic void onParserHeader(const std::string & name,const std::string & value) \npublic void onParserHeadersEnd() \npublic void onParserChunk(const char * data,std::size_t len) \npublic void onParserEnd() \npublic void onParserError(constParserError& err) \nclass scy::http::ProgressSignal \nclass scy::http::ProgressSignal\n  : public scy::Signal\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic void * sender\n\n\n\npublic std::uint64_t current\n\n\n\npublic std::uint64_t total\n\n\n\npublic inline  ProgressSignal()\n\n\n\npublic inline double progress() const\n\n\n\npublic inline void update(int nread)\n\n\n\n\nMembers\npublic void * sender \npublic std::uint64_t current \npublic std::uint64_t total \npublic inline  ProgressSignal() \npublic inline double progress() const \npublic inline void update(int nread) \nclass scy::http::Request \nclass scy::http::Request\n  : public scy::http::Message\nThis class encapsulates an HTTP request message.\nIn addition to the properties common to all HTTP messages, a HTTP request has a method (e.g. GET, HEAD, POST, etc.) and a request URI.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Request()\nCreates a GET / HTTP/1.1 HTTP request.\n\n\npublic  Request(const std::string & version)\n\n\n\npublic  Request(const std::string & method,const std::string & uri)\nCreates a HTTP/1.0 request with the given method and URI.\n\n\npublic  Request(const std::string & method,const std::string & uri,const std::string & version)\nCreates a HTTP request with the given method, URI and version.\n\n\npublic virtual  ~Request()\nDestroys the Request.\n\n\npublic void setMethod(const std::string & method)\nSets the method.\n\n\npublic const std::string & getMethod() const\nReturns the method.\n\n\npublic void setURI(const std::string & uri)\nSets the request URI.\n\n\npublic const std::string & getURI() const\nReturns the request URI.\n\n\npublic void setHost(const std::string & host)\nSets the value of the Host header field.\n\n\npublic void setHost(const std::string & host,std::uint16_t port)\n\n\n\npublic const std::string & getHost() const\n\n\n\npublic void setCookies(constNVCollection& cookies)\n\n\n\npublic void getCookies(NVCollection& cookies) const\n\n\n\npublic void getURIParameters(NVCollection& params) const\nReturns the request URI parameters.\n\n\npublic bool hasCredentials() const\n\n\n\npublic void getCredentials(std::string & scheme,std::string & authInfo) const\n\n\n\npublic void setCredentials(const std::string & scheme,const std::string & authInfo)\n\n\n\npublic bool hasProxyCredentials() const\n\n\n\npublic void getProxyCredentials(std::string & scheme,std::string & authInfo) const\n\n\n\npublic void setProxyCredentials(const std::string & scheme,const std::string & authInfo)\nSets the proxy authentication scheme and information for this request.\n\n\npublic virtual void write(std::ostream & ostr) const\nWrites the HTTP request to the given output stream.\n\n\nprotected void getCredentials(const std::string & header,std::string & scheme,std::string & authInfo) const\n\n\n\nprotected void setCredentials(const std::string & header,const std::string & scheme,const std::string & authInfo)\n\n\n\n\nMembers\npublic  Request() \nCreates a GET / HTTP/1.1 HTTP request.\npublic  Request(const std::string & version) \nCreates a GET / HTTP/1.x request with the given version (HTTP/1.0 or HTTP/1.1).\npublic  Request(const std::string & method,const std::string & uri) \nCreates a HTTP/1.0 request with the given method and URI.\npublic  Request(const std::string & method,const std::string & uri,const std::string & version) \nCreates a HTTP request with the given method, URI and version.\npublic virtual  ~Request() \nDestroys the Request.\npublic void setMethod(const std::string & method) \nSets the method.\npublic const std::string & getMethod() const \nReturns the method.\npublic void setURI(const std::string & uri) \nSets the request URI.\npublic const std::string & getURI() const \nReturns the request URI.\npublic void setHost(const std::string & host) \nSets the value of the Host header field.\npublic void setHost(const std::string & host,std::uint16_t port) \nSets the value of the Host header field.\nIf the given port number is a non-standard port number (other than 80 or 443), it is included in the Host header field.\npublic const std::string & getHost() const \nReturns the value of the Host header field.\nThrows a NotFoundException if the request does not have a Host header field.\npublic void setCookies(constNVCollection& cookies) \nAdds a Cookie header with the names and values from cookies.\npublic void getCookies(NVCollection& cookies) const \nFills cookies with the cookies extracted from the Cookie headers in the request.\npublic void getURIParameters(NVCollection& params) const \nReturns the request URI parameters.\npublic bool hasCredentials() const \nReturns true if the request contains authentication information in the form of an Authorization header.\npublic void getCredentials(std::string & scheme,std::string & authInfo) const \nReturns the authentication scheme and additional authentication information contained in this request.\nThrows a std::exception if no authentication information is contained in the request.\npublic void setCredentials(const std::string & scheme,const std::string & authInfo) \nSets the authentication scheme and information for this request.\npublic bool hasProxyCredentials() const \nReturns true if the request contains proxy authentication information in the form of an Proxy-Authorization header.\npublic void getProxyCredentials(std::string & scheme,std::string & authInfo) const \nReturns the proxy authentication scheme and additional proxy authentication information contained in this request.\nThrows a std::exception if no proxy authentication information is contained in the request.\npublic void setProxyCredentials(const std::string & scheme,const std::string & authInfo) \nSets the proxy authentication scheme and information for this request.\npublic virtual void write(std::ostream & ostr) const \nWrites the HTTP request to the given output stream.\nprotected void getCredentials(const std::string & header,std::string & scheme,std::string & authInfo) const \nReturns the authentication scheme and additional authentication information contained in the given header of request.\nThrows a NotAuthenticatedException if no authentication information is contained in the request.\nprotected void setCredentials(const std::string & header,const std::string & scheme,const std::string & authInfo) \nWrites the authentication scheme and information for this request to the given header.\nclass scy::http::Response \nclass scy::http::Response\n  : public scy::http::Message\nThis class encapsulates an HTTP response message.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Response()\ntypedef std::shared_ptr Ptr;\n\n\npublic  Response(StatusCodestatus,const std::string & reason)\nCreates the Response with the given status and reason phrase.\n\n\npublic  Response(const std::string & version,StatusCodestatus,const std::string & reason)\nCreates the Response with the given version, status and reason phrase.\n\n\npublic  Response(StatusCodestatus)\n\n\n\npublic  Response(const std::string & version,StatusCodestatus)\n\n\n\npublic virtual  ~Response()\nDestroys the Response.\n\n\npublic void setStatus(StatusCodestatus)\n\n\n\npublicStatusCodegetStatus() const\nReturns the HTTP status code.\n\n\npublic void setReason(const std::string & reason)\nSets the HTTP reason phrase.\n\n\npublic const std::string & getReason() const\nReturns the HTTP reason phrase.\n\n\npublic void setStatusAndReason(StatusCodestatus,const std::string & reason)\nSets the HTTP status code and reason phrase.\n\n\npublic void setDate(constTimestamp& dateTime)\nSets the Date header to the given date/time value.\n\n\npublicTimestampgetDate() const\nReturns the value of the Date header.\n\n\npublic void addCookie(constCookie& cookie)\n\n\n\npublic void getCookies(std::vectorCookie> & cookies) const\n\n\n\npublic virtual void write(std::ostream & ostr) const\nWrites the HTTP response headers to the given output stream.\n\n\npublic virtual bool success() const\nReturns true if the HTTP response code was successful (>= 400).\n\n\n\nMembers\npublic  Response() \ntypedef std::shared_ptr Ptr;\nCreates the Response with OK status.\npublic  Response(StatusCodestatus,const std::string & reason) \nCreates the Response with the given status and reason phrase.\npublic  Response(const std::string & version,StatusCodestatus,const std::string & reason) \nCreates the Response with the given version, status and reason phrase.\npublic  Response(StatusCodestatus) \nCreates the Response with the given status an an appropriate reason phrase.\npublic  Response(const std::string & version,StatusCodestatus) \nCreates the Response with the given version, status an an appropriate reason phrase.\npublic virtual  ~Response() \nDestroys the Response.\npublic void setStatus(StatusCodestatus) \nSets the HTTP status code.\nThe reason phrase is set according to the status code.\npublicStatusCodegetStatus() const \nReturns the HTTP status code.\npublic void setReason(const std::string & reason) \nSets the HTTP reason phrase.\npublic const std::string & getReason() const \nReturns the HTTP reason phrase.\npublic void setStatusAndReason(StatusCodestatus,const std::string & reason) \nSets the HTTP status code and reason phrase.\npublic void setDate(constTimestamp& dateTime) \nSets the Date header to the given date/time value.\npublicTimestampgetDate() const \nReturns the value of the Date header.\npublic void addCookie(constCookie& cookie) \nAdds the cookie to the response by adding a Set-Cookie header.\npublic void getCookies(std::vectorCookie> & cookies) const \nReturns a vector with all the cookies set in the response header.\nMay throw an exception in case of a malformed Set-Cookie header.\npublic virtual void write(std::ostream & ostr) const \nWrites the HTTP response headers to the given output stream.\npublic virtual bool success() const \nReturns true if the HTTP response code was successful (>= 400).\nclass scy::http::Server \nDISCLAIMER: This HTTP server is not standards compliant. It was created to be a fast (nocopy where possible) solution for streaming video to web browsers.\nTODO:\n\nSSL Server\n\n\nEnable responders (controllers?) to be instantiated via registered routes.\n\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic net::TCPSocket::Ptr socket\n\n\n\npublicServerResponderFactory* factory\n\n\n\npublic ServerConnectionList connections\n\n\n\npublicnet::Addressaddress\n\n\n\npublicNullSignalShutdown\n\n\n\npublic  Server(short port,ServerResponderFactory* factory)\n\n\n\npublic virtual  ~Server()\n\n\n\npublic void start()\n\n\n\npublic void shutdown()\n\n\n\npublic std::uint16_t port()\n\n\n\nprotected ServerConnection::Ptr createConnection(const net::Socket::Ptr & sock)\n\n\n\nprotectedServerResponder* createResponder(ServerConnection& conn)\n\n\n\nprotected virtual void addConnection(ServerConnection::Ptr conn)\n\n\n\nprotected virtual void removeConnection(ServerConnection* conn)\n\n\n\nprotected void onAccept(const net::TCPSocket::Ptr & sock)\n\n\n\nprotected void onClose()\n\n\n\nprotected void onConnectionClose(void *)\n\n\n\n\nMembers\npublic net::TCPSocket::Ptr socket \npublicServerResponderFactory* factory \npublic ServerConnectionList connections \npublicnet::Addressaddress \npublicNullSignalShutdown \npublic  Server(short port,ServerResponderFactory* factory) \npublic virtual  ~Server() \npublic void start() \npublic void shutdown() \npublic std::uint16_t port() \nprotected ServerConnection::Ptr createConnection(const net::Socket::Ptr & sock) \nprotectedServerResponder* createResponder(ServerConnection& conn) \nprotected virtual void addConnection(ServerConnection::Ptr conn) \nprotected virtual void removeConnection(ServerConnection* conn) \nprotected void onAccept(const net::TCPSocket::Ptr & sock) \nprotected void onClose() \nprotected void onConnectionClose(void *) \nclass scy::http::ServerAdapter \nclass scy::http::ServerAdapter\n  : public scy::http::ConnectionAdapter\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  ServerAdapter(ServerConnection& connection)\n\n\n\n\nMembers\npublic inline  ServerAdapter(ServerConnection& connection) \nclass scy::http::ServerConnection \nclass scy::http::ServerConnection\n  : public scy::http::Connection\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  ServerConnection(Server& server,net::Socket::Ptr socket)\n\n\n\npublic virtual  ~ServerConnection()\n\n\n\npublic virtual void close()\nSends the HTTP response.\n\n\nprotectedServer& _server\n\n\n\nprotectedServerResponder* _responder\n\n\n\nprotected bool _upgrade\n\n\n\nprotected bool _requestComplete\n\n\n\nprotected virtual void onHeaders()\n\n\n\nprotected virtual void onPayload(constMutableBuffer& buffer)\n\n\n\nprotected virtual void onMessage()\n\n\n\nprotected virtual void onClose()\n\n\n\nprotectedServer& server()\n\n\n\nprotected virtualhttp::Message* incomingHeader()\n\n\n\nprotected virtualhttp::Message* outgoingHeader()\n\n\n\n\nMembers\npublic  ServerConnection(Server& server,net::Socket::Ptr socket) \npublic virtual  ~ServerConnection() \npublic virtual void close() \nSends the HTTP response.\nCloses the HTTP connection\nprotectedServer& _server \nprotectedServerResponder* _responder \nprotected bool _upgrade \nprotected bool _requestComplete \nprotected virtual void onHeaders() \nReturn true if the server did not give us a proper response within the allotted time. bool expired() const;\nprotected virtual void onPayload(constMutableBuffer& buffer) \nprotected virtual void onMessage() \nprotected virtual void onClose() \nprotectedServer& server() \nprotected virtualhttp::Message* incomingHeader() \nprotected virtualhttp::Message* outgoingHeader() \nclass scy::http::ServerResponder \nThe abstract base class for HTTP ServerResponders created by HTTP Server.\nDerived classes must override the handleRequest() method.\nA new HTTPServerResponder object will be created for each new HTTP request that is received by the HTTP Server.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  ServerResponder(ServerConnection& connection)\n\n\n\npublic inline virtual  ~ServerResponder()\n\n\n\npublic inline virtual void onHeaders(Request&)\n\n\n\npublic inline virtual void onPayload(constMutableBuffer&)\n\n\n\npublic inline virtual void onRequest(Request&,Response&)\n\n\n\npublic inline virtual void onClose()\n\n\n\npublic inlineServerConnection& connection()\n\n\n\npublic inlineRequest& request()\n\n\n\npublic inlineResponse& response()\n\n\n\nprotectedServerConnection& _connection\n\n\n\n\nMembers\npublic inline  ServerResponder(ServerConnection& connection) \npublic inline virtual  ~ServerResponder() \npublic inline virtual void onHeaders(Request&) \npublic inline virtual void onPayload(constMutableBuffer&) \npublic inline virtual void onRequest(Request&,Response&) \npublic inline virtual void onClose() \npublic inlineServerConnection& connection() \npublic inlineRequest& request() \npublic inlineResponse& response() \nprotectedServerConnection& _connection \nclass scy::http::ServerResponderFactory \nThis implementation of a ServerResponderFactory is used by HTTPServer to create ServerResponder objects.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  ServerResponderFactory()\n\n\n\npublic inline virtual  ~ServerResponderFactory()\n\n\n\npublicServerResponder* createResponder(ServerConnection& connection)\n\n\n\n\nMembers\npublic inline  ServerResponderFactory() \npublic inline virtual  ~ServerResponderFactory() \npublicServerResponder* createResponder(ServerConnection& connection) \nFactory method for instantiating the ServerResponder instance using the given ServerConnection.\nclass scy::http::StringPart \nclass scy::http::StringPart\n  : public scy::http::FormPart\nAn implementation of StringPart for plain files.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  StringPart(const std::string & path)\nCreates the StringPart for the given string.\n\n\npublic  StringPart(const std::string & data,const std::string & contentType)\nCreates the StringPart for the given string and MIME type.\n\n\npublic virtual  ~StringPart()\nDestroys the StringPart.\n\n\npublic virtual bool writeChunk(FormWriter& writer)\n\n\n\npublic virtual void write(FormWriter& writer)\nWrites the form data to the given HTTP client connection.\n\n\npublic virtual void write(std::ostream & ostr)\nWrites the form data to the given output stream.\n\n\npublic virtual std::uint64_t length() const\nReturns the length of the current part.\n\n\nprotected std::string _data\n\n\n\n\nMembers\npublic  StringPart(const std::string & path) \nCreates the StringPart for the given string.\npublic  StringPart(const std::string & data,const std::string & contentType) \nCreates the StringPart for the given string and MIME type.\npublic virtual  ~StringPart() \nDestroys the StringPart.\npublic virtual bool writeChunk(FormWriter& writer) \nWrites a form data chunk to the given HTTP client connection. Returns true if there is more data to be written.\npublic virtual void write(FormWriter& writer) \nWrites the form data to the given HTTP client connection.\npublic virtual void write(std::ostream & ostr) \nWrites the form data to the given output stream.\npublic virtual std::uint64_t length() const \nReturns the length of the current part.\nprotected std::string _data \nclass scy::http::URL \nAn RFC 3986 based URL which uses an external c library to do the heavy lifting. Constructors and assignment operators will throw a SyntaxException if the URL is invalid.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  URL()\n\n\n\npublic  URL(const char * url)\n\n\n\npublic  URL(const std::string & url)\n\n\n\npublic  URL(const std::string & scheme,const std::string & authority)\n\n\n\npublic  URL(const std::string & scheme,const std::string & authority,const std::string & pathEtc)\n\n\n\npublic  URL(const std::string & scheme,const std::string & authority,const std::string & path,const std::string & query,const std::string & fragment)\n\n\n\npublic  ~URL()\n\n\n\npublicURL& operator=(constURL& uri)\n\n\n\npublicURL& operator=(const std::string & uri)\n\n\n\npublicURL& operator=(const char * uri)\n\n\n\npublic bool parse(const std::string & url,bool whiny)\n\n\n\npublic std::string scheme() const\n\n\n\npublic std::string userInfo() const\n\n\n\npublic std::string host() const\n\n\n\npublic std::uint16_t port() const\n\n\n\npublic std::string authority() const\n\n\n\npublic std::string path() const\n\n\n\npublic std::string pathEtc() const\n\n\n\npublic std::string query() const\n\n\n\npublic std::string fragment() const\n\n\n\npublic bool hasSchema() const\n\n\n\npublic bool hasUserInfo() const\n\n\n\npublic bool hasHost() const\n\n\n\npublic bool hasPort() const\n\n\n\npublic bool hasPath() const\n\n\n\npublic bool hasQuery() const\n\n\n\npublic bool hasFragment() const\n\n\n\npublic bool valid() const\n\n\n\npublic std::string str() const\n\n\n\nprotected http_parser_url _parser\n\n\n\nprotected std::string _buf\n\n\n\n\nMembers\npublic  URL() \npublic  URL(const char * url) \npublic  URL(const std::string & url) \npublic  URL(const std::string & scheme,const std::string & authority) \npublic  URL(const std::string & scheme,const std::string & authority,const std::string & pathEtc) \npublic  URL(const std::string & scheme,const std::string & authority,const std::string & path,const std::string & query,const std::string & fragment) \npublic  ~URL() \npublicURL& operator=(constURL& uri) \npublicURL& operator=(const std::string & uri) \npublicURL& operator=(const char * uri) \npublic bool parse(const std::string & url,bool whiny) \nParses and assigns an URI from the given std::string. Throws a SyntaxException if whiny is set and the given url is invalid.\npublic std::string scheme() const \npublic std::string userInfo() const \npublic std::string host() const \npublic std::uint16_t port() const \npublic std::string authority() const \npublic std::string path() const \npublic std::string pathEtc() const \npublic std::string query() const \npublic std::string fragment() const \npublic bool hasSchema() const \npublic bool hasUserInfo() const \npublic bool hasHost() const \npublic bool hasPort() const \npublic bool hasPath() const \npublic bool hasQuery() const \npublic bool hasFragment() const \npublic bool valid() const \npublic std::string str() const \nprotected http_parser_url _parser \nprotected std::string _buf \nstruct scy::http::Method \nHTTP request methods.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\n\n\n\n\nMembers\nstruct scy::http::ParserError \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic http_errno code\n\n\n\npublic std::string message\n\n\n\n\nMembers\npublic http_errno code \npublic std::string message \nnamespace scy::http::ws \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::http::ws::ConnectionAdapter\nWebSocket class which belongs to a HTTP Connection.\n\n\nclassscy::http::ws::WebSocket\nStandalone WebSocket class.\n\n\nclassscy::http::ws::WebSocketAdapter\n\n\n\nclassscy::http::ws::WebSocketFramer\n\n\n\n\nclass scy::http::ws::ConnectionAdapter \nclass scy::http::ws::ConnectionAdapter\n  : public scy::http::ws::WebSocketAdapter\nWebSocket class which belongs to a HTTP Connection.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  ConnectionAdapter(Connection& connection,ws::Modemode)\n\n\n\npublic virtual  ~ConnectionAdapter()\n\n\n\npublic virtual void onHandshakeComplete()\nvirtual int sendHeader();\n\n\nprotectedConnection& _connection\n\n\n\n\nMembers\npublic  ConnectionAdapter(Connection& connection,ws::Modemode) \npublic virtual  ~ConnectionAdapter() \npublic virtual void onHandshakeComplete() \nvirtual int sendHeader();\nprotectedConnection& _connection \nclass scy::http::ws::WebSocket \nclass scy::http::ws::WebSocket\n  : public scy::http::ws::WebSocketAdapter\nStandalone WebSocket class.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  WebSocket(const net::Socket::Ptr & socket)\n\n\n\npublic virtual  ~WebSocket()\n\n\n\npublichttp::Request& request()\n\n\n\npublichttp::Response& response()\n\n\n\nprotectedhttp::Request_request\n\n\n\nprotectedhttp::Response_response\n\n\n\n\nMembers\npublic  WebSocket(const net::Socket::Ptr & socket) \nCreates the WebSocket with the given Socket. The Socket should be a TCPSocket or a SSLSocket, depending on the protocol used (ws or wss).\npublic virtual  ~WebSocket() \npublichttp::Request& request() \npublichttp::Response& response() \nprotectedhttp::Request_request \nprotectedhttp::Response_response \nclass scy::http::ws::WebSocketAdapter \nclass scy::http::ws::WebSocketAdapter\n  : public scy::net::SocketAdapter\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic net::Socket::Ptr socket\n\n\n\npublic  WebSocketAdapter(const net::Socket::Ptr & socket,ws::Modemode,http::Request& request,http::Response& response)\n\n\n\npublic virtual int send(const char * data,std::size_t len,int flags)\n\n\n\npublic virtual int send(const char * data,std::size_t len,constnet::Address& peerAddr,int flags)\n\n\n\npublic virtual bool shutdown(std::uint16_t statusCode,const std::string & statusMessage)\n\n\n\npublic virtual void sendClientRequest()\n\n\n\npublic virtual void handleClientResponse(constMutableBuffer& buffer,constnet::Address& peerAddr)\n\n\n\npublic virtual void handleServerRequest(constMutableBuffer& buffer,constnet::Address& peerAddr)\n\n\n\npublic virtual void onSocketConnect()\n\n\n\npublic virtual void onSocketRecv(constMutableBuffer& buffer,constnet::Address& peerAddress)\n\n\n\npublic virtual void onSocketClose()\n\n\n\npublic virtual void onHandshakeComplete()\n\n\n\nprotectedWebSocketFramerframer\n\n\n\nprotectedhttp::Request& _request\n\n\n\nprotectedhttp::Response& _response\n\n\n\nprotected virtual  ~WebSocketAdapter()\n\n\n\n\nMembers\npublic net::Socket::Ptr socket \nPointer to the underlying socket. Sent data will be proxied to this socket.\npublic  WebSocketAdapter(const net::Socket::Ptr & socket,ws::Modemode,http::Request& request,http::Response& response) \npublic virtual int send(const char * data,std::size_t len,int flags) \nSends the given data buffer to the connected peer. Returns the number of bytes sent or -1 on error. No exception will be thrown. For TCP sockets the given peer address must match the connected peer address.\npublic virtual int send(const char * data,std::size_t len,constnet::Address& peerAddr,int flags) \npublic virtual bool shutdown(std::uint16_t statusCode,const std::string & statusMessage) \npublic virtual void sendClientRequest() \npublic virtual void handleClientResponse(constMutableBuffer& buffer,constnet::Address& peerAddr) \npublic virtual void handleServerRequest(constMutableBuffer& buffer,constnet::Address& peerAddr) \npublic virtual void onSocketConnect() \nThese virtual methods can be overridden as necessary to intercept socket events before they hit the application.\npublic virtual void onSocketRecv(constMutableBuffer& buffer,constnet::Address& peerAddress) \npublic virtual void onSocketClose() \npublic virtual void onHandshakeComplete() \nprotectedWebSocketFramerframer \nprotectedhttp::Request& _request \nprotectedhttp::Response& _response \nprotected virtual  ~WebSocketAdapter() \nclass scy::http::ws::WebSocketFramer \nThis class implements a WebSocket parser according to the WebSocket protocol described in RFC 6455.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  WebSocketFramer(ws::Modemode)\nCreates a Socket using the given Socket.\n\n\npublic virtual  ~WebSocketFramer()\n\n\n\npublic virtual std::size_t writeFrame(const char * data,std::size_t len,int flags,BitWriter& frame)\nWrites a WebSocket protocol frame from the given data.\n\n\npublic virtual std::uint64_t readFrame(BitReader& frame,char *& payload)\n\n\n\npublic bool handshakeComplete() const\n\n\n\npublic void acceptServerRequest(http::Request& request,http::Response& response)\n\n\n\npublic void createClientHandshakeRequest(http::Request& request)\nAppends the WS hanshake HTTP request hearers.\n\n\npublic bool checkClientHandshakeResponse(http::Response& response)\n\n\n\npublic void completeClientHandshake(http::Response& response)\nVerifies the handshake response or thrown and exception.\n\n\nprotected int frameFlags() const\n\n\n\nprotected bool mustMaskPayload() const\n\n\n\nprotectedws::Modemode() const\n\n\n\n\nMembers\npublic  WebSocketFramer(ws::Modemode) \nCreates a Socket using the given Socket.\npublic virtual  ~WebSocketFramer() \npublic virtual std::size_t writeFrame(const char * data,std::size_t len,int flags,BitWriter& frame) \nWrites a WebSocket protocol frame from the given data.\npublic virtual std::uint64_t readFrame(BitReader& frame,char *& payload) \nReads a single WebSocket frame from the given buffer (frame).\nThe actual payload length is returned, and the beginning of the payload buffer will be assigned in the second (payload) argument. No data is copied.\nIf the frame is invalid or too big an exception will be thrown. Return true when the handshake has completed successfully.\npublic bool handshakeComplete() const \npublic void acceptServerRequest(http::Request& request,http::Response& response) \npublic void createClientHandshakeRequest(http::Request& request) \nAppends the WS hanshake HTTP request hearers.\nClient side Sends the initial WS handshake HTTP request. void sendHandshakeRequest();\npublic bool checkClientHandshakeResponse(http::Response& response) \nChecks the veracity the HTTP handshake response. Returns true on success, false if the request should be resent (in case of authentication), or throws on error.\npublic void completeClientHandshake(http::Response& response) \nVerifies the handshake response or thrown and exception.\nprotected int frameFlags() const \nReturns the frame flags of the most recently received frame. Set by readFrame()\nprotected bool mustMaskPayload() const \nReturns true if the payload must be masked. Used by writeFrame()\nprotectedws::Modemode() const \n"},"api-json.html":{"url":"api-json.html","title":"JSON","keywords":"","body":"Module  json\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy::json\n\n\n\n\nnamespace scy::json \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::json::Configuration\n\n\n\nclassscy::json::ISerializable\n\n\n\n\nclass scy::json::Configuration \nclass scy::json::Configuration\n  : public scy::Configuration\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic json::Value root\nSee IConfiguration for data accessors.\n\n\npublic  Configuration()\n\n\n\npublic virtual  ~Configuration()\nDestroys the Configuration.\n\n\npublic virtual void load(const std::string & path,bool create)\n\n\n\npublic virtual void load(bool create)\n\n\n\npublic virtual void save()\n\n\n\npublic virtual bool remove(const std::string & key)\n\n\n\npublic virtual void removeAll(const std::string & baseKey)\n\n\n\npublic virtual void replace(const std::string & from,const std::string & to)\n\n\n\npublic virtual void keys(std::vector & keys,const std::string & baseKey)\n\n\n\npublic virtual void print(std::ostream & ost)\n\n\n\npublic virtual std::string path()\n\n\n\npublic virtual bool loaded()\n\n\n\nprotected bool _loaded\n\n\n\nprotected std::string _path\n\n\n\nprotected mutableMutex_mutex\n\n\n\nprotected virtual bool getRaw(const std::string & key,std::string & value) const\n\n\n\nprotected virtual void setRaw(const std::string & key,const std::string & value)\n\n\n\n\nMembers\npublic json::Value root \nSee IConfiguration for data accessors.\npublic  Configuration() \npublic virtual  ~Configuration() \nDestroys the Configuration.\npublic virtual void load(const std::string & path,bool create) \npublic virtual void load(bool create) \npublic virtual void save() \npublic virtual bool remove(const std::string & key) \npublic virtual void removeAll(const std::string & baseKey) \npublic virtual void replace(const std::string & from,const std::string & to) \npublic virtual void keys(std::vector & keys,const std::string & baseKey) \npublic virtual void print(std::ostream & ost) \npublic virtual std::string path() \npublic virtual bool loaded() \nprotected bool _loaded \nprotected std::string _path \nprotected mutableMutex_mutex \nprotected virtual bool getRaw(const std::string & key,std::string & value) const \nIf the property with the given key exists, stores the property's value in value and returns true. Otherwise, returns false.\nMust be overridden by subclasses.\nprotected virtual void setRaw(const std::string & key,const std::string & value) \nSets the property with the given key to the given value. An already existing value for the key is overwritten.\nThe implementation is responsible for emitting the PropertyChanged signal.\nclass scy::json::ISerializable \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual  ~ISerializable()\n\n\n\npublic void serialize(json::Value & root)\n\n\n\npublic void deserialize(json::Value & root)\n\n\n\n\nMembers\npublic inline virtual  ~ISerializable() \npublic void serialize(json::Value & root) \npublic void deserialize(json::Value & root) \n"},"api-net.html":{"url":"api-net.html","title":"Net","keywords":"","body":"Module  net\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy::net\n\n\n\n\nnamespace scy::net \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::net::Address\n\n\n\nclassscy::net::AddressBase\n\n\n\nclassscy::net::IPv4AddressBase\n\n\n\nclassscy::net::PacketSocketAdapter\n\n\n\nclassscy::net::Socket\n\n\n\nclassscy::net::SocketAdapter\n\n\n\nclassscy::net::SocketPacket\n\n\n\nclassscy::net::SSLAdapter\n\n\n\nclassscy::net::SSLContext\n\n\n\nclassscy::net::SSLManager\n\n\n\nclassscy::net::SSLSession\n\n\n\nclassscy::net::SSLSocket\n\n\n\nclassscy::net::TCPSocket\n\n\n\nclassscy::net::Transaction\n\n\n\nclassscy::net::UDPSocket\n\n\n\nclassscy::net::VerificationErrorDetails\nA utility class for certificate error handling.\n\n\nstructscy::net::DNSResult\n\n\n\nstructscy::net::PacketInfo\n\n\n\n\nclass scy::net::Address \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Address()\nCreates a wildcard (all zero) IPv4 Address.\n\n\npublic  Address(const std::string & host,std::uint16_t port)\n\n\n\npublic  Address(constAddress& addr)\nCreates a Address by copying another one.\n\n\npublic  Address(const struct sockaddr * addr,socklen_t length)\nCreates a Address from a native socket address.\n\n\npublic  Address(const std::string & host,const std::string & port)\n\n\n\npublic  explicit Address(const std::string & hostAndPort)\n\n\n\npublic  ~Address()\nDestroys the Address.\n\n\npublicAddress& operator=(constAddress& addr)\nAssigns another Address.\n\n\npublic void swap(Address& addr)\nSwaps the Address with another one.\n\n\npublic std::string host() const\nReturns the host IP address.\n\n\npublic std::uint16_t port() const\nReturns the port number.\n\n\npublic socklen_t length() const\nReturns the length of the internal native socket address.\n\n\npublic const struct sockaddr * addr() const\nReturns a pointer to the internal native socket address.\n\n\npublic int af() const\nReturns the address family (AF_INET or AF_INET6) of the address.\n\n\npublic std::string toString() const\nReturns a string representation of the address.\n\n\npublicAddress::Familyfamily() const\nReturns the address family of the host's address.\n\n\npublic bool valid() const\n\n\n\npublic bool operatorAddress& addr) const\n\n\n\npublic bool operator==(constAddress& addr) const\n\n\n\npublic bool operator!=(constAddress& addr) const\n\n\n\nprotected void init(const std::string & host,std::uint16_t port)\n\n\n\n\nMembers\npublic  Address() \nCreates a wildcard (all zero) IPv4 Address.\npublic  Address(const std::string & host,std::uint16_t port) \nCreates a Address from an IP address and a port number.\nThe IP address must either be a domain name, or it must be in dotted decimal (IPv4) or hex string (IPv6) format.\npublic  Address(constAddress& addr) \nCreates a Address by copying another one.\npublic  Address(const struct sockaddr * addr,socklen_t length) \nCreates a Address from a native socket address.\npublic  Address(const std::string & host,const std::string & port) \nCreates a Address from an IP address and a service name or port number.\nThe IP address must either be a domain name, or it must be in dotted decimal (IPv4) or hex string (IPv6) format.\nThe given port must either be a decimal port number, or a service name.\npublic  explicit Address(const std::string & hostAndPort) \nCreates a Address from an IP address or host name and a port number/service name. Host name/address and port number must be separated by a colon. In case of an IPv6 address, the address part must be enclosed in brackets.\nExamples: 192.168.1.10:80\nwww.sourcey.com:8080\npublic  ~Address() \nDestroys the Address.\npublicAddress& operator=(constAddress& addr) \nAssigns another Address.\npublic void swap(Address& addr) \nSwaps the Address with another one.\npublic std::string host() const \nReturns the host IP address.\npublic std::uint16_t port() const \nReturns the port number.\npublic socklen_t length() const \nReturns the length of the internal native socket address.\npublic const struct sockaddr * addr() const \nReturns a pointer to the internal native socket address.\npublic int af() const \nReturns the address family (AF_INET or AF_INET6) of the address.\npublic std::string toString() const \nReturns a string representation of the address.\npublicAddress::Familyfamily() const \nReturns the address family of the host's address.\npublic bool valid() const \nReturns true when the port is set and the address is valid ie. not wildcard.\npublic bool operatorAddress& addr) const \npublic bool operator==(constAddress& addr) const \npublic bool operator!=(constAddress& addr) const \nprotected void init(const std::string & host,std::uint16_t port) \nclass scy::net::AddressBase \nclass scy::net::AddressBase\n  : public scy::SharedObject\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::string host() const\n\n\n\npublic std::uint16_t port() const\n\n\n\npublicAddress::Familyfamily() const\n\n\n\npublic socklen_t length() const\n\n\n\npublic const struct sockaddr * addr() const\n\n\n\npublic int af() const\n\n\n\nprotected inline  AddressBase()\n\n\n\nprotected inline virtual  ~AddressBase()\n\n\n\n\nMembers\npublic std::string host() const \npublic std::uint16_t port() const \npublicAddress::Familyfamily() const \npublic socklen_t length() const \npublic const struct sockaddr * addr() const \npublic int af() const \nprotected inline  AddressBase() \nprotected inline virtual  ~AddressBase() \nclass scy::net::IPv4AddressBase \nclass scy::net::IPv4AddressBase\n  : public scy::net::AddressBase\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  IPv4AddressBase()\n\n\n\npublic inline  IPv4AddressBase(const struct sockaddr_in * addr)\n\n\n\npublic inline  IPv4AddressBase(const void * addr,std::uint16_t port)\n\n\n\npublic inline virtual std::string host() const\n\n\n\npublic inline virtual std::uint16_t port() const\n\n\n\npublic inline virtualAddress::Familyfamily() const\n\n\n\npublic inline virtual socklen_t length() const\n\n\n\npublic inline virtual const struct sockaddr * addr() const\n\n\n\npublic inline virtual int af() const\n\n\n\n\nMembers\npublic inline  IPv4AddressBase() \npublic inline  IPv4AddressBase(const struct sockaddr_in * addr) \npublic inline  IPv4AddressBase(const void * addr,std::uint16_t port) \npublic inline virtual std::string host() const \npublic inline virtual std::uint16_t port() const \npublic inline virtualAddress::Familyfamily() const \npublic inline virtual socklen_t length() const \npublic inline virtual const struct sockaddr * addr() const \npublic inline virtual int af() const \nclass scy::net::PacketSocketAdapter \nclass scy::net::PacketSocketAdapter\n  : public scy::net::SocketAdapter\n  : public scy::SignalBase\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic net::Socket::Ptr socket\n\n\n\npublicPacketFactoryfactory\n\n\n\npublic  PacketSocketAdapter(const net::Socket::Ptr & socket)\n\n\n\npublic virtual void onSocketRecv(constMutableBuffer& buffer,constAddress& peerAddress)\n\n\n\npublic virtual void onPacket(IPacket& pkt)\n\n\n\n\nMembers\npublic net::Socket::Ptr socket \nPointer to the underlying socket. Sent data will be proxied to this socket.\npublicPacketFactoryfactory \npublic  PacketSocketAdapter(const net::Socket::Ptr & socket) \nCreates the PacketSocketAdapter This class should have a higher priority than standard sockets so we can parse data packets first. Creates and dispatches a packet utilizing the available creation strategies. For best performance the most used strategies should have the highest priority.\npublic virtual void onSocketRecv(constMutableBuffer& buffer,constAddress& peerAddress) \npublic virtual void onPacket(IPacket& pkt) \nclass scy::net::Socket \nclass scy::net::Socket\n  : public scy::net::SocketAdapter\nSocket is the base socket implementation from which all sockets derive.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Socket()\n\n\n\npublic virtual  ~Socket()\n\n\n\npublic void connect(constAddress& address)\n\n\n\npublic virtual void connect(const std::string & host,std::uint16_t port)\n\n\n\npublic void bind(constAddress& address,unsigned flags)\n\n\n\npublic inline virtual void listen(int backlog)\n\n\n\npublic inline virtual bool shutdown()\n\n\n\npublic void close()\nCloses the underlying socket.\n\n\npublicAddressaddress() const\n\n\n\npublicAddresspeerAddress() const\n\n\n\npublic net::TransportType transport() const\nThe transport protocol: TCP, UDP or SSLTCP.\n\n\npublic void setError(constscy::Error& err)\n\n\n\npublic constscy::Error& error() const\nReturn the socket error if any.\n\n\npublic bool closed() const\nReturns true if the native socket handle is closed.\n\n\npublic uv::Loop * loop() const\nReturns the socket event loop.\n\n\nprotected void init()\nInitializes the underlying socket context.\n\n\nprotected inline virtual void reset()\nResets the socket context for reuse.\n\n\nprotected inline virtual void * self()\n\n\n\n\nMembers\npublic  Socket() \npublic virtual  ~Socket() \npublic void connect(constAddress& address) \nConnects to the given peer IP address.\nThrows an exception if the address is malformed. Connection errors can be handled via the Error signal.\npublic virtual void connect(const std::string & host,std::uint16_t port) \nResolves and connects to the given host address.\nThrows an Exception if the host is malformed. Since the DNS callback is asynchronous implementations need to listen for the Error signal for handling connection errors.\npublic void bind(constAddress& address,unsigned flags) \nBind a local address to the socket. The address may be IPv4 or IPv6 (if supported).\nThrows an Exception on error.\npublic inline virtual void listen(int backlog) \nListens the socket on the given address.\nThrows an Exception on error.\npublic inline virtual bool shutdown() \nSends the shutdown packet which should result is socket closure via callback.\npublic void close() \nCloses the underlying socket.\npublicAddressaddress() const \nThe locally bound address.\nThis function will not throw. A Wildcard 0.0.0.0:0 address is returned if the socket is closed or invalid.\npublicAddresspeerAddress() const \nThe connected peer address.\nThis function will not throw. A Wildcard 0.0.0.0:0 address is returned if the socket is closed or invalid.\npublic net::TransportType transport() const \nThe transport protocol: TCP, UDP or SSLTCP.\npublic void setError(constscy::Error& err) \nSets the socket error.\nSetting the error will result in socket closure.\npublic constscy::Error& error() const \nReturn the socket error if any.\npublic bool closed() const \nReturns true if the native socket handle is closed.\npublic uv::Loop * loop() const \nReturns the socket event loop.\nprotected void init() \nInitializes the underlying socket context.\nprotected inline virtual void reset() \nResets the socket context for reuse.\nprotected inline virtual void * self() \nReturns the derived instance pointer for casting SocketAdapter signal callback sender arguments from void to Socket. Note: This method must not be derived by subclasses or casting will fail for void pointer callbacks.\nclass scy::net::SocketAdapter \nSocketAdapter is the abstract interface for all socket classes. A SocketAdapter can also be attached to a Socket in order to override default Socket callbacks and behaviour, while still maintaining the default Socket interface (see Socket::setAdapter).\nThis class also be extended to implement custom processing for received socket data before it is dispatched to the application (see PacketSocketAdapter and Transaction classes).\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic void * opaque\n\n\n\npublicNullSignalConnect\nSignals that the socket is connected.\n\n\npublic`Signal2MutableBuffer &, const Address`& > Recv\nSignals when data is received by the socket.\n\n\npublic`Signalscy::Error`& > Error\n\n\n\npublicNullSignalClose\nSignals that the underlying socket is closed.\n\n\npublic  SocketAdapter(SocketAdapter* sender,SocketAdapter* receiver)\nCreates the SocketAdapter.\n\n\npublic virtual  ~SocketAdapter()\nDestroys the SocketAdapter.\n\n\npublic virtual int send(const char * data,std::size_t len,int flags)\n\n\n\npublic virtual int send(const char * data,std::size_t len,constAddress& peerAddress,int flags)\n\n\n\npublic virtual int sendPacket(constIPacket& packet,int flags)\n\n\n\npublic virtual int sendPacket(constIPacket& packet,constAddress& peerAddress,int flags)\n\n\n\npublic virtual void sendPacket(IPacket& packet)\n\n\n\npublic virtual void onSocketConnect()\n\n\n\npublic virtual void onSocketRecv(constMutableBuffer& buffer,constAddress& peerAddress)\n\n\n\npublic virtual void onSocketError(constError& error)\n\n\n\npublic virtual void onSocketClose()\n\n\n\npublic void setSender(SocketAdapter* adapter,bool freeExisting)\n\n\n\npublicSocketAdapter* sender()\nReturns the output SocketAdapter pointer.\n\n\npublic void addReceiver(SocketAdapter* adapter,int priority)\nAdds an input SocketAdapter for receiving socket callbacks.\n\n\npublic void removeReceiver(SocketAdapter* adapter)\nRemoves an input SocketAdapter.\n\n\nprotectedSocketAdapter* _sender\n\n\n\nprotected inline virtual void * self()\n\n\n\nprotected virtual void emitSocketConnect()\n\n\n\nprotected virtual void emitSocketRecv(constMutableBuffer& buffer,constAddress& peerAddress)\n\n\n\nprotected virtual void emitSocketError(constscy::Error& error)\n\n\n\nprotected virtual void emitSocketClose()\n\n\n\n\nMembers\npublic void * opaque \nOptional client data pointer.\nThe pointer is not initialized or managed by the socket base.\npublicNullSignalConnect \nSignals that the socket is connected.\npublic`Signal2MutableBuffer &, const Address`& > Recv \nSignals when data is received by the socket.\npublic`Signalscy::Error`& > Error \nSignals that the socket is closed in error. This signal will be sent just before the Closed signal.\npublicNullSignalClose \nSignals that the underlying socket is closed.\npublic  SocketAdapter(SocketAdapter* sender,SocketAdapter* receiver) \nCreates the SocketAdapter.\npublic virtual  ~SocketAdapter() \nDestroys the SocketAdapter.\npublic virtual int send(const char * data,std::size_t len,int flags) \nSends the given data buffer to the connected peer. Returns the number of bytes sent or -1 on error. No exception will be thrown. For TCP sockets the given peer address must match the connected peer address.\npublic virtual int send(const char * data,std::size_t len,constAddress& peerAddress,int flags) \npublic virtual int sendPacket(constIPacket& packet,int flags) \nSends the given packet to the connected peer. Returns the number of bytes sent or -1 on error. No exception will be thrown. For TCP sockets the given peer address must match the connected peer address.\npublic virtual int sendPacket(constIPacket& packet,constAddress& peerAddress,int flags) \npublic virtual void sendPacket(IPacket& packet) \nSends the given packet to the connected peer. This method provides delegate compatability, and unlike other send methods throws an exception if the underlying socket is closed.\npublic virtual void onSocketConnect() \nThese virtual methods can be overridden as necessary to intercept socket events before they hit the application.\npublic virtual void onSocketRecv(constMutableBuffer& buffer,constAddress& peerAddress) \npublic virtual void onSocketError(constError& error) \npublic virtual void onSocketClose() \npublic void setSender(SocketAdapter* adapter,bool freeExisting) \nA pointer to the adapter for handling outgoing data. Send methods proxy data to this adapter by default. Note that we only keep a simple pointer so as to avoid circular references preventing destruction.\npublicSocketAdapter* sender() \nReturns the output SocketAdapter pointer.\npublic void addReceiver(SocketAdapter* adapter,int priority) \nAdds an input SocketAdapter for receiving socket callbacks.\npublic void removeReceiver(SocketAdapter* adapter) \nRemoves an input SocketAdapter.\nprotectedSocketAdapter* _sender \nprotected inline virtual void * self() \nReturns the polymorphic instance pointer for signal delegate callbacks.\nprotected virtual void emitSocketConnect() \nprotected virtual void emitSocketRecv(constMutableBuffer& buffer,constAddress& peerAddress) \nprotected virtual void emitSocketError(constscy::Error& error) \nprotected virtual void emitSocketClose() \nclass scy::net::SocketPacket \nclass scy::net::SocketPacket\n  : public scy::RawPacket\nSocketPacket is the default packet type emitted by sockets. SocketPacket provides peer address information and a buffer reference for nocopy binary operations.\nThe referenced packet buffer lifetime is only guaranteed for the duration of the receiver callback.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicPacketInfo* info\nPacketInfo pointer.\n\n\npublic inline  SocketPacket(const Socket::Ptr & socket,constMutableBuffer& buffer,constAddress& peerAddress)\n\n\n\npublic inline  SocketPacket(constSocketPacket& that)\n\n\n\npublic inline virtual  ~SocketPacket()\n\n\n\npublic inline virtual void print(std::ostream & os) const\n\n\n\npublic inline virtualIPacket* clone() const\n\n\n\npublic inline virtual std::size_t read(constConstBuffer&)\n\n\n\npublic inline virtual void write(Buffer &) const\n\n\n\npublic inline virtual const char * className() const\n\n\n\n\nMembers\npublicPacketInfo* info \nPacketInfo pointer.\npublic inline  SocketPacket(const Socket::Ptr & socket,constMutableBuffer& buffer,constAddress& peerAddress) \npublic inline  SocketPacket(constSocketPacket& that) \npublic inline virtual  ~SocketPacket() \npublic inline virtual void print(std::ostream & os) const \npublic inline virtualIPacket* clone() const \npublic inline virtual std::size_t read(constConstBuffer&) \nRead/parse to the packet from the given input buffer. The number of bytes read is returned.\npublic inline virtual void write(Buffer &) const \nCopy/generate to the packet given output buffer. The number of bytes written can be obtained from the buffer.\nTodo: It may be prefferable to use our pod types here instead of buffer input, but the current codebase requires that the buffer be dynamically resizable for some protocols...\nvirtual std::size_t write(MutableBuffer&) const = 0;\npublic inline virtual const char * className() const \nclass scy::net::SSLAdapter \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  SSLAdapter(net::SSLSocket* socket)\n\n\n\npublic  ~SSLAdapter()\n\n\n\npublic void initClient()\nInitializes the SSL context as a client.\n\n\npublic void initServer()\nInitializes the SSL context as a server.\n\n\npublic bool initialized() const\nReturns true when SSL context has been initialized.\n\n\npublic bool ready() const\nReturns true when the handshake is complete.\n\n\npublic void handshake()\nStart/continue the SSL handshake process.\n\n\npublic int available() const\n\n\n\npublic void shutdown()\nIssues an orderly SSL shutdown.\n\n\npublic void flush()\nFlushes the SSL read/write buffers.\n\n\npublic void addIncomingData(const char * data,std::size_t len)\n\n\n\npublic void addOutgoingData(const std::string & data)\n\n\n\npublic void addOutgoingData(const char * data,std::size_t len)\n\n\n\nprotectednet::SSLSocket* _socket\n\n\n\nprotected SSL * _ssl\n\n\n\nprotected BIO * _readBIO\nThe incoming buffer we write encrypted SSL data into.\n\n\nprotected BIO * _writeBIO\nThe outgoing buffer we write to the socket.\n\n\nprotected std::vector _bufferOut\nThe outgoing payload to be encrypted and sent.\n\n\nprotected void handleError(int rc)\n\n\n\nprotected void flushReadBIO()\n\n\n\nprotected void flushWriteBIO()\n\n\n\n\nMembers\npublic  SSLAdapter(net::SSLSocket* socket) \npublic  ~SSLAdapter() \npublic void initClient() \nInitializes the SSL context as a client.\npublic void initServer() \nInitializes the SSL context as a server.\npublic bool initialized() const \nReturns true when SSL context has been initialized.\npublic bool ready() const \nReturns true when the handshake is complete.\npublic void handshake() \nStart/continue the SSL handshake process.\npublic int available() const \nReturns the number of bytes available in the SSL buffer for immediate reading.\npublic void shutdown() \nIssues an orderly SSL shutdown.\npublic void flush() \nFlushes the SSL read/write buffers.\npublic void addIncomingData(const char * data,std::size_t len) \npublic void addOutgoingData(const std::string & data) \npublic void addOutgoingData(const char * data,std::size_t len) \nprotectednet::SSLSocket* _socket \nprotected SSL * _ssl \nprotected BIO * _readBIO \nThe incoming buffer we write encrypted SSL data into.\nprotected BIO * _writeBIO \nThe outgoing buffer we write to the socket.\nprotected std::vector _bufferOut \nThe outgoing payload to be encrypted and sent.\nprotected void handleError(int rc) \nprotected void flushReadBIO() \nprotected void flushWriteBIO() \nclass scy::net::SSLContext \nclass scy::net::SSLContext\n  : public scy::SharedObject\nThis class encapsulates context information for an SSL server or client, such as the certificate verification mode and the location of certificates and private key files, as well as the list of supported ciphers.\nThe Context class is also used to control SSL session caching on the server and client side.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  SSLContext(Usageusage,const std::string & privateKeyFile,const std::string & certificateFile,const std::string & caLocation,VerificationModeverificationMode,int verificationDepth,bool loadDefaultCAs,const std::string & cipherList)\n\n\n\npublic  SSLContext(Usageusage,const std::string & caLocation,VerificationModeverificationMode,int verificationDepth,bool loadDefaultCAs,const std::string & cipherList)\n\n\n\npublic  ~SSLContext()\nDestroys the Context.\n\n\npublic void useCertificate(constcrypto::X509Certificate& certificate)\n\n\n\npublic void addChainCertificate(constcrypto::X509Certificate& certificate)\nAdds a certificate for certificate chain validation.\n\n\npublic void addVerificationCertificate(constcrypto::X509Certificate& certificate)\n\n\n\npublic inline SSL_CTX * sslContext() const\nReturns the underlying OpenSSL SSL Context object.\n\n\npublic inlineUsageusage() const\n\n\n\npublic inline bool isForServerUse() const\nReturns true if the context is for use by a server.\n\n\npublic inlineSSLContext::VerificationModeverificationMode() const\nReturns the verification mode.\n\n\npublic void enableSessionCache(bool flag)\n\n\n\npublic void enableSessionCache(bool flag,const std::string & sessionIdContext)\n\n\n\npublic bool sessionCacheEnabled() const\nReturns true if the session cache is enabled.\n\n\npublic void setSessionCacheSize(std::size_t size)\n\n\n\npublic std::size_t getSessionCacheSize() const\n\n\n\npublic void setSessionTimeout(long seconds)\n\n\n\npublic long getSessionTimeout() const\n\n\n\npublic void flushSessionCache()\n\n\n\npublic void disableStatelessSessionResumption()\n\n\n\n\nMembers\npublic  SSLContext(Usageusage,const std::string & privateKeyFile,const std::string & certificateFile,const std::string & caLocation,VerificationModeverificationMode,int verificationDepth,bool loadDefaultCAs,const std::string & cipherList) \nCreates a Context.\n\nusage specifies whether the context is used by a client or server.\n\n\nprivateKeyFile contains the path to the private key file used for encryption. Can be empty if no private key file is used.\n\n\ncertificateFile contains the path to the certificate file (in PEM format). If the private key and the certificate are stored in the same file, this can be empty if privateKeyFile is given.\n\n\ncaLocation contains the path to the file or directory containing the CA/root certificates. Can be empty if the OpenSSL builtin CA certificates are used (see loadDefaultCAs).\n\n\nverificationMode specifies whether and how peer certificates are validated.\n\n\nverificationDepth sets the upper limit for verification chain sizes. Verification will fail if a certificate chain larger than this is encountered.\n\n\nloadDefaultCAs specifies wheter the builtin CA certificates from OpenSSL are used.\n\n\ncipherList specifies the supported ciphers in OpenSSL notation.\n\nNote: If the private key is protected by a passphrase, a PrivateKeyPassphraseHandler must have been setup with the SSLManager, or the SSLManager's PrivateKeyPassphraseRequired event must be handled.\npublic  SSLContext(Usageusage,const std::string & caLocation,VerificationModeverificationMode,int verificationDepth,bool loadDefaultCAs,const std::string & cipherList) \nCreates a Context.\n\nusage specifies whether the context is used by a client or server.\n\n\ncaLocation contains the path to the file or directory containing the CA/root certificates. Can be empty if the OpenSSL builtin CA certificates are used (see loadDefaultCAs).\n\n\nverificationMode specifies whether and how peer certificates are validated.\n\n\nverificationDepth sets the upper limit for verification chain sizes. Verification will fail if a certificate chain larger than this is encountered.\n\n\nloadDefaultCAs specifies weather the builtin CA certificates from OpenSSL are used.\n\n\ncipherList specifies the supported ciphers in OpenSSL notation.\n\nNote that a private key and/or certificate must be specified with usePrivateKey()/useCertificate() before the Context can be used.\npublic  ~SSLContext() \nDestroys the Context.\npublic void useCertificate(constcrypto::X509Certificate& certificate) \nSets the certificate to be used by the Context.\nTo set-up a complete certificate chain, it might be necessary to call addChainCertificate() to specify additional certificates.\nNote that useCertificate() must always be called before usePrivateKey().\npublic void addChainCertificate(constcrypto::X509Certificate& certificate) \nAdds a certificate for certificate chain validation.\npublic void addVerificationCertificate(constcrypto::X509Certificate& certificate) \nSets the private key to be used by the Context.\nNote that useCertificate() must always be called before usePrivateKey().\nNote: If the private key is protected by a passphrase, a PrivateKeyPassphraseHandler must have been setup with the SSLManager, or the SSLManager's PrivateKeyPassphraseRequired event must be handled. Adds the given certificate to the list of trusted certificates that will be used for verification.\npublic inline SSL_CTX * sslContext() const \nReturns the underlying OpenSSL SSL Context object.\npublic inlineUsageusage() const \nReturns whether the context is for use by a client or by a server and whether TLSv1 is required.\npublic inline bool isForServerUse() const \nReturns true if the context is for use by a server.\npublic inlineSSLContext::VerificationModeverificationMode() const \nReturns the verification mode.\npublic void enableSessionCache(bool flag) \nEnable or disable SSL/TLS session caching. For session caching to work, it must be enabled on the server, as well as on the client side.\nThe default is disabled session caching.\nTo enable session caching on the server side, use the two-argument version of this method to specify a session ID context.\npublic void enableSessionCache(bool flag,const std::string & sessionIdContext) \nEnables or disables SSL/TLS session caching on the server. For session caching to work, it must be enabled on the server, as well as on the client side.\nSessionIdContext contains the application's unique session ID context, which becomes part of each session identifier generated by the server within this context. SessionIdContext can be an arbitrary sequence of bytes with a maximum length of SSL_MAX_SSL_SESSION_ID_LENGTH.\nA non-empty sessionIdContext should be specified even if session caching is disabled to avoid problems with clients requesting to reuse a session (e.g. Firefox 3.6).\nThis method may only be called on SERVER_USE Context objects.\npublic bool sessionCacheEnabled() const \nReturns true if the session cache is enabled.\npublic void setSessionCacheSize(std::size_t size) \nSets the maximum size of the server session cache, in number of sessions. The default size (according to OpenSSL documentation) is 1024*20, which may be too large for many applications, especially on embedded platforms with limited memory.\nSpecifying a size of 0 will set an unlimited cache size.\nThis method may only be called on SERVER_USE Context objects.\npublic std::size_t getSessionCacheSize() const \nReturns the current maximum size of the server session cache.\nThis method may only be called on SERVER_USE Context objects.\npublic void setSessionTimeout(long seconds) \nSets the timeout (in seconds) of cached sessions on the server. A cached session will be removed from the cache if it has not been used for the given number of seconds.\nThis method may only be called on SERVER_USE Context objects.\npublic long getSessionTimeout() const \nReturns the timeout (in seconds) of cached sessions on the server.\nThis method may only be called on SERVER_USE Context objects.\npublic void flushSessionCache() \nFlushes the SSL session cache on the server.\nThis method may only be called on SERVER_USE Context objects.\npublic void disableStatelessSessionResumption() \nNewer versions of OpenSSL support RFC 4507 tickets for stateless session resumption.\nThe feature can be disabled by calling this method.\nclass scy::net::SSLManager \nSSLManager is a singleton for holding the default server/client Context and handling callbacks for certificate verification errors and private key passphrases.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic`SignalVerificationErrorDetails`& > ServerVerificationError\nFired whenever a certificate verification error is detected by the server during a handshake.\n\n\npublic`SignalVerificationErrorDetails`& > ClientVerificationError\nFired whenever a certificate verification error is detected by the client during a handshake.\n\n\npublicSignal PrivateKeyPassphraseRequired\n\n\n\npublic void initializeServer(SSLContext::Ptr ptrContext)\nInitializes the server side of the SSLManager server-side SSLContext.\n\n\npublic void initializeClient(SSLContext::Ptr ptrContext)\nInitializes the client side of the SSLManager with a default client-side SSLContext.\n\n\npublic SSLContext::Ptr defaultServerContext()\nReturns the default Context used by the server if initialized.\n\n\npublic SSLContext::Ptr defaultClientContext()\nReturns the default Context used by the client if initialized.\n\n\npublic void shutdown()\n\n\n\n\nMembers\npublic`SignalVerificationErrorDetails`& > ServerVerificationError \nFired whenever a certificate verification error is detected by the server during a handshake.\npublic`SignalVerificationErrorDetails`& > ClientVerificationError \nFired whenever a certificate verification error is detected by the client during a handshake.\npublicSignal PrivateKeyPassphraseRequired \nFired when a encrypted certificate is loaded. Not setting the password in the event parameter will result in a failure to load the certificate.\npublic void initializeServer(SSLContext::Ptr ptrContext) \nInitializes the server side of the SSLManager server-side SSLContext.\npublic void initializeClient(SSLContext::Ptr ptrContext) \nInitializes the client side of the SSLManager with a default client-side SSLContext.\npublic SSLContext::Ptr defaultServerContext() \nReturns the default Context used by the server if initialized.\npublic SSLContext::Ptr defaultClientContext() \nReturns the default Context used by the client if initialized.\npublic void shutdown() \nShuts down the SSLManager and releases the default Context objects. After a call to shutdown(), the SSLManager can no longer be used.\nNormally, it's not necessary to call this method directly, as this will be called either by uninitializeSSL(), or when the SSLManager instance is destroyed.\nclass scy::net::SSLSession \nclass scy::net::SSLSession\n  : public scy::SharedObject\nThis class encapsulates a SSL session object used with session caching on the client side.\nFor session caching to work, a client must save the session object from an existing connection, if it wants to reuse it with a future connection.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic SSL_SESSION * sslSession() const\nReturns the stored OpenSSL SSL_SESSION object.\n\n\npublic  SSLSession(SSL_SESSION * ptr)\n\n\n\npublic  ~SSLSession()\n\n\n\npublic  SSLSession()\n\n\n\nprotected SSL_SESSION * _ptr\n\n\n\n\nMembers\npublic SSL_SESSION * sslSession() const \nReturns the stored OpenSSL SSL_SESSION object.\npublic  SSLSession(SSL_SESSION * ptr) \nCreates a new Session object, using the given SSL_SESSION object.\nThe SSL_SESSION's reference count is not changed.\npublic  ~SSLSession() \nDestroys the Session.\nCalls SSL_SESSION_free() on the stored SSL_SESSION object.\npublic  SSLSession() \nprotected SSL_SESSION * _ptr \nclass scy::net::SSLSocket \nclass scy::net::SSLSocket\n  : public scy::net::TCPSocket\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  SSLSocket(uv::Loop * loop)\n\n\n\npublic  SSLSocket(SSLContext::Ptr sslContext,uv::Loop * loop)\n\n\n\npublic  SSLSocket(SSLContext::Ptr sslContext,SSLSession::Ptr session,uv::Loop * loop)\n\n\n\npublic virtual  ~SSLSocket()\n\n\n\npublic virtual bool shutdown()\nInitialize the SSLSocket with the given SSLContext.\n\n\npublic virtual void close()\nCloses the socket forcefully.\n\n\npublic virtual int send(const char * data,std::size_t len,int flags)\n\n\n\npublic virtual int send(const char * data,std::size_t len,constnet::Address& peerAddress,int flags)\n\n\n\npublic void useContext(SSLContext::Ptr context)\nUse the given SSL context for this socket.\n\n\npublic SSLContext::Ptr context() const\nReturns the SSL context used for this socket.\n\n\npublic void useSession(SSLSession::Ptr session)\n\n\n\npublic SSLSession::Ptr currentSession()\n\n\n\npublic bool sessionWasReused()\n\n\n\npublic int available() const\n\n\n\npublic X509 * peerCertificate() const\nReturns the peer's certificate.\n\n\npublic virtual net::TransportType transport() const\nThe transport protocol: TCP, UDP or SSLTCP.\n\n\npublic virtual void acceptConnection()\n\n\n\npublic virtual void onConnect(uv_connect_t * handle,int status)\n\n\n\npublic virtual void onRead(const char * data,std::size_t len)\nReads raw encrypted SSL data.\n\n\nprotected net::SSLContext::Ptr _context\nvirtual bool readStart();\n\n\nprotected net::SSLSession::Ptr _session\n\n\n\nprotectednet::SSLAdapter_sslAdapter\n\n\n\n\nMembers\npublic  SSLSocket(uv::Loop * loop) \npublic  SSLSocket(SSLContext::Ptr sslContext,uv::Loop * loop) \npublic  SSLSocket(SSLContext::Ptr sslContext,SSLSession::Ptr session,uv::Loop * loop) \npublic virtual  ~SSLSocket() \npublic virtual bool shutdown() \nInitialize the SSLSocket with the given SSLContext.\nInitializes the socket and establishes a secure connection to the TCP server at the given address.\nThe SSL handshake is performed when the socket is connected. Shuts down the connection by attempting an orderly SSL shutdown, then actually shutting down the TCP connection.\npublic virtual void close() \nCloses the socket forcefully.\npublic virtual int send(const char * data,std::size_t len,int flags) \nSends the given data buffer to the connected peer. Returns the number of bytes sent or -1 on error. No exception will be thrown. For TCP sockets the given peer address must match the connected peer address.\npublic virtual int send(const char * data,std::size_t len,constnet::Address& peerAddress,int flags) \npublic void useContext(SSLContext::Ptr context) \nUse the given SSL context for this socket.\npublic SSLContext::Ptr context() const \nReturns the SSL context used for this socket.\npublic void useSession(SSLSession::Ptr session) \nSets the SSL session to use for the next connection. Setting a previously saved Session object is necessary to enable session caching.\nTo remove the currently set session, a nullptr pointer can be given.\nMust be called before connect() to be effective.\npublic SSLSession::Ptr currentSession() \nReturns the SSL session of the current connection, for reuse in a future connection (if session caching is enabled).\nIf no connection is established, returns nullptr.\npublic bool sessionWasReused() \nReturns true if a reused session was negotiated during the handshake.\npublic int available() const \nReturns the number of bytes available from the SSL buffer for immediate reading.\npublic X509 * peerCertificate() const \nReturns the peer's certificate.\npublic virtual net::TransportType transport() const \nThe transport protocol: TCP, UDP or SSLTCP.\npublic virtual void acceptConnection() \npublic virtual void onConnect(uv_connect_t * handle,int status) \npublic virtual void onRead(const char * data,std::size_t len) \nReads raw encrypted SSL data.\nprotected net::SSLContext::Ptr _context \nvirtual bool readStart();\nprotected net::SSLSession::Ptr _session \nprotectednet::SSLAdapter_sslAdapter \nclass scy::net::TCPSocket \nclass scy::net::TCPSocket\n  : public scy::Stream\n  : public scy::net::Socket\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicSignal AcceptConnection\n\n\n\npublic  TCPSocket(uv::Loop * loop)\n\n\n\npublic virtual  ~TCPSocket()\n\n\n\npublic virtual bool shutdown()\n\n\n\npublic virtual void close()\n\n\n\npublic virtual void connect(constnet::Address& address)\n\n\n\npublic virtual int send(const char * data,std::size_t len,int flags)\n\n\n\npublic virtual int send(const char * data,std::size_t len,constnet::Address& peerAddress,int flags)\n\n\n\npublic virtual void bind(constnet::Address& address,unsigned flags)\n\n\n\npublic virtual void listen(int backlog)\n\n\n\npublic virtual void acceptConnection()\n\n\n\npublic virtual void setNoDelay(bool enable)\n\n\n\npublic virtual void setKeepAlive(int enable,unsigned int delay)\n\n\n\npublic virtual uv::Loop * loop() const\nReturns the socket event loop.\n\n\npublic void setMode(SocketModemode)\n\n\n\npublic constSocketModemode() const\n\n\n\npublic virtual void setError(constscy::Error& err)\n\n\n\npublic virtual constscy::Error& error() const\nReturn the socket error if any.\n\n\npublic virtual bool closed() const\nReturns true if the native socket handle is closed.\n\n\npublic virtualnet::Addressaddress() const\n\n\n\npublic virtualnet::AddresspeerAddress() const\n\n\n\npublic virtual net::TransportType transport() const\nReturns the TCP transport protocol.\n\n\npublic virtual void onConnect(uv_connect_t * handle,int status)\n\n\n\npublic virtual void onAcceptConnection(uv_stream_t * handle,int status)\n\n\n\npublic virtual void onRead(const char * data,std::size_t len)\n\n\n\npublic virtual void onRecv(constMutableBuffer& buf)\n\n\n\npublic virtual void onError(constscy::Error&)\n\n\n\npublic virtual void onClose()\nOverride to handle closure.\n\n\nprotected uv_connect_t * _connectReq\n\n\n\nprotectedSocketMode_mode\n\n\n\nprotected virtual void init()\nInitializes the underlying socket context.\n\n\n\nMembers\npublicSignal AcceptConnection \npublic  TCPSocket(uv::Loop * loop) \npublic virtual  ~TCPSocket() \npublic virtual bool shutdown() \nSends the shutdown packet which should result is socket closure via callback.\npublic virtual void close() \nCloses and resets the stream handle. This will close the active socket/pipe and destroy the uv_stream_t handle.\nIf the stream is already closed this call will have no side-effects.\npublic virtual void connect(constnet::Address& address) \nConnects to the given peer IP address.\nThrows an exception if the address is malformed. Connection errors can be handled via the Error signal.\npublic virtual int send(const char * data,std::size_t len,int flags) \nSends the given data buffer to the connected peer. Returns the number of bytes sent or -1 on error. No exception will be thrown. For TCP sockets the given peer address must match the connected peer address.\npublic virtual int send(const char * data,std::size_t len,constnet::Address& peerAddress,int flags) \npublic virtual void bind(constnet::Address& address,unsigned flags) \nBind a local address to the socket. The address may be IPv4 or IPv6 (if supported).\nThrows an Exception on error.\npublic virtual void listen(int backlog) \nListens the socket on the given address.\nThrows an Exception on error.\npublic virtual void acceptConnection() \npublic virtual void setNoDelay(bool enable) \npublic virtual void setKeepAlive(int enable,unsigned int delay) \npublic virtual uv::Loop * loop() const \nReturns the socket event loop.\npublic void setMode(SocketModemode) \npublic constSocketModemode() const \npublic virtual void setError(constscy::Error& err) \nSets the socket error.\nSetting the error will result in socket closure.\npublic virtual constscy::Error& error() const \nReturn the socket error if any.\npublic virtual bool closed() const \nReturns true if the native socket handle is closed.\npublic virtualnet::Addressaddress() const \nReturns the IP address and port number of the socket. A wildcard address is returned if the socket is not connected.\npublic virtualnet::AddresspeerAddress() const \nReturns the IP address and port number of the peer socket. A wildcard address is returned if the socket is not connected.\npublic virtual net::TransportType transport() const \nReturns the TCP transport protocol.\npublic virtual void onConnect(uv_connect_t * handle,int status) \npublic virtual void onAcceptConnection(uv_stream_t * handle,int status) \npublic virtual void onRead(const char * data,std::size_t len) \npublic virtual void onRecv(constMutableBuffer& buf) \npublic virtual void onError(constscy::Error&) \nOverride to handle errors. The error may be a UV error, or a custom error.\npublic virtual void onClose() \nOverride to handle closure.\nprotected uv_connect_t * _connectReq \nprotectedSocketMode_mode \nprotected virtual void init() \nInitializes the underlying socket context.\nclass scy::net::Transaction \nclass scy::net::Transaction\n  : public scy::PacketTransaction\n  : public scy::net::PacketSocketAdapter\nThis class provides request/response functionality for IPacket types emitted from a Socket.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  Transaction(const net::Socket::Ptr & socket,constAddress& peerAddress,int timeout,int retries,uv::Loop * loop)\n\n\n\npublic inline virtual bool send()\n\n\n\npublic inline virtual void cancel()\n\n\n\npublic inline virtual void dispose()\n\n\n\npublic inlineAddresspeerAddress() const\n\n\n\nprotectedAddress_peerAddress\n\n\n\nprotected inline virtual  ~Transaction()\n\n\n\nprotected inline virtual void onPacket(IPacket& packet)\n\n\n\nprotected inline virtual void onResponse()\nCalled when a successful response match is received.\n\n\nprotected inline virtual bool checkResponse(const PacketT & packet)\n\n\n\n\nMembers\npublic inline  Transaction(const net::Socket::Ptr & socket,constAddress& peerAddress,int timeout,int retries,uv::Loop * loop) \npublic inline virtual bool send() \nStarts the transaction timer and sends the request. Overriding classes should implement send logic here.\npublic inline virtual void cancel() \nCancellation means that the agent will not retransmit the request, will not treat the lack of response to be a failure, but will wait the duration of the transaction timeout for a response.\npublic inline virtual void dispose() \nSchedules the transaction for deferred deletion.\nIt is safe to call this function while the transaction is still active, providing the call is made from the same loop thread which the timer is running on.\nProtected by the base implementation as this is called by the internal state machine.\npublic inlineAddresspeerAddress() const \nprotectedAddress_peerAddress \nprotected inline virtual  ~Transaction() \nprotected inline virtual void onPacket(IPacket& packet) \nOverrides the PacketSocketAdapter::onPacket callback for checking potential response candidates.\nprotected inline virtual void onResponse() \nCalled when a successful response match is received.\nprotected inline virtual bool checkResponse(const PacketT & packet) \nSub classes should derive this method to implement response checking logic. The base implementation only performs address matching.\nclass scy::net::UDPSocket \nclass scy::net::UDPSocket\n  : public scy::net::Socket\n  : public scy::uv::Handle\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  UDPSocket(uv::Loop * loop)\n\n\n\npublic virtual  ~UDPSocket()\n\n\n\npublic virtual void connect(constnet::Address& address)\n\n\n\npublic virtual void close()\nCloses the underlying socket.\n\n\npublic virtual void bind(constnet::Address& address,unsigned flags)\n\n\n\npublic virtual int send(const char * data,std::size_t len,int flags)\n\n\n\npublic virtual int send(const char * data,std::size_t len,constnet::Address& peerAddress,int flags)\n\n\n\npublic virtual bool setBroadcast(bool flag)\n\n\n\npublic virtual bool setMulticastLoop(bool flag)\n\n\n\npublic virtual bool setMulticastTTL(int ttl)\n\n\n\npublic virtualnet::Addressaddress() const\n\n\n\npublic virtualnet::AddresspeerAddress() const\n\n\n\npublic virtual net::TransportType transport() const\nReturns the UDP transport protocol.\n\n\npublic virtual void setError(constscy::Error& err)\n\n\n\npublic virtual constscy::Error& error() const\nReturn the socket error if any.\n\n\npublic virtual bool closed() const\n\n\n\npublic virtual uv::Loop * loop() const\nReturns the socket event loop.\n\n\npublic virtual void onRecv(constMutableBuffer& buf,constnet::Address& address)\n\n\n\nprotectednet::Address_peer\n\n\n\nprotected Buffer _buffer\n\n\n\nprotected virtual void init()\nInitializes the underlying socket context.\n\n\nprotected virtual bool recvStart()\n\n\n\nprotected virtual bool recvStop()\n\n\n\nprotected virtual void onError(constscy::Error&)\n\n\n\nprotected virtual void onClose()\nOverride to handle closure.\n\n\n\nMembers\npublic  UDPSocket(uv::Loop * loop) \npublic virtual  ~UDPSocket() \npublic virtual void connect(constnet::Address& address) \nConnects to the given peer IP address.\nThrows an exception if the address is malformed. Connection errors can be handled via the Error signal.\npublic virtual void close() \nCloses the underlying socket.\npublic virtual void bind(constnet::Address& address,unsigned flags) \nBind a local address to the socket. The address may be IPv4 or IPv6 (if supported).\nThrows an Exception on error.\npublic virtual int send(const char * data,std::size_t len,int flags) \nSends the given data buffer to the connected peer. Returns the number of bytes sent or -1 on error. No exception will be thrown. For TCP sockets the given peer address must match the connected peer address.\npublic virtual int send(const char * data,std::size_t len,constnet::Address& peerAddress,int flags) \npublic virtual bool setBroadcast(bool flag) \npublic virtual bool setMulticastLoop(bool flag) \npublic virtual bool setMulticastTTL(int ttl) \npublic virtualnet::Addressaddress() const \nThe locally bound address.\nThis function will not throw. A Wildcard 0.0.0.0:0 address is returned if the socket is closed or invalid.\npublic virtualnet::AddresspeerAddress() const \nThe connected peer address.\nThis function will not throw. A Wildcard 0.0.0.0:0 address is returned if the socket is closed or invalid.\npublic virtual net::TransportType transport() const \nReturns the UDP transport protocol.\npublic virtual void setError(constscy::Error& err) \nSets the socket error.\nSetting the error will result in socket closure.\npublic virtual constscy::Error& error() const \nReturn the socket error if any.\npublic virtual bool closed() const \nReturns true if the native socket handle is closed.\npublic virtual uv::Loop * loop() const \nReturns the socket event loop.\npublic virtual void onRecv(constMutableBuffer& buf,constnet::Address& address) \nprotectednet::Address_peer \nprotected Buffer _buffer \nprotected virtual void init() \nInitializes the underlying socket context.\nprotected virtual bool recvStart() \nprotected virtual bool recvStop() \nprotected virtual void onError(constscy::Error&) \nOverride to handle errors. The error may be a UV error, or a custom error.\nprotected virtual void onClose() \nOverride to handle closure.\nclass scy::net::VerificationErrorDetails \nA utility class for certificate error handling.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  VerificationErrorDetails(constcrypto::X509Certificate& cert,int errDepth,int errNum,const std::string & errMsg)\nCreates the VerificationErrorDetails. _ignoreError is per default set to false.\n\n\npublic  ~VerificationErrorDetails()\nDestroys the VerificationErrorDetails.\n\n\npublic inline constcrypto::X509Certificate& certificate() const\nReturns the certificate that caused the error.\n\n\npublic inline int errorDepth() const\nReturns the position of the certificate in the certificate chain.\n\n\npublic inline int errorNumber() const\nReturns the id of the error.\n\n\npublic inline const std::string & errorMessage() const\nReturns the textual presentation of the errorNumber.\n\n\npublic inline void setIgnoreError(bool ignoreError)\nsetIgnoreError to true, if a verification error is judged non-fatal by the user.\n\n\npublic inline bool getIgnoreError() const\nreturns the value of _ignoreError\n\n\n\nMembers\npublic  VerificationErrorDetails(constcrypto::X509Certificate& cert,int errDepth,int errNum,const std::string & errMsg) \nCreates the VerificationErrorDetails. _ignoreError is per default set to false.\npublic  ~VerificationErrorDetails() \nDestroys the VerificationErrorDetails.\npublic inline constcrypto::X509Certificate& certificate() const \nReturns the certificate that caused the error.\npublic inline int errorDepth() const \nReturns the position of the certificate in the certificate chain.\npublic inline int errorNumber() const \nReturns the id of the error.\npublic inline const std::string & errorMessage() const \nReturns the textual presentation of the errorNumber.\npublic inline void setIgnoreError(bool ignoreError) \nsetIgnoreError to true, if a verification error is judged non-fatal by the user.\npublic inline bool getIgnoreError() const \nreturns the value of _ignoreError\nstruct scy::net::DNSResult \nDNS Resolver\nExample:\nstatic void onDNSResult(const net::DNSResult& result)\n{\n    do something with result\n}\nnet::resolveDNS(\"google.com\", 80, onDNSResult);\n\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::string host\nThe host to resolve.\n\n\npublic std::uint16_t port\nThe host port to resolve.\n\n\npublicnet::Addressaddr\nThe resolved address.\n\n\npublic struct addrinfo * info\nThe libuv uv_getaddrinfo result.\n\n\npublic struct addrinfo * hints\nlibuv uv_getaddrinfo hints (optional)\n\n\npublic std::functionDNSResult &)> callback\nResult callback function.\n\n\npublic void * opaque\nClient data pointer.\n\n\npublic enum scy::net::DNSResult::Status status\n\n\n\npublic inline bool resolving() const\n\n\n\npublic inline bool success() const\n\n\n\npublic inline bool failed() const\n\n\n\npublic inline bool complete() const\n\n\n\npublic inline  DNSResult()\n\n\n\n\nMembers\npublic std::string host \nThe host to resolve.\npublic std::uint16_t port \nThe host port to resolve.\npublicnet::Addressaddr \nThe resolved address.\npublic struct addrinfo * info \nThe libuv uv_getaddrinfo result.\npublic struct addrinfo * hints \nlibuv uv_getaddrinfo hints (optional)\npublic std::functionDNSResult &)> callback \nResult callback function.\npublic void * opaque \nClient data pointer.\npublic enum scy::net::DNSResult::Status status \npublic inline bool resolving() const \npublic inline bool success() const \npublic inline bool failed() const \npublic inline bool complete() const \npublic inline  DNSResult() \nstruct scy::net::PacketInfo \nstruct scy::net::PacketInfo\n  : public scy::IPacketInfo\nProvides information about packets emitted from a socket. See SocketPacket.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic Socket::Ptr socket\nThe source socket.\n\n\npublicAddresspeerAddress\n\n\n\npublic inline  PacketInfo(const Socket::Ptr & socket,constAddress& peerAddress)\n\n\n\npublic inline  PacketInfo(constPacketInfo& r)\n\n\n\npublic inline virtualIPacketInfo* clone() const\n\n\n\npublic inline virtual  ~PacketInfo()\n\n\n\n\nMembers\npublic Socket::Ptr socket \nThe source socket.\npublicAddresspeerAddress \nThe originating peer address. For TCP this will always be connected address.\npublic inline  PacketInfo(const Socket::Ptr & socket,constAddress& peerAddress) \npublic inline  PacketInfo(constPacketInfo& r) \npublic inline virtualIPacketInfo* clone() const \npublic inline virtual  ~PacketInfo() \n"},"api-pacm.html":{"url":"api-pacm.html","title":"Pacm","keywords":"","body":"Module  pacm\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy::pacm\n\n\n\n\nnamespace scy::pacm \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::pacm::InstallMonitor\n\n\n\nclassscy::pacm::InstallTask\nThis class implements the package installation procedure.\n\n\nclassscy::pacm::PackageManager\n\n\n\nstructscy::pacm::InstallationState\n\n\n\nstructscy::pacm::InstallOptions\nPackage installation options.\n\n\nstructscy::pacm::LocalPackage\n\n\n\nstructscy::pacm::Package\n\n\n\nstructscy::pacm::PackagePair\n\n\n\nstructscy::pacm::RemotePackage\n\n\n\n\nclass scy::pacm::InstallMonitor \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic`Signal3InstallTask &, const InstallationState &, const InstallationState`& > InstallStateChange\nProxies state change events from managed packages.\n\n\npublic`SignalLocalPackage`& > InstallComplete\nSignals when a managed install task completes.\n\n\npublicSignal Progress\nSignals on overall progress update [0-100].\n\n\npublicSignal Complete\nSignals on all tasks complete.\n\n\npublic  InstallMonitor()\n\n\n\npublic virtual  ~InstallMonitor()\n\n\n\npublic virtual void addTask(InstallTask::Ptr task)\nAdds a task to monitor.\n\n\npublic virtual void startAll()\nStarts all monitored tasks.\n\n\npublic virtual void cancelAll()\nCancels all monitored tasks.\n\n\npublic virtual bool isComplete() const\n\n\n\npublic virtual InstallTaskPtrVec tasks() const\nReturns the list of monitored package tasks.\n\n\npublic virtual LocalPackageVec packages() const\nReturns the list of monitored packages.\n\n\nprotected mutableMutex_mutex\n\n\n\nprotected InstallTaskPtrVec _tasks\n\n\n\nprotected LocalPackageVec _packages\n\n\n\nprotected int _progress\n\n\n\nprotected virtual void onInstallStateChange(void * sender,InstallationState& state,constInstallationState& oldState)\n\n\n\nprotected virtual void onInstallComplete(void * sender)\n\n\n\nprotected virtual void setProgress(int value)\n\n\n\n\nMembers\npublic`Signal3InstallTask &, const InstallationState &, const InstallationState`& > InstallStateChange \nProxies state change events from managed packages.\npublic`SignalLocalPackage`& > InstallComplete \nSignals when a managed install task completes.\npublicSignal Progress \nSignals on overall progress update [0-100].\npublicSignal Complete \nSignals on all tasks complete.\npublic  InstallMonitor() \npublic virtual  ~InstallMonitor() \npublic virtual void addTask(InstallTask::Ptr task) \nAdds a task to monitor.\npublic virtual void startAll() \nStarts all monitored tasks.\npublic virtual void cancelAll() \nCancels all monitored tasks.\npublic virtual bool isComplete() const \nReturns true if all install tasks have completed, either successfully or unsuccessfully.\npublic virtual InstallTaskPtrVec tasks() const \nReturns the list of monitored package tasks.\npublic virtual LocalPackageVec packages() const \nReturns the list of monitored packages.\nprotected mutableMutex_mutex \nprotected InstallTaskPtrVec _tasks \nprotected LocalPackageVec _packages \nprotected int _progress \nprotected virtual void onInstallStateChange(void * sender,InstallationState& state,constInstallationState& oldState) \nprotected virtual void onInstallComplete(void * sender) \nprotected virtual void setProgress(int value) \nclass scy::pacm::InstallTask \nclass scy::pacm::InstallTask\n  : public scy::async::Runnable\n  : public scy::Stateful\nThis class implements the package installation procedure.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicSignal Progress\nSignals on progress update [0-100].\n\n\npublicNullSignalComplete\n\n\n\npublic  InstallTask(PackageManager& manager,LocalPackage* local,RemotePackage* remote,constInstallOptions& options,uv::Loop * loop)\n\n\n\npublic virtual  ~InstallTask()\n\n\n\npublic virtual void start()\n\n\n\npublic virtual void cancel()\n\n\n\npublic virtual void doDownload()\nDownloads the package archive from the server.\n\n\npublic virtual void doExtract()\n\n\n\npublic virtual void doFinalize()\n\n\n\npublic virtual void setComplete()\n\n\n\npublic virtualPackage::AssetgetRemoteAsset() const\n\n\n\npublic virtualLocalPackage* local() const\n\n\n\npublic virtualRemotePackage* remote() const\n\n\n\npublic virtualInstallOptions& options()\n\n\n\npublic virtual uv::Loop * loop() const\n\n\n\npublic virtual bool valid() const\n\n\n\npublic virtual bool cancelled() const\nTrue when the task has been cancelled.\n\n\npublic virtual bool failed() const\n\n\n\npublic virtual bool success() const\n\n\n\npublic virtual bool complete() const\n\n\n\npublic virtual int progress() const\n\n\n\nprotected mutableMutex_mutex\n\n\n\nprotectedIdler_runner\n\n\n\nprotectedPackageManager& _manager\n\n\n\nprotectedLocalPackage* _local\n\n\n\nprotectedRemotePackage* _remote\n\n\n\nprotectedInstallOptions_options\n\n\n\nprotected int _progress\n\n\n\nprotected bool _downloading\n\n\n\nprotected http::ClientConnection::Ptr _dlconn\n\n\n\nprotected uv::Loop * _loop\n\n\n\nprotected virtual void run()\n\n\n\nprotected virtual void onStateChange(InstallationState& state,constInstallationState& oldState)\n\n\n\nprotected virtual void onDownloadProgress(void * sender,const double & progress)\n\n\n\nprotected virtual void onDownloadComplete(void * sender,consthttp::Response& response)\n\n\n\nprotected virtual void setProgress(int value)\n\n\n\n\nMembers\npublicSignal Progress \nSignals on progress update [0-100].\npublicNullSignalComplete \nSignals on task completion for both success and failure cases.\npublic  InstallTask(PackageManager& manager,LocalPackage* local,RemotePackage* remote,constInstallOptions& options,uv::Loop * loop) \npublic virtual  ~InstallTask() \npublic virtual void start() \npublic virtual void cancel() \npublic virtual void doDownload() \nDownloads the package archive from the server.\npublic virtual void doExtract() \nExtracts the downloaded package files to the intermediate directory.\npublic virtual void doFinalize() \nMoves extracted files from the intermediate directory to the installation directory.\npublic virtual void setComplete() \nCalled when the task completes either successfully or in error. This will trigger destruction.\npublic virtualPackage::AssetgetRemoteAsset() const \npublic virtualLocalPackage* local() const \npublic virtualRemotePackage* remote() const \npublic virtualInstallOptions& options() \npublic virtual uv::Loop * loop() const \npublic virtual bool valid() const \npublic virtual bool cancelled() const \nTrue when the task has been cancelled.\npublic virtual bool failed() const \npublic virtual bool success() const \npublic virtual bool complete() const \npublic virtual int progress() const \nprotected mutableMutex_mutex \nprotectedIdler_runner \nprotectedPackageManager& _manager \nprotectedLocalPackage* _local \nprotectedRemotePackage* _remote \nprotectedInstallOptions_options \nprotected int _progress \nprotected bool _downloading \nprotected http::ClientConnection::Ptr _dlconn \nprotected uv::Loop * _loop \nprotected virtual void run() \nCalled asynchronously by the thread to do the work.\nprotected virtual void onStateChange(InstallationState& state,constInstallationState& oldState) \nprotected virtual void onDownloadProgress(void * sender,const double & progress) \nprotected virtual void onDownloadComplete(void * sender,consthttp::Response& response) \nprotected virtual void setProgress(int value) \nclass scy::pacm::PackageManager \nThe Package Manager provides an interface for managing, installing, updating and uninstalling Pacm packages.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic`Signalhttp::Response`& > RemotePackageResponse\n\n\n\npublic`SignalLocalPackage`& > PackageUninstalled\nSignals when a package is uninstalled.\n\n\npublic`SignalInstallTask`& > InstallTaskCreated\n\n\n\npublic`SignalInstallTask`& > InstallTaskComplete\n\n\n\npublic  PackageManager(constOptions& options)\n\n\n\npublic virtual  ~PackageManager()\n\n\n\npublic virtual void initialize()\n\n\n\npublic virtual void uninitialize()\n\n\n\npublic virtual bool initialized() const\n\n\n\npublic virtual void createDirectories()\n\n\n\npublic virtual void queryRemotePackages()\nQueries the server for a list of available packages.\n\n\npublic virtual void loadLocalPackages()\n\n\n\npublic virtual void loadLocalPackages(const std::string & dir)\n\n\n\npublic virtual bool saveLocalPackages(bool whiny)\n\n\n\npublic virtual bool saveLocalPackage(LocalPackage& package,bool whiny)\nSaves the local package manifest to the file system.\n\n\npublic virtual InstallTask::Ptr installPackage(const std::string & name,constInstallOptions& options)\n\n\n\npublic virtual bool installPackages(const StringVec & ids,constInstallOptions& options,InstallMonitor* monitor,bool whiny)\n\n\n\npublic virtual InstallTask::Ptr updatePackage(const std::string & name,constInstallOptions& options)\n\n\n\npublic virtual bool updatePackages(const StringVec & ids,constInstallOptions& options,InstallMonitor* monitor,bool whiny)\n\n\n\npublic virtual bool updateAllPackages(bool whiny)\nUpdates all installed packages.\n\n\npublic virtual bool uninstallPackages(const StringVec & ids,bool whiny)\nUninstalls multiple packages.\n\n\npublic virtual bool uninstallPackage(const std::string & id,bool whiny)\nUninstalls a single package.\n\n\npublic virtual bool hasUnfinalizedPackages()\n\n\n\npublic virtual bool finalizeInstallations(bool whiny)\n\n\n\npublic virtual InstallTask::Ptr getInstallTask(const std::string & id) const\nGets the install task for the given package ID.\n\n\npublic virtual InstallTaskPtrVec tasks() const\nReturns a list of all tasks.\n\n\npublic virtual void cancelAllTasks()\n\n\n\npublic virtual PackagePairVec getPackagePairs() const\n\n\n\npublic virtual PackagePairVec getUpdatablePackagePairs() const\n\n\n\npublic virtualPackagePairgetPackagePair(const std::string & id,bool whiny) const\n\n\n\npublic virtualPackagePairgetOrCreatePackagePair(const std::string & id)\n\n\n\npublic virtual InstallTask::Ptr createInstallTask(PackagePair& pair,constInstallOptions& options)\nCreates a package installation task for the given pair.\n\n\npublic virtual std::string installedPackageVersion(const std::string & id) const\n\n\n\npublic virtualPackage::AssetgetLatestInstallableAsset(constPackagePair& pair,constInstallOptions& options) const\n\n\n\npublic virtual bool hasAvailableUpdates(constPackagePair& pair) const\nReturns true if there are updates available for this package, false otherwise.\n\n\npublic void clearCache()\nClears all files in the cache directory.\n\n\npublic bool clearPackageCache(LocalPackage& package)\nClears a package archive from the local cache.\n\n\npublic bool clearCacheFile(const std::string & fileName,bool whiny)\nClears a file from the local cache.\n\n\npublic bool hasCachedFile(Package::Asset& asset)\nChecks if a package archive exists in the local cache.\n\n\npublic bool isSupportedFileType(const std::string & fileName)\nChecks if the file type is a supported package archive.\n\n\npublic std::string getCacheFilePath(const std::string & fileName)\n\n\n\npublic std::string getPackageDataDir(const std::string & id)\n\n\n\npublic virtualOptions& options()\n\n\n\npublic virtualRemotePackageStore& remotePackages()\n\n\n\npublic virtualLocalPackageStore& localPackages()\n\n\n\nprotected mutableMutex_mutex\n\n\n\nprotectedLocalPackageStore_localPackages\n\n\n\nprotectedRemotePackageStore_remotePackages\n\n\n\nprotected InstallTaskPtrVec _tasks\n\n\n\nprotectedOptions_options\n\n\n\nprotected void onPackageInstallComplete(void * sender)\n\n\n\nprotected void onPackageQueryResponse(void * sender,consthttp::Response& response)\n\n\n\n\nMembers\npublic`Signalhttp::Response`& > RemotePackageResponse \nSignals when the remote package list have been downloaded from the server.\npublic`SignalLocalPackage`& > PackageUninstalled \nSignals when a package is uninstalled.\npublic`SignalInstallTask`& > InstallTaskCreated \nSignals when an installation task is created, before it is started.\npublic`SignalInstallTask`& > InstallTaskComplete \nSignals when a package installation tasks completes, either successfully or in error.\npublic  PackageManager(constOptions& options) \npublic virtual  ~PackageManager() \npublic virtual void initialize() \npublic virtual void uninitialize() \npublic virtual bool initialized() const \npublic virtual void createDirectories() \nCreates the package manager directory structure if it does not already exist.\npublic virtual void queryRemotePackages() \nQueries the server for a list of available packages.\npublic virtual void loadLocalPackages() \nLoads all local package manifests from file system. Clears all in memory package manifests.\npublic virtual void loadLocalPackages(const std::string & dir) \nLoads all local package manifests residing the the given directory. This method may be called multiple times for different paths because it does not clear in memory package manifests.\npublic virtual bool saveLocalPackages(bool whiny) \npublic virtual bool saveLocalPackage(LocalPackage& package,bool whiny) \nSaves the local package manifest to the file system.\npublic virtual InstallTask::Ptr installPackage(const std::string & name,constInstallOptions& options) \nInstalls a single package. The returned InstallTask must be started. If the package is already up-to-date, a nullptr will be returned. Any other error will throw a std::runtime_error.\npublic virtual bool installPackages(const StringVec & ids,constInstallOptions& options,InstallMonitor* monitor,bool whiny) \nInstalls multiple packages. The same options will be passed to each task. If a InstallMonitor instance was passed in the tasks will need to be started, otherwise they will be auto-started. The PackageManager does not take ownership of the InstallMonitor.\npublic virtual InstallTask::Ptr updatePackage(const std::string & name,constInstallOptions& options) \nUpdates a single package. Throws an exception if the package does not exist. The returned InstallTask must be started.\npublic virtual bool updatePackages(const StringVec & ids,constInstallOptions& options,InstallMonitor* monitor,bool whiny) \nUpdates multiple packages. Throws an exception if the package does not exist. If a InstallMonitor instance was passed in the tasks will need to be started, otherwise they will be auto-started. The PackageManager does not take ownership of the InstallMonitor.\npublic virtual bool updateAllPackages(bool whiny) \nUpdates all installed packages.\npublic virtual bool uninstallPackages(const StringVec & ids,bool whiny) \nUninstalls multiple packages.\npublic virtual bool uninstallPackage(const std::string & id,bool whiny) \nUninstalls a single package.\npublic virtual bool hasUnfinalizedPackages() \nReturns true if there are updates available that have not yet been finalized. Packages may be unfinalized if there were files in use at the time of installation.\npublic virtual bool finalizeInstallations(bool whiny) \nFinalizes active installations by moving all package files to their target destination. If files are to be overwritten they must not be in use or finalization will fail.\npublic virtual InstallTask::Ptr getInstallTask(const std::string & id) const \nGets the install task for the given package ID.\npublic virtual InstallTaskPtrVec tasks() const \nReturns a list of all tasks.\npublic virtual void cancelAllTasks() \nAborts all package installation tasks. All tasks must be aborted before clearing local or remote manifests.\npublic virtual PackagePairVec getPackagePairs() const \nReturns all package pairs, valid or invalid. Some pairs may not have both local and remote package pointers.\npublic virtual PackagePairVec getUpdatablePackagePairs() const \nReturns a list of package pairs which may be updated. All pairs will have both local and remote package pointers, and the remote version will be newer than the local version.\npublic virtualPackagePairgetPackagePair(const std::string & id,bool whiny) const \nReturns a local and remote package pair. An exception will be thrown if either the local or remote packages aren't available or are invalid.\npublic virtualPackagePairgetOrCreatePackagePair(const std::string & id) \nReturns a local and remote package pair. If the local package doesn't exist it will be created from the remote package. If the remote package doesn't exist a NotFoundException will be thrown.\npublic virtual InstallTask::Ptr createInstallTask(PackagePair& pair,constInstallOptions& options) \nCreates a package installation task for the given pair.\npublic virtual std::string installedPackageVersion(const std::string & id) const \nReturns the version number of an installed package. Exceptions will be thrown if the package does not exist, or is not fully installed.\npublic virtualPackage::AssetgetLatestInstallableAsset(constPackagePair& pair,constInstallOptions& options) const \nReturns the best asset to install, or throws a descriptive exception if no updates are available, or if the package is already up-to-date. This method takes version and SDK locks into consideration.\npublic virtual bool hasAvailableUpdates(constPackagePair& pair) const \nReturns true if there are updates available for this package, false otherwise.\npublic void clearCache() \nClears all files in the cache directory.\npublic bool clearPackageCache(LocalPackage& package) \nClears a package archive from the local cache.\npublic bool clearCacheFile(const std::string & fileName,bool whiny) \nClears a file from the local cache.\npublic bool hasCachedFile(Package::Asset& asset) \nChecks if a package archive exists in the local cache.\npublic bool isSupportedFileType(const std::string & fileName) \nChecks if the file type is a supported package archive.\npublic std::string getCacheFilePath(const std::string & fileName) \nReturns the full path of the cached file if it exists, or an empty path if the file doesn't exist.\npublic std::string getPackageDataDir(const std::string & id) \nReturns the package data directory for the given package ID.\npublic virtualOptions& options() \npublic virtualRemotePackageStore& remotePackages() \npublic virtualLocalPackageStore& localPackages() \nprotected mutableMutex_mutex \nprotectedLocalPackageStore_localPackages \nprotectedRemotePackageStore_remotePackages \nprotected InstallTaskPtrVec _tasks \nprotectedOptions_options \nprotected void onPackageInstallComplete(void * sender) \nprotected void onPackageQueryResponse(void * sender,consthttp::Response& response) \nstruct scy::pacm::InstallationState \nstruct scy::pacm::InstallationState\n  : public scy::State\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual std::string str(unsigned int id) const\n\n\n\n\nMembers\npublic inline virtual std::string str(unsigned int id) const \nstruct scy::pacm::InstallOptions \nPackage installation options.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::string version\nIf set then the given package version will be installed.\n\n\npublic std::string sdkVersion\n\n\n\npublic std::string installDir\n\n\n\npublic inline  InstallOptions()\n\n\n\n\nMembers\npublic std::string version \nIf set then the given package version will be installed.\npublic std::string sdkVersion \nIf set then the latest package version for given SDK version will be installed.\npublic std::string installDir \nInstall to the given location, otherwise the manager default installDir will be used.\npublic inline  InstallOptions() \nstruct scy::pacm::LocalPackage \nstruct scy::pacm::LocalPackage\n  : public scy::pacm::Package\nThis class is a JSON representation of an installed local package that exists on the file system.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  LocalPackage()\n\n\n\npublic  LocalPackage(const json::Value & src)\n\n\n\npublic  LocalPackage(constRemotePackage& src)\n\n\n\npublic virtual  ~LocalPackage()\n\n\n\npublic virtual void setState(const std::string & state)\n\n\n\npublic virtual void setInstallState(const std::string & state)\n\n\n\npublic virtual void setInstallDir(const std::string & dir)\nSet's the installation directory for this package.\n\n\npublic virtual void setInstalledAsset(constPackage::Asset& installedRemoteAsset)\n\n\n\npublic virtual void setVersion(const std::string & version)\n\n\n\npublic virtual void setVersionLock(const std::string & version)\n\n\n\npublic virtual void setSDKVersionLock(const std::string & version)\n\n\n\npublic virtual std::string version() const\nReturns the installed package version.\n\n\npublic virtual std::string state() const\nReturns the current state of this package.\n\n\npublic virtual std::string installState() const\nReturns the installation state of this package.\n\n\npublic virtual std::string installDir() const\nReturns the installation directory for this package.\n\n\npublic virtual std::string versionLock() const\n\n\n\npublic virtual std::string sdkLockedVersion() const\n\n\n\npublic virtualAssetasset()\n\n\n\npublic virtual bool isInstalled() const\n\n\n\npublic virtual bool isFailed() const\n\n\n\npublic virtualManifestmanifest()\nReturns the installation manifest.\n\n\npublic virtual bool verifyInstallManifest(bool allowEmpty)\n\n\n\npublic virtual std::string getInstalledFilePath(const std::string & fileName,bool whiny)\n\n\n\npublic virtual json::Value & errors()\n\n\n\npublic virtual void addError(const std::string & message)\n\n\n\npublic virtual std::string lastError() const\n\n\n\npublic virtual void clearErrors()\n\n\n\npublic virtual bool valid() const\n\n\n\n\nMembers\npublic  LocalPackage() \npublic  LocalPackage(const json::Value & src) \npublic  LocalPackage(constRemotePackage& src) \nCreate the local package from the remote package reference with the following manipulations. 1) Add a local manifest element. 2) Remove asset mirror elements.\npublic virtual  ~LocalPackage() \npublic virtual void setState(const std::string & state) \nSet's the overall package state. Possible values are: Installing, Installed, Failed, Uninstalled. If the packages completes while still Installing, this means the package has yet to be finalized.\npublic virtual void setInstallState(const std::string & state) \nSet's the package installation state. See InstallationState for possible values.\npublic virtual void setInstallDir(const std::string & dir) \nSet's the installation directory for this package.\npublic virtual void setInstalledAsset(constPackage::Asset& installedRemoteAsset) \nSets the installed asset, once installed. This method also sets the version.\npublic virtual void setVersion(const std::string & version) \nSets the current version of the local package. Installation must be complete.\npublic virtual void setVersionLock(const std::string & version) \nLocks the package at the given version. Once set this package will not be updated past the given version. Pass an empty string to remove the lock.\npublic virtual void setSDKVersionLock(const std::string & version) \nLocks the package at the given SDK version. Once set this package will only update to the most recent version with given SDK version. Pass an empty string to remove the lock.\npublic virtual std::string version() const \nReturns the installed package version.\npublic virtual std::string state() const \nReturns the current state of this package.\npublic virtual std::string installState() const \nReturns the installation state of this package.\npublic virtual std::string installDir() const \nReturns the installation directory for this package.\npublic virtual std::string versionLock() const \npublic virtual std::string sdkLockedVersion() const \npublic virtualAssetasset() \nReturns the currently installed asset, if any. If none, the returned asset will be empty().\npublic virtual bool isInstalled() const \nReturns true or false depending on weather or not the package is installed successfully. False if package is in Failed state.\npublic virtual bool isFailed() const \npublic virtualManifestmanifest() \nReturns the installation manifest.\npublic virtual bool verifyInstallManifest(bool allowEmpty) \npublic virtual std::string getInstalledFilePath(const std::string & fileName,bool whiny) \nReturns the full full path of the installed file. Thrown an exception if the install directory is unset.\npublic virtual json::Value & errors() \npublic virtual void addError(const std::string & message) \npublic virtual std::string lastError() const \npublic virtual void clearErrors() \npublic virtual bool valid() const \nstruct scy::pacm::Package \nstruct scy::pacm::Package\n  : public Value\nThis class is a JSON representation of an package belonging to the PackageManager.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Package()\n\n\n\npublic  Package(const json::Value & src)\n\n\n\npublic virtual  ~Package()\n\n\n\npublic virtual std::string id() const\n\n\n\npublic virtual std::string name() const\n\n\n\npublic virtual std::string type() const\n\n\n\npublic virtual std::string author() const\n\n\n\npublic virtual std::string description() const\n\n\n\npublic virtual bool valid() const\n\n\n\npublic virtual void print(std::ostream & ost) const\n\n\n\n\nMembers\npublic  Package() \npublic  Package(const json::Value & src) \npublic virtual  ~Package() \npublic virtual std::string id() const \npublic virtual std::string name() const \npublic virtual std::string type() const \npublic virtual std::string author() const \npublic virtual std::string description() const \npublic virtual bool valid() const \npublic virtual void print(std::ostream & ost) const \nstruct scy::pacm::PackagePair \nThis class provides pairing of a local and a remote package.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicLocalPackage* local\n\n\n\npublicRemotePackage* remote\n\n\n\npublic  PackagePair(LocalPackage* local,RemotePackage* remote)\n\n\n\npublic virtual bool valid() const\n\n\n\npublic std::string id() const\n\n\n\npublic std::string name() const\n\n\n\npublic std::string type() const\n\n\n\npublic std::string author() const\n\n\n\n\nMembers\npublicLocalPackage* local \nReturns true if there are no possible updates for this package, false otherwise.\npublicRemotePackage* remote \npublic  PackagePair(LocalPackage* local,RemotePackage* remote) \npublic virtual bool valid() const \npublic std::string id() const \npublic std::string name() const \npublic std::string type() const \npublic std::string author() const \nstruct scy::pacm::RemotePackage \nstruct scy::pacm::RemotePackage\n  : public scy::pacm::Package\nThis class is a JSON representation of an package existing on the remote server that may be downloaded and installed.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  RemotePackage()\n\n\n\npublic  RemotePackage(const json::Value & src)\n\n\n\npublic virtual  ~RemotePackage()\n\n\n\npublic virtual json::Value & assets()\n\n\n\npublic virtualAssetlatestAsset()\n\n\n\npublic virtualAssetassetVersion(const std::string & version)\n\n\n\npublic virtualAssetlatestSDKAsset(const std::string & version)\n\n\n\n\nMembers\npublic  RemotePackage() \npublic  RemotePackage(const json::Value & src) \npublic virtual  ~RemotePackage() \npublic virtual json::Value & assets() \npublic virtualAssetlatestAsset() \nReturns the latest asset for this package. For local packages this is the currently installed version. For remote packages this is the latest available version. Throws an exception if no asset exists.\npublic virtualAssetassetVersion(const std::string & version) \nReturns the latest asset for the given package version. Throws an exception if no asset exists.\npublic virtualAssetlatestSDKAsset(const std::string & version) \nReturns the latest asset for the given SDK version. This method is for safely installing plug-ins which must be compiled against a specific SDK version. The package JSON must have a \"sdk-version\" member for this function to work as intended. Throws an exception if no asset exists.\n"},"api-pluga.html":{"url":"api-pluga.html","title":"Pluga","keywords":"","body":"Module  pluga\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy::pluga\n\n\n\n\nnamespace scy::pluga \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nstructscy::pluga::PluginDetails\n\n\n\n\nstruct scy::pluga::PluginDetails \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic int apiVersion\n\n\n\npublic const char * fileName\n\n\n\npublic const char * className\n\n\n\npublic const char * pluginName\n\n\n\npublic const char * pluginVersion\n\n\n\npublic GetPluginFunc initializeFunc\n\n\n\n\nMembers\npublic int apiVersion \npublic const char * fileName \npublic const char * className \npublic const char * pluginName \npublic const char * pluginVersion \npublic GetPluginFunc initializeFunc \n"},"api-sked.html":{"url":"api-sked.html","title":"Sked","keywords":"","body":"Module  sked\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy::sked\n\n\n\n\nnamespace scy::sked \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::sked::Scheduler\n\n\n\nclassscy::sked::Task\n\n\n\nclassscy::sked::TaskFactory\n\n\n\nstructscy::sked::DailyTrigger\n\n\n\nstructscy::sked::IntervalTrigger\n\n\n\nstructscy::sked::OnceOnlyTrigger\n\n\n\nstructscy::sked::Trigger\n\n\n\n\nclass scy::sked::Scheduler \nclass scy::sked::Scheduler\n  : public scy::TaskRunner\n  : public scy::json::ISerializable\nThe Scheduler manages and runs tasks that need to be executed at specific times.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Scheduler()\n\n\n\npublic virtual  ~Scheduler()\n\n\n\npublic virtual void schedule(sked::Task* task)\n\n\n\npublic virtual void cancel(sked::Task* task)\n\n\n\npublic virtual void clear()\nDestroys and clears all manages tasks.\n\n\npublic virtual void serialize(json::Value & root)\n\n\n\npublic virtual void deserialize(json::Value & root)\n\n\n\npublic virtual void print(std::ostream & ost)\n\n\n\nprotected virtual void run()\nCalled by the async context to run the next task.\n\n\nprotected virtual void update()\n\n\n\n\nMembers\npublic  Scheduler() \npublic virtual  ~Scheduler() \npublic virtual void schedule(sked::Task* task) \npublic virtual void cancel(sked::Task* task) \npublic virtual void clear() \nDestroys and clears all manages tasks.\npublic virtual void serialize(json::Value & root) \npublic virtual void deserialize(json::Value & root) \npublic virtual void print(std::ostream & ost) \nprotected virtual void run() \nCalled by the async context to run the next task.\nprotected virtual void update() \nclass scy::sked::Task \nclass scy::sked::Task\n  : public scy::Task\n  : public scy::json::ISerializable\nThis class extends the Task class to implement scheduling capabilities.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Task(const std::string & type,const std::string & name)\n\n\n\npublic  Task(Scheduler& scheduler,const std::string & type,const std::string & name)\n\n\n\npublic virtual void serialize(json::Value & root)\nSerializes the task to JSON.\n\n\npublic virtual void deserialize(json::Value & root)\nDeserializes the task from JSON.\n\n\npublic template  inline T * createTrigger()\n\n\n\npublic void setTrigger(sked::Trigger* trigger)\n\n\n\npublicsked::Trigger& trigger()\n\n\n\npublicScheduler& scheduler()\n\n\n\npublic std::int64_t remaining() const\n\n\n\npublic std::string type() const\n\n\n\npublic std::string name() const\n\n\n\npublic void setName(const std::string & name)\n\n\n\nprotected std::string _type\n\n\n\nprotected std::string _name\n\n\n\nprotectedsked::Scheduler* _scheduler\n\n\n\nprotectedsked::Trigger* _trigger\n\n\n\nprotected mutableMutex_mutex\n\n\n\nprotected virtual  ~Task()\nShould remain protected.\n\n\nprotected virtual bool beforeRun()\n\n\n\nprotected void run()\n\n\n\nprotected virtual bool afterRun()\n\n\n\n\nMembers\npublic  Task(const std::string & type,const std::string & name) \npublic  Task(Scheduler& scheduler,const std::string & type,const std::string & name) \npublic virtual void serialize(json::Value & root) \nSerializes the task to JSON.\npublic virtual void deserialize(json::Value & root) \nDeserializes the task from JSON.\npublic template  inline T * createTrigger() \npublic void setTrigger(sked::Trigger* trigger) \npublicsked::Trigger& trigger() \nReturns a reference to the associated sked::Trigger or throws an exception.\npublicScheduler& scheduler() \nReturns a reference to the associated Scheduler or throws an exception.\npublic std::int64_t remaining() const \nReturns the milliseconds remaining until the next scheduled timeout. An sked::Trigger must be associated or an exception will be thrown.\npublic std::string type() const \npublic std::string name() const \npublic void setName(const std::string & name) \nprotected std::string _type \nprotected std::string _name \nprotectedsked::Scheduler* _scheduler \nprotectedsked::Trigger* _trigger \nprotected mutableMutex_mutex \nprotected virtual  ~Task() \nShould remain protected.\nprotected virtual bool beforeRun() \nprotected void run() \nCalled by the TaskRunner to run the task. Override this method to implement task action. Returning true means the true should be called again, and false will cause the task to be destroyed. The task will similarly be destroyed id destroy() was called during the current task iteration.\nprotected virtual bool afterRun() \nclass scy::sked::TaskFactory \nThe TaskFactory can dynamically instantiate registered sked::Task and sked::Trigger classes from named strings.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inlinesked::Task* createTask(const std::string & type)\n\n\n\npublic template  inline void registerTask(const std::string & type)\n\n\n\npublic inline void unregisterTask(const std::string & type)\n\n\n\npublic inline TaskMap tasks() const\n\n\n\npublic inlinesked::Trigger* createTrigger(const std::string & type)\n\n\n\npublic template  inline void registerTrigger(const std::string & type)\n\n\n\npublic inline void unregisterTrigger(const std::string & type)\n\n\n\npublic inline TriggerMap triggers() const\n\n\n\nprotected mutableMutex_mutex\n\n\n\nprotected TaskMap _tasks\n\n\n\nprotected TriggerMap _triggers\n\n\n\n\nMembers\npublic inlinesked::Task* createTask(const std::string & type) \npublic template  inline void registerTask(const std::string & type) \npublic inline void unregisterTask(const std::string & type) \npublic inline TaskMap tasks() const \npublic inlinesked::Trigger* createTrigger(const std::string & type) \npublic template  inline void registerTrigger(const std::string & type) \npublic inline void unregisterTrigger(const std::string & type) \npublic inline TriggerMap triggers() const \nprotected mutableMutex_mutex \nprotected TaskMap _tasks \nprotected TriggerMap _triggers \nstruct scy::sked::DailyTrigger \nstruct scy::sked::DailyTrigger\n  : public scy::sked::Trigger\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicDateTimetimeOfDay\n\n\n\npublic std::vectorDaysOfTheWeek> daysExcluded\n\n\n\npublic  DailyTrigger()\n\n\n\npublic virtual void update()\n\n\n\n\nMembers\npublicDateTimetimeOfDay \nThis value represents the time of day the task will trigger. The date part of the timestamp is redundant.\npublic std::vectorDaysOfTheWeek> daysExcluded \nDays of the week can be excluded by adding the appropriate bit flag here.\npublic  DailyTrigger() \npublic virtual void update() \nUpdates the scheduleAt value to the next scheduled time.\nstruct scy::sked::IntervalTrigger \nstruct scy::sked::IntervalTrigger\n  : public scy::sked::Trigger\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicTimespaninterval\n\n\n\npublic int maxTimes\n\n\n\npublic  IntervalTrigger()\n\n\n\npublic virtual void update()\n\n\n\npublic virtual bool expired()\n\n\n\npublic virtual void serialize(json::Value & root)\n\n\n\npublic virtual void deserialize(json::Value & root)\n\n\n\n\nMembers\npublicTimespaninterval \nThis value represents the interval to wait before running the task.\npublic int maxTimes \nThe maximum number of times the task will be run before it is destroyed. 0 for no effect.\npublic  IntervalTrigger() \npublic virtual void update() \nUpdates the scheduleAt value to the next scheduled time.\npublic virtual bool expired() \nReturns true if the task is expired and should be destroyed. Returns false by default.\npublic virtual void serialize(json::Value & root) \npublic virtual void deserialize(json::Value & root) \nstruct scy::sked::OnceOnlyTrigger \nstruct scy::sked::OnceOnlyTrigger\n  : public scy::sked::Trigger\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  OnceOnlyTrigger()\n\n\n\npublic inline virtual void update()\n\n\n\npublic virtual bool expired()\n\n\n\n\nMembers\npublic  OnceOnlyTrigger() \npublic inline virtual void update() \nUpdates the scheduleAt value to the next scheduled time.\npublic virtual bool expired() \nReturns true if the task is expired and should be destroyed. Returns false by default.\nstruct scy::sked::Trigger \nstruct scy::sked::Trigger\n  : public scy::json::ISerializable\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::string type\nThe type of this trigger class.\n\n\npublic std::string name\nThe display name of this trigger class.\n\n\npublic int timesRun\n\n\n\npublicDateTimecreatedAt\nThe time the task was created.\n\n\npublicDateTimescheduleAt\nThe time the task is scheduled to run.\n\n\npublicDateTimelastRunAt\nThe time the task was last run.\n\n\npublic  Trigger(const std::string & type,const std::string & name)\n\n\n\npublic void update()\n\n\n\npublic virtual std::int64_t remaining()\n\n\n\npublic virtual bool timeout()\n\n\n\npublic virtual bool expired()\n\n\n\npublic virtual void serialize(json::Value & root)\n\n\n\npublic virtual void deserialize(json::Value & root)\n\n\n\n\nMembers\npublic std::string type \nThe type of this trigger class.\npublic std::string name \nThe display name of this trigger class.\npublic int timesRun \nThe number of times the task has run since creation;\npublicDateTimecreatedAt \nThe time the task was created.\npublicDateTimescheduleAt \nThe time the task is scheduled to run.\npublicDateTimelastRunAt \nThe time the task was last run.\npublic  Trigger(const std::string & type,const std::string & name) \npublic void update() \nUpdates the scheduleAt value to the next scheduled time.\npublic virtual std::int64_t remaining() \nReturns the milliseconds remaining until the next scheduled timeout.\npublic virtual bool timeout() \nReturns true if the task is ready to be run, false otherwise.\npublic virtual bool expired() \nReturns true if the task is expired and should be destroyed. Returns false by default.\npublic virtual void serialize(json::Value & root) \npublic virtual void deserialize(json::Value & root) \n"},"api-socketio.html":{"url":"api-socketio.html","title":"SocketIO","keywords":"","body":"Module  socketio\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy::sockio\n\n\n\n\nnamespace scy::sockio \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::sockio::Client\n\n\n\nclassscy::sockio::Packet\n\n\n\nclassscy::sockio::SSLClient\n\n\n\nclassscy::sockio::TCPClient\n\n\n\nstructscy::sockio::ClientState\n\n\n\nstructscy::sockio::Transaction\n\n\n\n\nclass scy::sockio::Client \nclass scy::sockio::Client\n  : public scy::Stateful\n  : public scy::net::SocketAdapter\n  : public scy::SignalBase\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Client(const net::Socket::Ptr & socket,constOptions& options)\nClient(const net::Socket::Ptr& socket);.\n\n\npublic virtual  ~Client()\n\n\n\npublic virtual void connect()\nvirtual void connect(const std::string& host, std::uint16_t port);\n\n\npublic virtual void close()\n\n\n\npublic virtual int send(const std::string & message,bool ack)\nSend a default message packet.\n\n\npublic virtual int send(const json::Value & message,bool ack)\n\n\n\npublic virtual int send(const std::string & event,const char * message,bool ack)\nSend an event packet.\n\n\npublic virtual int send(const std::string & event,const std::string & message,bool ack)\n\n\n\npublic virtual int send(const std::string & event,const json::Value & message,bool ack)\n\n\n\npublic virtual int send(constsockio::Packet& packet)\nSend the given packet.\n\n\npublicTransaction* createTransaction(constsockio::Packet& request,long timeout)\nCreate a packet transaction.\n\n\npublicClient::Options& options()\nReturn a reference to the client options object.\n\n\npublichttp::ws::WebSocket& ws()\nReturn the underlying WebSocket instance.\n\n\npublic std::string sessionID() const\nReturn the current session ID assigned by the server.\n\n\npublicscy::Errorerror() const\nReturn the error object (if any).\n\n\npublic bool isOnline() const\nReturn true if the client is is Online state.\n\n\npublic bool reconnecting() const\nReturn true if currently reconnecting.\n\n\npublic bool wasOnline() const\n\n\n\npublic inline virtual const char * className() const\n\n\n\nprotectedTimer_pingTimer\n\n\n\nprotectedTimer_pingTimeoutTimer\n\n\n\nprotectedTimer_reconnectTimer\n\n\n\nprotectedscy::Error_error\n\n\n\nprotected std::string _sessionID\n\n\n\nprotectedClient::Options_options\n\n\n\nprotectedhttp::ws::WebSocket_ws\n\n\n\nprotected int _pingTimeout\n\n\n\nprotected int _pingInterval\n\n\n\nprotected bool _reconnecting\n\n\n\nprotected bool _wasOnline\n\n\n\nprotected virtual void setError(constscy::Error& error)\n\n\n\nprotected virtual void reset()\nReset variables and timers at the beginning and end of each session.\n\n\nprotected virtual void onConnect()\n\n\n\nprotected virtual void onOnline()\n\n\n\nprotected virtual void onClose()\n\n\n\nprotected virtual void onPacket(sockio::Packet& packet)\n\n\n\nprotected virtual void onHandshake(sockio::Packet& packet)\n\n\n\nprotected virtual void onMessage(sockio::Packet& packet)\n\n\n\nprotected virtual void onSocketConnect()\n\n\n\nprotected virtual void onSocketRecv(constMutableBuffer& buffer,constnet::Address& peerAddress)\n\n\n\nprotected virtual void onSocketError(constscy::Error& error)\n\n\n\nprotected virtual void onSocketClose()\n\n\n\nprotected virtual void onPingTimer()\n\n\n\nprotected virtual void onPingTimeoutTimer()\n\n\n\nprotected virtual void startReconnectTimer()\n\n\n\nprotected virtual void stopReconnectTimer()\n\n\n\nprotected virtual void onReconnectTimer()\n\n\n\nprotected virtual int sendPing()\n\n\n\nprotected virtual void onPong()\n\n\n\n\nMembers\npublic  Client(const net::Socket::Ptr & socket,constOptions& options) \nClient(const net::Socket::Ptr& socket);.\npublic virtual  ~Client() \npublic virtual void connect() \nvirtual void connect(const std::string& host, std::uint16_t port);\npublic virtual void close() \npublic virtual int send(const std::string & message,bool ack) \nSend a default message packet.\npublic virtual int send(const json::Value & message,bool ack) \npublic virtual int send(const std::string & event,const char * message,bool ack) \nSend an event packet.\npublic virtual int send(const std::string & event,const std::string & message,bool ack) \npublic virtual int send(const std::string & event,const json::Value & message,bool ack) \npublic virtual int send(constsockio::Packet& packet) \nSend the given packet.\npublicTransaction* createTransaction(constsockio::Packet& request,long timeout) \nCreate a packet transaction.\npublicClient::Options& options() \nReturn a reference to the client options object.\npublichttp::ws::WebSocket& ws() \nReturn the underlying WebSocket instance.\npublic std::string sessionID() const \nReturn the current session ID assigned by the server.\npublicscy::Errorerror() const \nReturn the error object (if any).\npublic bool isOnline() const \nReturn true if the client is is Online state.\npublic bool reconnecting() const \nReturn true if currently reconnecting.\npublic bool wasOnline() const \nReturn true if the client was previously in the Online state. Useful for delegates handling the Error state.\npublic inline virtual const char * className() const \nprotectedTimer_pingTimer \nprotectedTimer_pingTimeoutTimer \nprotectedTimer_reconnectTimer \nprotectedscy::Error_error \nprotected std::string _sessionID \nprotectedClient::Options_options \nprotectedhttp::ws::WebSocket_ws \nprotected int _pingTimeout \nprotected int _pingInterval \nprotected bool _reconnecting \nprotected bool _wasOnline \nprotected virtual void setError(constscy::Error& error) \nprotected virtual void reset() \nReset variables and timers at the beginning and end of each session.\nprotected virtual void onConnect() \nprotected virtual void onOnline() \nprotected virtual void onClose() \nprotected virtual void onPacket(sockio::Packet& packet) \nprotected virtual void onHandshake(sockio::Packet& packet) \nprotected virtual void onMessage(sockio::Packet& packet) \nprotected virtual void onSocketConnect() \nThese virtual methods can be overridden as necessary to intercept socket events before they hit the application.\nprotected virtual void onSocketRecv(constMutableBuffer& buffer,constnet::Address& peerAddress) \nprotected virtual void onSocketError(constscy::Error& error) \nprotected virtual void onSocketClose() \nprotected virtual void onPingTimer() \nprotected virtual void onPingTimeoutTimer() \nprotected virtual void startReconnectTimer() \nprotected virtual void stopReconnectTimer() \nprotected virtual void onReconnectTimer() \nprotected virtual int sendPing() \nprotected virtual void onPong() \nclass scy::sockio::Packet \nclass scy::sockio::Packet\n  : public scy::IPacket\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Packet(Frame frame,Type type,int id,const std::string & nsp,const std::string & event,const std::string & message,bool ack)\nDefault contructor.\n\n\npublic  Packet(Type type,const std::string & message,bool ack)\nGeneral contructor.\n\n\npublic  Packet(const std::string & message,bool ack)\nMessage contructor.\n\n\npublic  Packet(const json::Value & message,bool ack)\nJSON contructor.\n\n\npublic  Packet(const std::string & event,const std::string & message,bool ack)\nEvent contructor.\n\n\npublic  Packet(const std::string & event,const json::Value & message,bool ack)\nEvent JSON contructor.\n\n\npublic  Packet(constPacket& r)\n\n\n\npublicPacket& operator=(constPacket& r)\n\n\n\npublic virtual  ~Packet()\n\n\n\npublic virtualIPacket* clone() const\n\n\n\npublic Frame frame() const\n\n\n\npublic Type type() const\n\n\n\npublic int id() const\n\n\n\npublic std::string nsp() const\n\n\n\npublic std::string message() const\n\n\n\npublic json::Value json() const\n\n\n\npublic void setID(int id)\n\n\n\npublic void setNamespace(const std::string & nsp)\n\n\n\npublic void setMessage(const std::string & message)\n\n\n\npublic void setAck(bool flag)\n\n\n\npublic virtual std::size_t read(constConstBuffer&)\n\n\n\npublic virtual void write(Buffer &) const\n\n\n\npublic virtual std::size_t size() const\n\n\n\npublic bool valid() const\n\n\n\npublic std::string frameString() const\n\n\n\npublic std::string typeString() const\n\n\n\npublic std::string toString() const\n\n\n\npublic virtual void print(std::ostream & os) const\n\n\n\npublic inline virtual const char * className() const\n\n\n\nprotected Frame _frame\n\n\n\nprotected Type _type\n\n\n\nprotected int _id\n\n\n\nprotected std::string _nsp\n\n\n\nprotected std::string _event\n\n\n\nprotected std::string _message\n\n\n\nprotected bool _ack\n\n\n\nprotected std::size_t _size\n\n\n\n\nMembers\npublic  Packet(Frame frame,Type type,int id,const std::string & nsp,const std::string & event,const std::string & message,bool ack) \nDefault contructor.\npublic  Packet(Type type,const std::string & message,bool ack) \nGeneral contructor.\npublic  Packet(const std::string & message,bool ack) \nMessage contructor.\npublic  Packet(const json::Value & message,bool ack) \nJSON contructor.\npublic  Packet(const std::string & event,const std::string & message,bool ack) \nEvent contructor.\npublic  Packet(const std::string & event,const json::Value & message,bool ack) \nEvent JSON contructor.\npublic  Packet(constPacket& r) \npublicPacket& operator=(constPacket& r) \npublic virtual  ~Packet() \npublic virtualIPacket* clone() const \npublic Frame frame() const \npublic Type type() const \npublic int id() const \npublic std::string nsp() const \npublic std::string message() const \npublic json::Value json() const \npublic void setID(int id) \npublic void setNamespace(const std::string & nsp) \npublic void setMessage(const std::string & message) \npublic void setAck(bool flag) \npublic virtual std::size_t read(constConstBuffer&) \nRead/parse to the packet from the given input buffer. The number of bytes read is returned.\npublic virtual void write(Buffer &) const \nCopy/generate to the packet given output buffer. The number of bytes written can be obtained from the buffer.\nTodo: It may be prefferable to use our pod types here instead of buffer input, but the current codebase requires that the buffer be dynamically resizable for some protocols...\nvirtual std::size_t write(MutableBuffer&) const = 0;\npublic virtual std::size_t size() const \nThe size of the packet in bytes.\nThis is the nember of bytes that will be written on a call to write(), but may not be the number of bytes that will be consumed by read().\npublic bool valid() const \npublic std::string frameString() const \npublic std::string typeString() const \npublic std::string toString() const \npublic virtual void print(std::ostream & os) const \npublic inline virtual const char * className() const \nprotected Frame _frame \nprotected Type _type \nprotected int _id \nprotected std::string _nsp \nprotected std::string _event \nprotected std::string _message \nprotected bool _ack \nprotected std::size_t _size \nclass scy::sockio::SSLClient \nclass scy::sockio::SSLClient\n  : public scy::sockio::Client\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  SSLClient(constClient::Options& options,uv::Loop * loop)\n\n\n\n\nMembers\npublic  SSLClient(constClient::Options& options,uv::Loop * loop) \nclass scy::sockio::TCPClient \nclass scy::sockio::TCPClient\n  : public scy::sockio::Client\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  TCPClient(constClient::Options& options,uv::Loop * loop)\n\n\n\n\nMembers\npublic  TCPClient(constClient::Options& options,uv::Loop * loop) \nstruct scy::sockio::ClientState \nstruct scy::sockio::ClientState\n  : public scy::State\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual std::string str(unsigned int id) const\n\n\n\n\nMembers\npublic inline virtual std::string str(unsigned int id) const \nstruct scy::sockio::Transaction \nstruct scy::sockio::Transaction\n  : public scy::PacketTransaction\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicsockio::Client& client\n\n\n\npublic  Transaction(sockio::Client& client,long timeout)\n\n\n\npublic  Transaction(sockio::Client& client,constsockio::Packet& request,long timeout)\n\n\n\npublic virtual bool send()\n\n\n\npublic virtual bool checkResponse(constsockio::Packet& packet)\n\n\n\npublic virtual void onPotentialResponse(void *,sockio::Packet& packet)\n\n\n\npublic virtual void onResponse()\nCalled when a successful response is received.\n\n\npublic inline virtual const char * className() const\n\n\n\nprotected virtual  ~Transaction()\n\n\n\n\nMembers\npublicsockio::Client& client \npublic  Transaction(sockio::Client& client,long timeout) \npublic  Transaction(sockio::Client& client,constsockio::Packet& request,long timeout) \npublic virtual bool send() \nStarts the transaction timer and sends the request. Overriding classes should implement send logic here.\npublic virtual bool checkResponse(constsockio::Packet& packet) \nChecks a potential response candidate and returns true on successful match.\npublic virtual void onPotentialResponse(void *,sockio::Packet& packet) \npublic virtual void onResponse() \nCalled when a successful response is received.\npublic inline virtual const char * className() const \nprotected virtual  ~Transaction() \n"},"api-stun.html":{"url":"api-stun.html","title":"STUN","keywords":"","body":"Module  stun\nThe stun module contains a STUN (rfc5389) implementation.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy::stun\n\n\n\n\nnamespace scy::stun \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::stun::AddressAttribute\nImplements a STUN/TURN attribute that contains a socket address.\n\n\nclassscy::stun::Attribute\nThe virtual base class for all STUN/TURN attributes.\n\n\nclassscy::stun::ErrorCode\nImplements STUN/TURN attribute that reflects an error code.\n\n\nclassscy::stun::FlagAttribute\nImplements STUN/TURN attribute representing a 0 size flag.\n\n\nclassscy::stun::Message\n\n\n\nclassscy::stun::MessageIntegrity\nImplements STUN/TURN attributes that reflects an internet address.\n\n\nclassscy::stun::StringAttribute\nImplements STUN/TURN attribute that reflects an arbitrary byte string.\n\n\nclassscy::stun::Transaction\n\n\n\nclassscy::stun::UInt16ListAttribute\nImplements STUN/TURN attribute that reflects a list of attribute names.\n\n\nclassscy::stun::UInt32Attribute\nImplements STUN/TURN attribute that reflects a 32-bit integer.\n\n\nclassscy::stun::UInt64Attribute\nImplements STUN/TURN attribute that reflects a 64-bit integer.\n\n\nclassscy::stun::UInt8Attribute\nImplements STUN/TURN attribute that reflects a 32-bit integer.\n\n\n\nclass scy::stun::AddressAttribute \nclass scy::stun::AddressAttribute\n  : public scy::stun::Attribute\nImplements a STUN/TURN attribute that contains a socket address.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  AddressAttribute(std::uint16_t type,bool ipv4)\n\n\n\npublic  AddressAttribute(constAddressAttribute& r)\n\n\n\npublic virtualstun::Attribute* clone()\n\n\n\npublic inlinestun::AddressFamilyfamily() const\n\n\n\npublic virtualnet::Addressaddress() const\n\n\n\npublic virtual void read(BitReader& reader)\n\n\n\npublic virtual void write(BitWriter& writer) const\n\n\n\npublic inline virtual void setAddress(constnet::Address& addr)\n\n\n\n\nMembers\npublic  AddressAttribute(std::uint16_t type,bool ipv4) \npublic  AddressAttribute(constAddressAttribute& r) \npublic virtualstun::Attribute* clone() \npublic inlinestun::AddressFamilyfamily() const \npublic virtualnet::Addressaddress() const \npublic virtual void read(BitReader& reader) \nReads the body (not the type or size) for this type of attribute from the given buffer. Return value is true if successful.\npublic virtual void write(BitWriter& writer) const \nWrites the body (not the type or size) to the given buffer. Return value is true if successful.\npublic inline virtual void setAddress(constnet::Address& addr) \nclass scy::stun::Attribute \nThe virtual base class for all STUN/TURN attributes.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual  ~Attribute()\n\n\n\npublicAttribute* clone()\n\n\n\npublic void read(BitReader& reader)\n\n\n\npublic void write(BitWriter& writer) const\n\n\n\npublic std::uint16_t type() const\n\n\n\npublic std::uint16_t size() const\n\n\n\npublic void consumePadding(BitReader& reader) const\n\n\n\npublic void writePadding(BitWriter& writer) const\n\n\n\npublic std::string typeString()\n\n\n\nprotected std::uint16_t _type\n\n\n\nprotected std::uint16_t _size\n\n\n\nprotected  Attribute(std::uint16_t type,std::uint16_t size)\n\n\n\nprotected void setLength(std::uint16_t size)\n\n\n\n\nMembers\npublic inline virtual  ~Attribute() \npublicAttribute* clone() \npublic void read(BitReader& reader) \nReads the body (not the type or size) for this type of attribute from the given buffer. Return value is true if successful.\npublic void write(BitWriter& writer) const \nWrites the body (not the type or size) to the given buffer. Return value is true if successful.\npublic std::uint16_t type() const \npublic std::uint16_t size() const \npublic void consumePadding(BitReader& reader) const \npublic void writePadding(BitWriter& writer) const \npublic std::string typeString() \nprotected std::uint16_t _type \nprotected std::uint16_t _size \nprotected  Attribute(std::uint16_t type,std::uint16_t size) \nprotected void setLength(std::uint16_t size) \nclass scy::stun::ErrorCode \nclass scy::stun::ErrorCode\n  : public scy::stun::Attribute\nImplements STUN/TURN attribute that reflects an error code.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  ErrorCode(std::uint16_t size)\n\n\n\npublic  ErrorCode(constErrorCode& r)\n\n\n\npublic virtual  ~ErrorCode()\n\n\n\npublic virtualAttribute* clone()\n\n\n\npublic void setErrorCode(int code)\n\n\n\npublic void setReason(const std::string & reason)\n\n\n\npublic int errorCode() const\n\n\n\npublic inline std::uint8_t errorClass() const\n\n\n\npublic inline std::uint8_t errorNumber() const\n\n\n\npublic inline const std::string & reason() const\n\n\n\npublic virtual void read(BitReader& reader)\n\n\n\npublic virtual void write(BitWriter& writer) const\n\n\n\n\nMembers\npublic  ErrorCode(std::uint16_t size) \npublic  ErrorCode(constErrorCode& r) \npublic virtual  ~ErrorCode() \npublic virtualAttribute* clone() \npublic void setErrorCode(int code) \npublic void setReason(const std::string & reason) \npublic int errorCode() const \npublic inline std::uint8_t errorClass() const \npublic inline std::uint8_t errorNumber() const \npublic inline const std::string & reason() const \npublic virtual void read(BitReader& reader) \nReads the body (not the type or size) for this type of attribute from the given buffer. Return value is true if successful.\npublic virtual void write(BitWriter& writer) const \nWrites the body (not the type or size) to the given buffer. Return value is true if successful.\nclass scy::stun::FlagAttribute \nclass scy::stun::FlagAttribute\n  : public scy::stun::Attribute\nImplements STUN/TURN attribute representing a 0 size flag.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  FlagAttribute(std::uint16_t type)\n\n\n\npublic virtualAttribute* clone()\n\n\n\npublic inline virtual void read(BitReader& reader)\n\n\n\npublic inline virtual void write(BitWriter& writer) const\n\n\n\n\nMembers\npublic  FlagAttribute(std::uint16_t type) \npublic virtualAttribute* clone() \npublic inline virtual void read(BitReader& reader) \nReads the body (not the type or size) for this type of attribute from the given buffer. Return value is true if successful.\npublic inline virtual void write(BitWriter& writer) const \nWrites the body (not the type or size) to the given buffer. Return value is true if successful.\nclass scy::stun::Message \nclass scy::stun::Message\n  : public scy::IPacket\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Message()\n\n\n\npublic  Message(ClassType clss,MethodTypemeth)\n\n\n\npublic  Message(constMessage& that)\n\n\n\npublicMessage& operator=(constMessage& that)\n\n\n\npublic virtual  ~Message()\n\n\n\npublic virtualIPacket* clone() const\n\n\n\npublic void setClass(ClassType type)\n\n\n\npublic void setMethod(MethodTypetype)\n\n\n\npublic void setTransactionID(const std::string & id)\n\n\n\npublic ClassType classType() const\n\n\n\npublicMethodTypemethodType() const\n\n\n\npublic inline const TransactionID & transactionID() const\n\n\n\npublic inline const std::vectorAttribute* > attrs() const\n\n\n\npublic inline virtual std::size_t size() const\n\n\n\npublic std::string methodString() const\n\n\n\npublic std::string classString() const\n\n\n\npublic std::string errorString(std::uint16_t errorCode) const\n\n\n\npublic void add(Attribute* attr)\n\n\n\npublicAttribute* get(Attribute::Typetype,int index) const\n\n\n\npublic template  inline T * get(int index) const\n\n\n\npublic virtual std::size_t read(constConstBuffer& buf)\n\n\n\npublic virtual void write(Buffer & buf) const\nWrites this object into a STUN/TURN packet.\n\n\npublic std::string toString() const\n\n\n\npublic virtual void print(std::ostream & os) const\n\n\n\npublic inline virtual const char * className() const\n\n\n\nprotected std::uint16_t _class\n\n\n\nprotected std::uint16_t _method\n\n\n\nprotected std::uint16_t _size\n\n\n\nprotected TransactionID _transactionID\n\n\n\nprotected std::vectorAttribute* > _attrs\n\n\n\n\nMembers\npublic  Message() \npublic  Message(ClassType clss,MethodTypemeth) \npublic  Message(constMessage& that) \npublicMessage& operator=(constMessage& that) \npublic virtual  ~Message() \npublic virtualIPacket* clone() const \npublic void setClass(ClassType type) \npublic void setMethod(MethodTypetype) \npublic void setTransactionID(const std::string & id) \npublic ClassType classType() const \npublicMethodTypemethodType() const \npublic inline const TransactionID & transactionID() const \npublic inline const std::vectorAttribute* > attrs() const \npublic inline virtual std::size_t size() const \nThe size of the packet in bytes.\nThis is the nember of bytes that will be written on a call to write(), but may not be the number of bytes that will be consumed by read().\npublic std::string methodString() const \npublic std::string classString() const \npublic std::string errorString(std::uint16_t errorCode) const \npublic void add(Attribute* attr) \npublicAttribute* get(Attribute::Typetype,int index) const \npublic template  inline T * get(int index) const \npublic virtual std::size_t read(constConstBuffer& buf) \nParses the STUN/TURN packet from the given buffer. The return value indicates the number of bytes read.\npublic virtual void write(Buffer & buf) const \nWrites this object into a STUN/TURN packet.\npublic std::string toString() const \npublic virtual void print(std::ostream & os) const \npublic inline virtual const char * className() const \nprotected std::uint16_t _class \nprotected std::uint16_t _method \nprotected std::uint16_t _size \nprotected TransactionID _transactionID \nprotected std::vectorAttribute* > _attrs \nclass scy::stun::MessageIntegrity \nclass scy::stun::MessageIntegrity\n  : public scy::stun::Attribute\nImplements STUN/TURN attributes that reflects an internet address.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  MessageIntegrity()\n\n\n\npublic  MessageIntegrity(constMessageIntegrity& r)\n\n\n\npublic virtual  ~MessageIntegrity()\n\n\n\npublic virtualAttribute* clone()\n\n\n\npublic bool verifyHmac(const std::string & key) const\n\n\n\npublic inline std::string input() const\n\n\n\npublic inline std::string hmac() const\n\n\n\npublic inline std::string key() const\n\n\n\npublic inline void setInput(const std::string & input)\n\n\n\npublic inline void setHmac(const std::string & hmac)\n\n\n\npublic inline void setKey(const std::string & key)\n\n\n\npublic virtual void read(BitReader& reader)\n\n\n\npublic virtual void write(BitWriter& writer) const\n\n\n\n\nMembers\npublic  MessageIntegrity() \npublic  MessageIntegrity(constMessageIntegrity& r) \npublic virtual  ~MessageIntegrity() \npublic virtualAttribute* clone() \npublic bool verifyHmac(const std::string & key) const \npublic inline std::string input() const \npublic inline std::string hmac() const \npublic inline std::string key() const \npublic inline void setInput(const std::string & input) \npublic inline void setHmac(const std::string & hmac) \npublic inline void setKey(const std::string & key) \npublic virtual void read(BitReader& reader) \nReads the body (not the type or size) for this type of attribute from the given buffer. Return value is true if successful.\npublic virtual void write(BitWriter& writer) const \nWrites the body (not the type or size) to the given buffer. Return value is true if successful.\nclass scy::stun::StringAttribute \nclass scy::stun::StringAttribute\n  : public scy::stun::Attribute\nImplements STUN/TURN attribute that reflects an arbitrary byte string.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  StringAttribute(std::uint16_t type,std::uint16_t size)\n\n\n\npublic  StringAttribute(constStringAttribute& r)\n\n\n\npublic virtual  ~StringAttribute()\n\n\n\npublic virtualAttribute* clone()\n\n\n\npublic inline const char * bytes() const\n\n\n\npublic void setBytes(char * bytes,unsigned size)\n\n\n\npublic std::string asString() const\n\n\n\npublic void copyBytes(const char * bytes)\n\n\n\npublic void copyBytes(const void * bytes,unsigned size)\n\n\n\npublic std::uint8_t getByte(int index) const\n\n\n\npublic void setByte(int index,std::uint8_t value)\n\n\n\npublic virtual void read(BitReader& reader)\n\n\n\npublic virtual void write(BitWriter& writer) const\n\n\n\n\nMembers\npublic  StringAttribute(std::uint16_t type,std::uint16_t size) \npublic  StringAttribute(constStringAttribute& r) \npublic virtual  ~StringAttribute() \npublic virtualAttribute* clone() \npublic inline const char * bytes() const \npublic void setBytes(char * bytes,unsigned size) \npublic std::string asString() const \npublic void copyBytes(const char * bytes) \npublic void copyBytes(const void * bytes,unsigned size) \npublic std::uint8_t getByte(int index) const \npublic void setByte(int index,std::uint8_t value) \npublic virtual void read(BitReader& reader) \nReads the body (not the type or size) for this type of attribute from the given buffer. Return value is true if successful.\npublic virtual void write(BitWriter& writer) const \nWrites the body (not the type or size) to the given buffer. Return value is true if successful.\nclass scy::stun::Transaction \nclass scy::stun::Transaction\n  : public scy::net::Transaction\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Transaction(const net::Socket::Ptr & socket,constnet::Address& peerAddress,long timeout,int retries,uv::Loop * loop)\n\n\n\npublic virtual bool checkResponse(constMessage& message)\n\n\n\npublic virtual void onResponse()\nCalled when a successful response match is received.\n\n\nprotected virtual  ~Transaction()\n\n\n\n\nMembers\npublic  Transaction(const net::Socket::Ptr & socket,constnet::Address& peerAddress,long timeout,int retries,uv::Loop * loop) \npublic virtual bool checkResponse(constMessage& message) \npublic virtual void onResponse() \nCalled when a successful response match is received.\nprotected virtual  ~Transaction() \nclass scy::stun::UInt16ListAttribute \nclass scy::stun::UInt16ListAttribute\n  : public scy::stun::Attribute\nImplements STUN/TURN attribute that reflects a list of attribute names.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  UInt16ListAttribute(std::uint16_t type,std::uint16_t size)\n\n\n\npublic  UInt16ListAttribute(constUInt16ListAttribute& r)\n\n\n\npublic virtual  ~UInt16ListAttribute()\n\n\n\npublic virtualAttribute* clone()\n\n\n\npublic std::size_t size() const\n\n\n\npublic std::uint16_t getType(int index) const\n\n\n\npublic void setType(int index,std::uint16_t value)\n\n\n\npublic void addType(std::uint16_t value)\n\n\n\npublic virtual void read(BitReader& reader)\n\n\n\npublic virtual void write(BitWriter& writer) const\n\n\n\n\nMembers\npublic  UInt16ListAttribute(std::uint16_t type,std::uint16_t size) \npublic  UInt16ListAttribute(constUInt16ListAttribute& r) \npublic virtual  ~UInt16ListAttribute() \npublic virtualAttribute* clone() \npublic std::size_t size() const \npublic std::uint16_t getType(int index) const \npublic void setType(int index,std::uint16_t value) \npublic void addType(std::uint16_t value) \npublic virtual void read(BitReader& reader) \nReads the body (not the type or size) for this type of attribute from the given buffer. Return value is true if successful.\npublic virtual void write(BitWriter& writer) const \nWrites the body (not the type or size) to the given buffer. Return value is true if successful.\nclass scy::stun::UInt32Attribute \nclass scy::stun::UInt32Attribute\n  : public scy::stun::Attribute\nImplements STUN/TURN attribute that reflects a 32-bit integer.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  UInt32Attribute(std::uint16_t type)\n\n\n\npublic  UInt32Attribute(constUInt32Attribute& r)\n\n\n\npublic virtualAttribute* clone()\n\n\n\npublic inline std::uint32_t value() const\n\n\n\npublic inline void setValue(std::uint32_t bits)\n\n\n\npublic bool getBit(int index) const\n\n\n\npublic void setBit(int index,bool value)\n\n\n\npublic virtual void read(BitReader& reader)\n\n\n\npublic virtual void write(BitWriter& writer) const\n\n\n\n\nMembers\npublic  UInt32Attribute(std::uint16_t type) \npublic  UInt32Attribute(constUInt32Attribute& r) \npublic virtualAttribute* clone() \npublic inline std::uint32_t value() const \npublic inline void setValue(std::uint32_t bits) \npublic bool getBit(int index) const \npublic void setBit(int index,bool value) \npublic virtual void read(BitReader& reader) \nReads the body (not the type or size) for this type of attribute from the given buffer. Return value is true if successful.\npublic virtual void write(BitWriter& writer) const \nWrites the body (not the type or size) to the given buffer. Return value is true if successful.\nclass scy::stun::UInt64Attribute \nclass scy::stun::UInt64Attribute\n  : public scy::stun::Attribute\nImplements STUN/TURN attribute that reflects a 64-bit integer.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  UInt64Attribute(std::uint16_t type)\n\n\n\npublic  UInt64Attribute(constUInt64Attribute& r)\n\n\n\npublic virtualAttribute* clone()\n\n\n\npublic inline std::uint64_t value() const\n\n\n\npublic inline void setValue(std::uint64_t bits)\n\n\n\npublic bool getBit(int index) const\n\n\n\npublic void setBit(int index,bool value)\n\n\n\npublic virtual void read(BitReader& reader)\n\n\n\npublic virtual void write(BitWriter& writer) const\n\n\n\n\nMembers\npublic  UInt64Attribute(std::uint16_t type) \npublic  UInt64Attribute(constUInt64Attribute& r) \npublic virtualAttribute* clone() \npublic inline std::uint64_t value() const \npublic inline void setValue(std::uint64_t bits) \npublic bool getBit(int index) const \npublic void setBit(int index,bool value) \npublic virtual void read(BitReader& reader) \nReads the body (not the type or size) for this type of attribute from the given buffer. Return value is true if successful.\npublic virtual void write(BitWriter& writer) const \nWrites the body (not the type or size) to the given buffer. Return value is true if successful.\nclass scy::stun::UInt8Attribute \nclass scy::stun::UInt8Attribute\n  : public scy::stun::Attribute\nImplements STUN/TURN attribute that reflects a 32-bit integer.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  UInt8Attribute(std::uint16_t type)\n\n\n\npublic  UInt8Attribute(constUInt8Attribute& r)\n\n\n\npublic virtualAttribute* clone()\n\n\n\npublic inline std::uint8_t value() const\n\n\n\npublic inline void setValue(std::uint8_t bits)\n\n\n\npublic bool getBit(int index) const\n\n\n\npublic void setBit(int index,bool value)\n\n\n\npublic virtual void read(BitReader& reader)\n\n\n\npublic virtual void write(BitWriter& writer) const\n\n\n\n\nMembers\npublic  UInt8Attribute(std::uint16_t type) \npublic  UInt8Attribute(constUInt8Attribute& r) \npublic virtualAttribute* clone() \npublic inline std::uint8_t value() const \npublic inline void setValue(std::uint8_t bits) \npublic bool getBit(int index) const \npublic void setBit(int index,bool value) \npublic virtual void read(BitReader& reader) \nReads the body (not the type or size) for this type of attribute from the given buffer. Return value is true if successful.\npublic virtual void write(BitWriter& writer) const \nWrites the body (not the type or size) to the given buffer. Return value is true if successful.\n"},"api-symple.html":{"url":"api-symple.html","title":"Symple","keywords":"","body":"Module  symple\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy::smpl\n\n\n\n\nnamespace scy::smpl \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::smpl::Client\n\n\n\nclassscy::smpl::Command\n\n\n\nclassscy::smpl::Event\n\n\n\nclassscy::smpl::Form\n\n\n\nclassscy::smpl::FormElement\n\n\n\nclassscy::smpl::FormField\n\n\n\nclassscy::smpl::Message\n\n\n\nclassscy::smpl::Peer\n\n\n\nclassscy::smpl::Presence\n\n\n\nclassscy::smpl::Roster\n\n\n\nclassscy::smpl::SSLClient\n\n\n\nclassscy::smpl::TCPClient\n\n\n\nstructscy::smpl::Address\n\n\n\nstructscy::smpl::CommandDelegate\n\n\n\nstructscy::smpl::EventDelegate\n\n\n\nstructscy::smpl::Filter\n\n\n\nstructscy::smpl::MessageDelegate\n\n\n\nstructscy::smpl::PresenceDelegate\n\n\n\n\nclass scy::smpl::Client \nclass scy::smpl::Client\n  : public scy::sockio::Client\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicSignal Announce\n\n\n\npublic`SignalPeer`& > PeerConnected\nSignals when a peer connects.\n\n\npublic`SignalPeer`& > PeerDisconnected\nSignals when a peer disconnects.\n\n\npublic`SignalPeer`& > CreatePresence\n\n\n\npublic  Client(const net::Socket::Ptr & socket,constOptions& options)\n\n\n\npublic virtual  ~Client()\n\n\n\npublic virtual void connect()\nvirtual void connect(const std::string& host, std::uint16_t port);\n\n\npublic virtual void close()\n\n\n\npublic virtual int send(Message& message,bool ack)\n\n\n\npublic virtual int send(const std::string & message,bool ack)\n\n\n\npublicsockio::Transaction* createTransaction(Message& message)\n\n\n\npublic virtual int respond(Message& message,bool ack)\nSwap the 'to' and 'from' fields and send the given message.\n\n\npublic virtual int sendPresence(bool probe)\n\n\n\npublic virtual int sendPresence(constAddress& to,bool probe)\nSend directed presence to the given peer.\n\n\npublic virtual int joinRoom(const std::string & room)\nJoin the given room.\n\n\npublic virtual int leaveRoom(const std::string & room)\nLeave the given room.\n\n\npublic virtual std::string ourID() const\n\n\n\npublic StringVec rooms() const\nReturn a list of rooms the client has joined.\n\n\npublic virtualPeer* ourPeer()\n\n\n\npublic virtualRoster& roster()\nReturn the roster which stores all online peers.\n\n\npublic virtualPersistenceT& persistence()\n\n\n\npublicClient::Options& options()\nReturn a reference to the client options object.\n\n\npublic virtualClient& operator>>(Message& message)\nStream operator alias for send().\n\n\npublic virtual void onPresenceData(const json::Value & data,bool whiny)\nUpdate the roster from the given client object.\n\n\nprotectedRoster_roster\n\n\n\nprotected std::string _ourID\n\n\n\nprotectedPersistenceT_persistence\n\n\n\nprotectedClient::Options_options\n\n\n\nprotected StringVec _rooms\n\n\n\nprotected int _announceStatus\n\n\n\nprotected virtual int announce()\n\n\n\nprotected virtual void reset()\n\n\n\nprotected virtual void createPresence(Presence& p)\nCreates a Presence object.\n\n\nprotected virtual void emit(void * sender,IPacket& packet)\nOverride PacketSignal::emit.\n\n\nprotected virtual void onOnline()\n\n\n\nprotected virtual void onAnnounceState(void * sender,TransactionState& state,constTransactionState&)\n\n\n\n\nMembers\npublicSignal Announce \nSignalsNotifies the outside application about the response status code of our announce() call. Possible status codes are: // - 200: Authentication success\n\n401: Authentication failed\n\n\n400: Bad request data\n\n\n500: Server not found\n\npublic`SignalPeer`& > PeerConnected \nSignals when a peer connects.\npublic`SignalPeer`& > PeerDisconnected \nSignals when a peer disconnects.\npublic`SignalPeer`& > CreatePresence \nCalled by createPresence() so outside classes can modify the outgoing Peer JSON object.\npublic  Client(const net::Socket::Ptr & socket,constOptions& options) \npublic virtual  ~Client() \npublic virtual void connect() \nvirtual void connect(const std::string& host, std::uint16_t port);\npublic virtual void close() \npublic virtual int send(Message& message,bool ack) \nSend a message. May be a polymorphic Command, Presence, Event or other ...\npublic virtual int send(const std::string & message,bool ack) \nSend a string message. The message must be a valid Symple message otherwise it will not be delivered.\npublicsockio::Transaction* createTransaction(Message& message) \nCreate a Transaction object with the given message which will notify on Ack response from the server.\npublic virtual int respond(Message& message,bool ack) \nSwap the 'to' and 'from' fields and send the given message.\npublic virtual int sendPresence(bool probe) \nBroadcast presence to the user group scope. The outgoing Presence object may be modified via the CreatePresence signal.\npublic virtual int sendPresence(constAddress& to,bool probe) \nSend directed presence to the given peer.\npublic virtual int joinRoom(const std::string & room) \nJoin the given room.\npublic virtual int leaveRoom(const std::string & room) \nLeave the given room.\npublic virtual std::string ourID() const \nReturn the session ID of our current peer object. Return an empty string when offline.\npublic StringVec rooms() const \nReturn a list of rooms the client has joined.\npublic virtualPeer* ourPeer() \nReturn the peer object for the current session, or throws an exception when offline.\npublic virtualRoster& roster() \nReturn the roster which stores all online peers.\npublic virtualPersistenceT& persistence() \nReturn the persistence manager which stores long lived messages.\npublicClient::Options& options() \nReturn a reference to the client options object.\npublic virtualClient& operator>>(Message& message) \nStream operator alias for send().\npublic virtual void onPresenceData(const json::Value & data,bool whiny) \nUpdate the roster from the given client object.\nprotectedRoster_roster \nprotected std::string _ourID \nprotectedPersistenceT_persistence \nprotectedClient::Options_options \nprotected StringVec _rooms \nprotected int _announceStatus \nprotected virtual int announce() \nCalled when a new connection is established to announce and authenticate the peer on the server.\nprotected virtual void reset() \nResets variables and data at the beginning and end of each session.\nprotected virtual void createPresence(Presence& p) \nCreates a Presence object.\nprotected virtual void emit(void * sender,IPacket& packet) \nOverride PacketSignal::emit.\nprotected virtual void onOnline() \nprotected virtual void onAnnounceState(void * sender,TransactionState& state,constTransactionState&) \nclass scy::smpl::Command \nclass scy::smpl::Command\n  : public scy::smpl::Message\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Command()\n\n\n\npublic  Command(const json::Value & root)\n\n\n\npublic  Command(constCommand& root)\n\n\n\npublic virtual  ~Command()\n\n\n\npublic std::string node() const\n\n\n\npublic std::string action() const\n\n\n\npublic void setNode(const std::string & node)\n\n\n\npublic void setAction(const std::string & action)\n\n\n\npublic virtual bool valid() const\n\n\n\npublic std::string param(int n) const\n\n\n\npublic std::vector params()\n\n\n\npublic bool matches(const std::string & xnode) const\n\n\n\n\nMembers\npublic  Command() \npublic  Command(const json::Value & root) \npublic  Command(constCommand& root) \npublic virtual  ~Command() \npublic std::string node() const \npublic std::string action() const \npublic void setNode(const std::string & node) \npublic void setAction(const std::string & action) \npublic virtual bool valid() const \npublic std::string param(int n) const \npublic std::vector params() \npublic bool matches(const std::string & xnode) const \nclass scy::smpl::Event \nclass scy::smpl::Event\n  : public scy::smpl::Message\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Event()\n\n\n\npublic  Event(const json::Value & root)\n\n\n\npublic  Event(constEvent& root)\n\n\n\npublic virtual  ~Event()\n\n\n\npublic virtual bool valid() const\n\n\n\npublic std::string name() const\n\n\n\npublic std::time_t time() const\n\n\n\npublic void setName(const std::string & name)\n\n\n\npublic void setTime(std::time_t time)\n\n\n\n\nMembers\npublic  Event() \npublic  Event(const json::Value & root) \npublic  Event(constEvent& root) \npublic virtual  ~Event() \npublic virtual bool valid() const \npublic std::string name() const \npublic std::time_t time() const \npublic void setName(const std::string & name) \npublic void setTime(std::time_t time) \nclass scy::smpl::Form \nclass scy::smpl::Form\n  : public scy::smpl::FormElement\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Form()\n\n\n\npublic  Form(json::Value & root)\n\n\n\npublic  Form(Command& root)\n\n\n\npublic virtual  ~Form()\n\n\n\npublic bool valid()\n\n\n\npublic std::string action() const\n\n\n\npublic bool partial() const\n\n\n\npublic void setAction(const std::string & action)\n\n\n\npublic void setPartial(bool flag)\n\n\n\n\nMembers\npublic  Form() \npublic  Form(json::Value & root) \npublic  Form(Command& root) \npublic virtual  ~Form() \npublic bool valid() \npublic std::string action() const \npublic bool partial() const \npublic void setAction(const std::string & action) \nPossible \"action\" values form The form-processing entity is asking the form-submitting entity to complete a form. submit The form-submitting entity is submitting data to the form-processing entity. cancel The form-submitting entity has cancelled submission of data to the form-processing entity. result The form-processing entity is returning data to the form-submitting entity.\npublic void setPartial(bool flag) \nNotifies the form is a partial section of the form. This is used for transmitting and updating live fields such as for auto-complete.\nclass scy::smpl::FormElement \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  FormElement()\n\n\n\npublic  FormElement(json::Value & root,const std::string & type,const std::string & id,const std::string & label)\n\n\n\npublic  FormElement(constFormElement& r)\n\n\n\npublicFormElement& operator=(constFormElement& r)\n\n\n\npublic virtual  ~FormElement()\n\n\n\npublic std::string type() const\n\n\n\npublic std::string id() const\n\n\n\npublic std::string label() const\n\n\n\npublic void setType(const std::string & type)\n\n\n\npublic void setId(const std::string & id)\n\n\n\npublic void setLabel(const std::string & text)\n\n\n\npublic void setHint(const std::string & text)\n\n\n\npublic void setError(const std::string & error)\nSets and optional validation error message.\n\n\npublicFormElementaddPage(const std::string & id,const std::string & label)\n\n\n\npublicFormElementaddSection(const std::string & id,const std::string & label)\n\n\n\npublicFormFieldaddField(const std::string & type,const std::string & id,const std::string & label)\n\n\n\npublicFormFieldgetField(const std::string & id,bool partial)\n\n\n\npublic bool getField(const std::string & id,FormField& field,bool partial)\n\n\n\npublic bool hasField(const std::string & id,bool partial)\n\n\n\npublic void setLive(bool flag)\n\n\n\npublic bool live() const\n\n\n\npublic bool clearElements(const std::string & id,bool partial)\nClears child elements matching the given ID.\n\n\npublic void clear()\nClear the entire form.\n\n\npublic bool valid() const\nReturns true if the form element is valid.\n\n\npublic int numElements()\nReturns the number of child elements.\n\n\npublic bool hasErrors()\nReturns true if any fields have errors.\n\n\npublic bool hasPages()\nReturns true if the form has multiple pages.\n\n\npublic json::Value & root() const\n\n\n\nprotected json::Value * _root\n\n\n\n\nMembers\npublic  FormElement() \npublic  FormElement(json::Value & root,const std::string & type,const std::string & id,const std::string & label) \npublic  FormElement(constFormElement& r) \npublicFormElement& operator=(constFormElement& r) \npublic virtual  ~FormElement() \npublic std::string type() const \npublic std::string id() const \npublic std::string label() const \npublic void setType(const std::string & type) \nPossible \"type\" values page, section, text, text-multi, list, list-multi, checkbox, media, custom\npublic void setId(const std::string & id) \npublic void setLabel(const std::string & text) \npublic void setHint(const std::string & text) \npublic void setError(const std::string & error) \nSets and optional validation error message.\npublicFormElementaddPage(const std::string & id,const std::string & label) \npublicFormElementaddSection(const std::string & id,const std::string & label) \npublicFormFieldaddField(const std::string & type,const std::string & id,const std::string & label) \npublicFormFieldgetField(const std::string & id,bool partial) \npublic bool getField(const std::string & id,FormField& field,bool partial) \npublic bool hasField(const std::string & id,bool partial) \nReturns true if the given Address matches any of the internal form element IDs. If the partial flag is set then substring matches will be counted.\npublic void setLive(bool flag) \nLive fields or elements are used to submit partial sections a form, without sending the entire form.\npublic bool live() const \nReturns true if this field is live, meaning the form-processing entity should auto-update this field's value whenever it changes.\npublic bool clearElements(const std::string & id,bool partial) \nClears child elements matching the given ID.\npublic void clear() \nClear the entire form.\npublic bool valid() const \nReturns true if the form element is valid.\npublic int numElements() \nReturns the number of child elements.\npublic bool hasErrors() \nReturns true if any fields have errors.\npublic bool hasPages() \nReturns true if the form has multiple pages.\npublic json::Value & root() const \nprotected json::Value * _root \nThe root pointer is just a reference to the externally managed JSON value memory.\nclass scy::smpl::FormField \nclass scy::smpl::FormField\n  : public scy::smpl::FormElement\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  FormField()\n\n\n\npublic  FormField(json::Value & root,const std::string & type,const std::string & id,const std::string & label)\n\n\n\npublic virtual  ~FormField()\n\n\n\npublic void addOption(const std::string & key,const std::string & value)\nAdds an option for list based fields.\n\n\npublic void addOption(const std::string & value)\n\n\n\npublic void setValue(const std::string & value)\nSets the value clearing all other values.\n\n\npublic void setValue(int value)\n\n\n\npublic void setValue(double value)\n\n\n\npublic void setValue(bool value)\n\n\n\npublic void addValue(const std::string & value)\nAppends a value to the value array.\n\n\npublic void addValue(int value)\n\n\n\npublic void addValue(double value)\n\n\n\npublic void addValue(bool value)\n\n\n\npublic json::Value & values()\nReturns a JSON array of all values.\n\n\npublic std::string value() const\n\n\n\npublic int intValue() const\n\n\n\npublic double doubleValue() const\n\n\n\npublic bool boolValue() const\n\n\n\n\nMembers\npublic  FormField() \npublic  FormField(json::Value & root,const std::string & type,const std::string & id,const std::string & label) \npublic virtual  ~FormField() \npublic void addOption(const std::string & key,const std::string & value) \nAdds an option for list based fields.\npublic void addOption(const std::string & value) \npublic void setValue(const std::string & value) \nSets the value clearing all other values.\npublic void setValue(int value) \npublic void setValue(double value) \npublic void setValue(bool value) \npublic void addValue(const std::string & value) \nAppends a value to the value array.\npublic void addValue(int value) \npublic void addValue(double value) \npublic void addValue(bool value) \npublic json::Value & values() \nReturns a JSON array of all values.\npublic std::string value() const \nReturns the first value. Most formats (except multi) only require single value.\npublic int intValue() const \npublic double doubleValue() const \npublic bool boolValue() const \nclass scy::smpl::Message \nclass scy::smpl::Message\n  : public Value\n  : public scy::IPacket\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Message()\n\n\n\npublic  Message(const json::Value & root)\n\n\n\npublic  Message(constMessage& root)\n\n\n\npublic virtual  ~Message()\n\n\n\npublic virtualIPacket* clone() const\n\n\n\npublic virtual bool valid() const\n\n\n\npublic virtual void clear()\n\n\n\npublic virtual void clearData()\n\n\n\npublic virtual void clearNotes()\n\n\n\npublic std::string type() const\n\n\n\npublic std::string id() const\n\n\n\npublicAddressto() const\n\n\n\npublicAddressfrom() const\n\n\n\npublic int status() const\n\n\n\npublic void setType(const std::string & type)\n\n\n\npublic void setTo(constPeer& to)\n\n\n\npublic void setTo(constAddress& to)\n\n\n\npublic void setTo(const std::string & to)\n\n\n\npublic void setFrom(constPeer& from)\n\n\n\npublic void setFrom(constAddress& from)\n\n\n\npublic void setFrom(const std::string & from)\n\n\n\npublic void setStatus(int code)\n\n\n\npublic json::Value & notes()\n\n\n\npublic void setNote(const std::string & type,const std::string & text)\n\n\n\npublic void addNote(const std::string & type,const std::string & text)\n\n\n\npublic json::Value data(const std::string & name) const\n\n\n\npublic json::Value & data(const std::string & name)\n\n\n\npublic json::Value & setData(const std::string & name)\n\n\n\npublic void setData(const std::string & name,const char * data)\n\n\n\npublic void setData(const std::string & name,const std::string & data)\n\n\n\npublic void setData(const std::string & name,const json::Value & data)\n\n\n\npublic void setData(const std::string & name,int data)\n\n\n\npublic void removeData(const std::string & name)\n\n\n\npublic bool hasData(const std::string & name)\n\n\n\npublic virtual std::size_t read(constConstBuffer&)\n\n\n\npublic virtual std::size_t read(const std::string & root)\n\n\n\npublic virtual void write(Buffer &) const\n\n\n\npublic bool isRequest() const\n\n\n\npublic virtual std::size_t size() const\n\n\n\npublic virtual void print(std::ostream & os) const\n\n\n\npublic inline virtual const char * className() const\n\n\n\n\nMembers\npublic  Message() \npublic  Message(const json::Value & root) \npublic  Message(constMessage& root) \npublic virtual  ~Message() \npublic virtualIPacket* clone() const \npublic virtual bool valid() const \npublic virtual void clear() \npublic virtual void clearData() \npublic virtual void clearNotes() \npublic std::string type() const \npublic std::string id() const \npublicAddressto() const \npublicAddressfrom() const \npublic int status() const \npublic void setType(const std::string & type) \npublic void setTo(constPeer& to) \npublic void setTo(constAddress& to) \npublic void setTo(const std::string & to) \npublic void setFrom(constPeer& from) \npublic void setFrom(constAddress& from) \npublic void setFrom(const std::string & from) \npublic void setStatus(int code) \nHTTP status codes are used to describe the message response. \nSee also: http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\npublic json::Value & notes() \npublic void setNote(const std::string & type,const std::string & text) \nSet a note for the application Possible \"type\" values: info, warn, error\npublic void addNote(const std::string & type,const std::string & text) \npublic json::Value data(const std::string & name) const \npublic json::Value & data(const std::string & name) \npublic json::Value & setData(const std::string & name) \npublic void setData(const std::string & name,const char * data) \npublic void setData(const std::string & name,const std::string & data) \npublic void setData(const std::string & name,const json::Value & data) \npublic void setData(const std::string & name,int data) \npublic void removeData(const std::string & name) \npublic bool hasData(const std::string & name) \npublic virtual std::size_t read(constConstBuffer&) \nRead/parse to the packet from the given input buffer. The number of bytes read is returned.\npublic virtual std::size_t read(const std::string & root) \npublic virtual void write(Buffer &) const \nCopy/generate to the packet given output buffer. The number of bytes written can be obtained from the buffer.\nTodo: It may be prefferable to use our pod types here instead of buffer input, but the current codebase requires that the buffer be dynamically resizable for some protocols...\nvirtual std::size_t write(MutableBuffer&) const = 0;\npublic bool isRequest() const \npublic virtual std::size_t size() const \nThe size of the packet in bytes.\nThis is the nember of bytes that will be written on a call to write(), but may not be the number of bytes that will be consumed by read().\npublic virtual void print(std::ostream & os) const \npublic inline virtual const char * className() const \nclass scy::smpl::Peer \nclass scy::smpl::Peer\n  : public Value\nThis class represents a peer on the network. A Peer object may also contain arbitrary data set by the client to share with other peers on the network. \nSee also: Address for further methods and basic accessors.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Peer()\n\n\n\npublic  Peer(constPeer& r)\n\n\n\npublic  Peer(const json::Value & r)\n\n\n\npublic virtual  ~Peer()\n\n\n\npublicAddressaddress() const\n\n\n\npublic std::string id() const\n\n\n\npublic std::string user() const\n\n\n\npublic std::string name() const\n\n\n\npublic std::string type() const\n\n\n\npublic std::string host() const\n\n\n\npublic void setID(const std::string & id)\n\n\n\npublic void setUser(const std::string & user)\n\n\n\npublic void setName(const std::string & name)\n\n\n\npublic void setType(const std::string & type)\n\n\n\npublic void setHost(const std::string & host)\n\n\n\npublic virtual bool valid()\nUpdates the peer from the given data object.\n\n\npublic void print(std::ostream & os) const\n\n\n\npublic inline virtual const char * className() const\n\n\n\n\nMembers\npublic  Peer() \npublic  Peer(constPeer& r) \npublic  Peer(const json::Value & r) \npublic virtual  ~Peer() \npublicAddressaddress() const \npublic std::string id() const \npublic std::string user() const \npublic std::string name() const \npublic std::string type() const \npublic std::string host() const \npublic void setID(const std::string & id) \npublic void setUser(const std::string & user) \npublic void setName(const std::string & name) \npublic void setType(const std::string & type) \npublic void setHost(const std::string & host) \npublic virtual bool valid() \nUpdates the peer from the given data object.\npublic void print(std::ostream & os) const \npublic inline virtual const char * className() const \nclass scy::smpl::Presence \nclass scy::smpl::Presence\n  : public scy::smpl::Message\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Presence()\n\n\n\npublic  Presence(const json::Value & root)\n\n\n\npublic  Presence(constPresence& root)\n\n\n\npublic virtual  ~Presence()\n\n\n\npublic bool isProbe()\n\n\n\npublic void setProbe(bool flag)\n\n\n\n\nMembers\npublic  Presence() \npublic  Presence(const json::Value & root) \npublic  Presence(constPresence& root) \npublic virtual  ~Presence() \npublic bool isProbe() \npublic void setProbe(bool flag) \nclass scy::smpl::Roster \nclass scy::smpl::Roster\n  : public scy::LiveCollection\nThe Roster provides a registry for active network peers indexed by session ID.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Roster()\n\n\n\npublic virtual  ~Roster()\n\n\n\npublicPeer* getByHost(const std::string & host)\nReturns the first peer which matches the given host address.\n\n\npublic virtual PeerMap peers() const\n\n\n\npublic virtual void print(std::ostream & os) const\n\n\n\npublic inline virtual const char * className() const\n\n\n\n\nMembers\npublic  Roster() \npublic virtual  ~Roster() \npublicPeer* getByHost(const std::string & host) \nReturns the first peer which matches the given host address.\npublic virtual PeerMap peers() const \npublic virtual void print(std::ostream & os) const \npublic inline virtual const char * className() const \nclass scy::smpl::SSLClient \nclass scy::smpl::SSLClient\n  : public scy::smpl::Client\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  SSLClient(constClient::Options& options,uv::Loop * loop)\n\n\n\n\nMembers\npublic  SSLClient(constClient::Options& options,uv::Loop * loop) \nclass scy::smpl::TCPClient \nclass scy::smpl::TCPClient\n  : public scy::smpl::Client\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  TCPClient(constClient::Options& options,uv::Loop * loop)\n\n\n\n\nMembers\npublic  TCPClient(constClient::Options& options,uv::Loop * loop) \nstruct scy::smpl::Address \nThe Address structure is an endpoint identifier for a peer on the network. The format is like so: user|id\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::string user\n\n\n\npublic std::string id\n\n\n\npublic  Address()\n\n\n\npublic  Address(const std::string & addr)\n\n\n\npublic  Address(const std::string & user,const std::string & id)\n\n\n\npublic virtual  ~Address()\n\n\n\npublic bool parse(const std::string & addr)\n\n\n\npublic bool valid() const\n\n\n\npublic void print(std::ostream & os) const\n\n\n\npublic std::string toString() const\n\n\n\npublic bool operator==(constAddress& r)\n\n\n\npublic bool operator==(std::string & r)\n\n\n\n\nMembers\npublic std::string user \npublic std::string id \npublic  Address() \npublic  Address(const std::string & addr) \npublic  Address(const std::string & user,const std::string & id) \npublic virtual  ~Address() \npublic bool parse(const std::string & addr) \npublic bool valid() const \npublic void print(std::ostream & os) const \npublic std::string toString() const \npublic bool operator==(constAddress& r) \npublic bool operator==(std::string & r) \nstruct scy::smpl::CommandDelegate \nstruct scy::smpl::CommandDelegate\n  : public scy::smpl::MessageDelegate\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  CommandDelegate(constFilter& filter)\n\n\n\npublic inline  CommandDelegate(constCommandDelegate& r)\n\n\n\npublic inline virtual bool accepts(void * sender,IPacket& data,void * empty2,void * empty3,void * empty4)\n\n\n\n\nMembers\npublic inline  CommandDelegate(constFilter& filter) \npublic inline  CommandDelegate(constCommandDelegate& r) \npublic inline virtual bool accepts(void * sender,IPacket& data,void * empty2,void * empty3,void * empty4) \nstruct scy::smpl::EventDelegate \nstruct scy::smpl::EventDelegate\n  : public scy::smpl::MessageDelegate\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  EventDelegate()\n\n\n\npublic inline  EventDelegate(constEventDelegate& r)\n\n\n\npublic inline virtual bool accepts(void * sender,IPacket& data,void * empty2,void * empty3,void * empty4)\n\n\n\n\nMembers\npublic inline  EventDelegate() \npublic inline  EventDelegate(constEventDelegate& r) \npublic inline virtual bool accepts(void * sender,IPacket& data,void * empty2,void * empty3,void * empty4) \nstruct scy::smpl::Filter \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicBitwiseflags\n\n\n\npublic std::string path\n\n\n\npublic inline  Filter(const std::string & path,unsigned flags)\n\n\n\npublic inline  Filter(unsigned flags)\n\n\n\n\nMembers\npublicBitwiseflags \npublic std::string path \npublic inline  Filter(const std::string & path,unsigned flags) \npublic inline  Filter(unsigned flags) \nstruct scy::smpl::MessageDelegate \nstruct scy::smpl::MessageDelegate\n  : public scy::DelegateBase\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicFilterfilter\n\n\n\npublic inline  MessageDelegate(constFilter& filter)\n\n\n\npublic inline  MessageDelegate(constMessageDelegate& r)\n\n\n\npublic inline virtual bool accepts(void *,IPacket& data,void *,void *,void *)\n\n\n\n\nMembers\npublicFilterfilter \npublic inline  MessageDelegate(constFilter& filter) \npublic inline  MessageDelegate(constMessageDelegate& r) \npublic inline virtual bool accepts(void *,IPacket& data,void *,void *,void *) \nstruct scy::smpl::PresenceDelegate \nstruct scy::smpl::PresenceDelegate\n  : public scy::smpl::MessageDelegate\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  PresenceDelegate()\n\n\n\npublic inline  PresenceDelegate(constPresenceDelegate& r)\n\n\n\npublic inline virtual bool accepts(void * sender,IPacket& data,void * empty2,void * empty3,void * empty4)\n\n\n\n\nMembers\npublic inline  PresenceDelegate() \npublic inline  PresenceDelegate(constPresenceDelegate& r) \npublic inline virtual bool accepts(void * sender,IPacket& data,void * empty2,void * empty3,void * empty4) \n"},"api-turn.html":{"url":"api-turn.html","title":"TURN","keywords":"","body":"Module  turn\nThe turn module contains TURN (rfc5766) client and server implementations.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy::turn\n\n\n\n\nnamespace scy::turn \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::turn::Client\n\n\n\nclassscy::turn::FiveTuple\n\n\n\nclassscy::turn::IAllocation\n\n\n\nclassscy::turn::Request\n\n\n\nclassscy::turn::Server\nTURN server rfc5766 implementation.\n\n\nclassscy::turn::ServerAllocation\n\n\n\nclassscy::turn::TCPAllocation\n\n\n\nclassscy::turn::TCPClient\n\n\n\nclassscy::turn::TCPConnectionPair\n\n\n\nclassscy::turn::UDPAllocation\n\n\n\nclassscy::turn::UDPClient\n\n\n\nstructscy::turn::ClientObserver\n\n\n\nstructscy::turn::ClientState\n\n\n\nstructscy::turn::Permission\nTURN permission for a user session.\n\n\nstructscy::turn::RelayConnectionBinding\n\n\n\nstructscy::turn::ServerObserver\n\n\n\nstructscy::turn::ServerOptions\nConfiguration options for the TURN server.\n\n\nstructscy::turn::TCPClientObserver\n\n\n\n\nclass scy::turn::Client \nclass scy::turn::Client\n  : public scy::Stateful\n  : protected scy::turn::IAllocation\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Client(ClientObserver& observer,constOptions& options)\n\n\n\npublic virtual  ~Client()\n\n\n\npublic virtual void initiate()\nInitiates the allocation sequence.\n\n\npublic virtual void shutdown()\nShutdown the client and destroy the active allocation.\n\n\npublic virtual void sendAllocate()\nSends the allocation request.\n\n\npublic virtual void addPermission(const IPList & peerIPs)\n\n\n\npublic virtual void addPermission(const std::string & ip)\n\n\n\npublic virtual void sendCreatePermission()\nSends a CreatePermission request including all hosts.\n\n\npublic virtual void sendChannelBind(const std::string & peerIP)\n\n\n\npublic virtual void sendRefresh()\n\n\n\npublic virtual void sendData(const char * data,std::size_t size,constnet::Address& peerAddress)\n\n\n\npublic virtual bool handleResponse(conststun::Message& response)\n\n\n\npublic virtual void handleAllocateResponse(conststun::Message& response)\n\n\n\npublic virtual void handleAllocateErrorResponse(conststun::Message& response)\n\n\n\npublic virtual void handleCreatePermissionResponse(conststun::Message& response)\n\n\n\npublic virtual void handleCreatePermissionErrorResponse(conststun::Message& response)\n\n\n\npublic virtual void handleRefreshResponse(conststun::Message& response)\n\n\n\npublic virtual void handleDataIndication(conststun::Message& response)\n\n\n\npublic virtual int transportProtocol()\n\n\n\npublic virtualstun::Transaction* createTransaction(const net::Socket::Ptr & socket)\n\n\n\npublic virtual void authenticateRequest(stun::Message& request)\n\n\n\npublic virtual bool sendAuthenticatedTransaction(stun::Transaction* transaction)\n\n\n\npublic virtual bool removeTransaction(stun::Transaction* transaction)\n\n\n\npublicnet::AddressmappedAddress() const\n\n\n\npublic virtualnet::AddressrelayedAddress() const\n\n\n\npublic bool closed() const\n\n\n\npublicClientObserver& observer()\n\n\n\npublicOptions& options()\n\n\n\npublic virtual void onSocketRecv(void * sender,constMutableBuffer& buffer,constnet::Address& peerAddress)\n\n\n\npublic virtual void onSocketConnect(void * sender)\n\n\n\npublic virtual void onSocketClose(void * sender)\n\n\n\npublic virtual void onTransactionProgress(void * sender,TransactionState& state,constTransactionState&)\n\n\n\npublic virtual void onStateChange(ClientState& state,constClientState& oldState)\n\n\n\npublic virtual void onTimer(void *)\n\n\n\nprotectedClientObserver& _observer\n\n\n\nprotectedOptions_options\n\n\n\nprotected net::Socket::Ptr _socket\n\n\n\nprotectedTimer_timer\n\n\n\nprotectednet::Address_mappedAddress\n\n\n\nprotectednet::Address_relayedAddress\n\n\n\nprotected std::string _realm\n\n\n\nprotected std::string _nonce\n\n\n\nprotected std::dequestun::Message> _pendingIndications\nA list of queued Send indication packets awaiting server permissions.\n\n\nprotected std::vectorstun::Transaction* > _transactions\nA list containing currently active transactions.\n\n\n\nMembers\npublic  Client(ClientObserver& observer,constOptions& options) \npublic virtual  ~Client() \npublic virtual void initiate() \nInitiates the allocation sequence.\npublic virtual void shutdown() \nShutdown the client and destroy the active allocation.\npublic virtual void sendAllocate() \nSends the allocation request.\npublic virtual void addPermission(const IPList & peerIPs) \npublic virtual void addPermission(const std::string & ip) \nPeer permissions should be added/created before we kick off the allocation sequence, but may be added later.\npublic virtual void sendCreatePermission() \nSends a CreatePermission request including all hosts.\nA CreatePermission request will be sent as soon as the Allocation is created, and at timer x intervals.\npublic virtual void sendChannelBind(const std::string & peerIP) \npublic virtual void sendRefresh() \npublic virtual void sendData(const char * data,std::size_t size,constnet::Address& peerAddress) \npublic virtual bool handleResponse(conststun::Message& response) \npublic virtual void handleAllocateResponse(conststun::Message& response) \npublic virtual void handleAllocateErrorResponse(conststun::Message& response) \npublic virtual void handleCreatePermissionResponse(conststun::Message& response) \npublic virtual void handleCreatePermissionErrorResponse(conststun::Message& response) \npublic virtual void handleRefreshResponse(conststun::Message& response) \npublic virtual void handleDataIndication(conststun::Message& response) \npublic virtual int transportProtocol() \npublic virtualstun::Transaction* createTransaction(const net::Socket::Ptr & socket) \npublic virtual void authenticateRequest(stun::Message& request) \npublic virtual bool sendAuthenticatedTransaction(stun::Transaction* transaction) \npublic virtual bool removeTransaction(stun::Transaction* transaction) \npublicnet::AddressmappedAddress() const \npublic virtualnet::AddressrelayedAddress() const \npublic bool closed() const \npublicClientObserver& observer() \npublicOptions& options() \npublic virtual void onSocketRecv(void * sender,constMutableBuffer& buffer,constnet::Address& peerAddress) \npublic virtual void onSocketConnect(void * sender) \npublic virtual void onSocketClose(void * sender) \npublic virtual void onTransactionProgress(void * sender,TransactionState& state,constTransactionState&) \npublic virtual void onStateChange(ClientState& state,constClientState& oldState) \npublic virtual void onTimer(void *) \nprotectedClientObserver& _observer \nprotectedOptions_options \nprotected net::Socket::Ptr _socket \nprotectedTimer_timer \nprotectednet::Address_mappedAddress \nprotectednet::Address_relayedAddress \nprotected std::string _realm \nprotected std::string _nonce \nprotected std::dequestun::Message> _pendingIndications \nA list of queued Send indication packets awaiting server permissions.\nprotected std::vectorstun::Transaction* > _transactions \nA list containing currently active transactions.\nclass scy::turn::FiveTuple \nThe 5-TUPLE consists of a local, a remote address, and the transport protocol used by the client to communicate with the server.                                                           +---------+\n                                                          |         |\n                                                          | External|\n                                                        / | Client  |\n                                                      //  |         |\n                                                     /    |         |\n                                                   //     +---------+\n                                                  /\n                                                //\n                +-+                            /\n                | |                           /\n                | |                         //\n +---------+    | |          +---------+   /              +---------+\n |         |    |N|          |         | //               |         |\n | TURN    |    | |          |         |/                 | External|\n | Client  |----|A|----------|   TURN  |------------------| Client  |\n |         |    | |^        ^|  Server |^                ^|         |\n |         |    |T||        ||         ||                ||         |\n +---------+    | ||        |+---------+|                |+---------+\n    ^           | ||        |           |                |\n    |           | ||        |           |                |\n    |           +-+|        |           |                |\n    |              |        |           |                |\n    |\n               Internal     Internal    External         External\nClient         Remote       Local       Local            Remote\nPerforming     Transport    Transport   Transport        Transport\nAllocations    Address      Address     Address          Address\n               |          |            |                |\n               +-----+----+            +--------+-------+\n                     |                          |\n                     |                          |\n\n                   Internal                External\n                   5-Tuple                 5-tuple\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  FiveTuple()\n\n\n\npublic  FiveTuple(constnet::Address& remote,constnet::Address& local,net::TransportType transport)\n\n\n\npublic  FiveTuple(constFiveTuple& r)\n\n\n\npublic inline constnet::Address& remote() const\n\n\n\npublic inline constnet::Address& local() const\n\n\n\npublic inline const net::TransportType & transport() const\n\n\n\npublic inline void remote(constnet::Address& remote)\n\n\n\npublic inline void local(constnet::Address& local)\n\n\n\npublic inline void transport(const net::TransportType & transport)\n\n\n\npublic bool operator==(constFiveTuple& r) const\n\n\n\npublic bool operatorFiveTuple& r) const\n\n\n\npublic std::string toString() const\n\n\n\n\nMembers\npublic  FiveTuple() \npublic  FiveTuple(constnet::Address& remote,constnet::Address& local,net::TransportType transport) \npublic  FiveTuple(constFiveTuple& r) \npublic inline constnet::Address& remote() const \npublic inline constnet::Address& local() const \npublic inline const net::TransportType & transport() const \npublic inline void remote(constnet::Address& remote) \npublic inline void local(constnet::Address& local) \npublic inline void transport(const net::TransportType & transport) \npublic bool operator==(constFiveTuple& r) const \npublic bool operatorFiveTuple& r) const \npublic std::string toString() const \nclass scy::turn::IAllocation \nAll TURN operations revolve around allocations, and all TURN messages are associated with an allocation. An allocation conceptually consists of the following state data:\n\nthe relayed transport address;\n\n\nthe 5-tuple: (client's IP address, client's port, server IP address, server port, transport protocol);\n\n\nthe authentication information;\n\n\nthe time-to-expiry;\n\na list of permissions;\n\na list of channel to peer bindings.\n\nThe relayed transport address is the transport address allocated by the server for communicating with peers, while the 5-tuple describes the communication path between the client and the server. On the client, the 5-tuple uses the client's host transport address; on the server, the 5-tuple uses the client's server-reflexive transport address.\nBoth the relayed transport address and the 5-tuple MUST be unique across all allocations, so either one can be used to uniquely identify the allocation. The authentication information (e.g., username, password, realm, and nonce) is used to both verify subsequent requests and to compute the message integrity of responses. The username, realm, and nonce values are initially those used in the authenticated Allocate request that creates the allocation, though the server can change the nonce value during the lifetime of the allocation using a 438 (Stale Nonce) reply. Note that, rather than storing the password explicitly, for security reasons, it may be desirable for the server to store the key value, which is an MD5 hash over the username, realm, and password (see [RFC5389]).\nThe time-to-expiry is the time in seconds left until the allocation expires. Each Allocate or Refresh transaction sets this timer, which then ticks down towards 0. By default, each Allocate or Refresh transaction resets this timer to the default lifetime value of 600 seconds (10 minutes), but the client can request a different value in the Allocate and Refresh request. Allocations can only be refreshed using the Refresh request; sending data to a peer does not refresh an allocation. When an allocation expires, the state data associated with the allocation can be freed.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  IAllocation(constFiveTuple& tuple,const std::string & username,std::int64_t lifetime)\n\n\n\npublic virtual  ~IAllocation()\n\n\n\npublic virtual void updateUsage(std::int64_t numBytes)\n\n\n\npublic virtual void setLifetime(std::int64_t lifetime)\nSets the lifetime of the allocation and resets the timeout.\n\n\npublic virtual void setBandwidthLimit(std::int64_t numBytes)\nSets the bandwidth limit in bytes for this allocation.\n\n\npublic virtual bool expired() const\n\n\n\npublic virtual bool deleted() const\n\n\n\npublic virtual std::int64_t bandwidthLimit() const\n\n\n\npublic virtual std::int64_t bandwidthUsed() const\n\n\n\npublic virtual std::int64_t bandwidthRemaining() const\n\n\n\npublic virtual std::int64_t timeRemaining() const\n\n\n\npublic virtualFiveTuple& tuple()\n\n\n\npublic virtual std::string username() const\n\n\n\npublic virtual std::int64_t lifetime() const\n\n\n\npublic virtual PermissionList permissions() const\n\n\n\npublicnet::AddressrelayedAddress() const\n\n\n\npublic virtual void addPermission(const std::string & ip)\n\n\n\npublic virtual void addPermissions(const IPList & ips)\n\n\n\npublic virtual void removePermission(const std::string & ip)\n\n\n\npublic virtual void removeAllPermissions()\n\n\n\npublic virtual void removeExpiredPermissions()\n\n\n\npublic virtual bool hasPermission(const std::string & peerIP)\n\n\n\npublic inline virtual void print(std::ostream & os) const\n\n\n\nprotectedFiveTuple_tuple\n\n\n\nprotected std::string _username\n\n\n\nprotected PermissionList _permissions\n\n\n\nprotected std::int64_t _lifetime\n\n\n\nprotected std::int64_t _bandwidthLimit\n\n\n\nprotected std::int64_t _bandwidthUsed\n\n\n\nprotected time_t _createdAt\n\n\n\nprotected time_t _updatedAt\n\n\n\nprotected bool _deleted\n\n\n\n\nMembers\npublic  IAllocation(constFiveTuple& tuple,const std::string & username,std::int64_t lifetime) \npublic virtual  ~IAllocation() \npublic virtual void updateUsage(std::int64_t numBytes) \nUpdates the allocation's internal timeout and bandwidth usage each time the allocation is used.\npublic virtual void setLifetime(std::int64_t lifetime) \nSets the lifetime of the allocation and resets the timeout.\npublic virtual void setBandwidthLimit(std::int64_t numBytes) \nSets the bandwidth limit in bytes for this allocation.\npublic virtual bool expired() const \nReturns true if the allocation is expired ie. is timed out or the bandwidth limit has been reached.\npublic virtual bool deleted() const \nReturns true if the allocation's deleted flag is set and or if the allocation has expired.\nThis signifies that the allocation is ready to be destroyed via async garbage collection. See Server::onTimer() and Client::onTimer()\npublic virtual std::int64_t bandwidthLimit() const \npublic virtual std::int64_t bandwidthUsed() const \npublic virtual std::int64_t bandwidthRemaining() const \npublic virtual std::int64_t timeRemaining() const \npublic virtualFiveTuple& tuple() \npublic virtual std::string username() const \npublic virtual std::int64_t lifetime() const \npublic virtual PermissionList permissions() const \npublicnet::AddressrelayedAddress() const \npublic virtual void addPermission(const std::string & ip) \npublic virtual void addPermissions(const IPList & ips) \npublic virtual void removePermission(const std::string & ip) \npublic virtual void removeAllPermissions() \npublic virtual void removeExpiredPermissions() \npublic virtual bool hasPermission(const std::string & peerIP) \npublic inline virtual void print(std::ostream & os) const \nprotectedFiveTuple_tuple \nprotected std::string _username \nprotected PermissionList _permissions \nprotected std::int64_t _lifetime \nprotected std::int64_t _bandwidthLimit \nprotected std::int64_t _bandwidthUsed \nprotected time_t _createdAt \nprotected time_t _updatedAt \nprotected bool _deleted \nclass scy::turn::Request \nclass scy::turn::Request\n  : public scy::stun::Message\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic net::TransportType transport\n\n\n\npublicnet::AddresslocalAddress\n\n\n\npublicnet::AddressremoteAddress\n\n\n\npublic std::string hash\n\n\n\npublic inline  Request(conststun::Message& message,net::TransportType transport,constnet::Address& localAddress,constnet::Address& remoteAddress)\n\n\n\n\nMembers\npublic net::TransportType transport \npublicnet::AddresslocalAddress \npublicnet::AddressremoteAddress \npublic std::string hash \npublic inline  Request(conststun::Message& message,net::TransportType transport,constnet::Address& localAddress,constnet::Address& remoteAddress) \nclass scy::turn::Server \nTURN server rfc5766 implementation.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Server(ServerObserver& observer,constServerOptions& options)\n\n\n\npublic virtual  ~Server()\n\n\n\npublic virtual void start()\n\n\n\npublic virtual void stop()\n\n\n\npublic void handleRequest(Request& request,AuthenticationState state)\n\n\n\npublic void handleAuthorizedRequest(Request& request)\n\n\n\npublic void handleBindingRequest(Request& request)\n\n\n\npublic void handleAllocateRequest(Request& request)\n\n\n\npublic void handleConnectionBindRequest(Request& request)\n\n\n\npublic void respond(Request& request,stun::Message& response)\n\n\n\npublic void respondError(Request& request,int errorCode,const char * errorDesc)\n\n\n\npublic ServerAllocationMap allocations() const\n\n\n\npublic void addAllocation(ServerAllocation* alloc)\n\n\n\npublic void removeAllocation(ServerAllocation* alloc)\n\n\n\npublicServerAllocation* getAllocation(constFiveTuple& tuple)\n\n\n\npublicTCPAllocation* getTCPAllocation(const std::uint32_t & connectionID)\n\n\n\npublic net::TCPSocket::Ptr getTCPSocket(constnet::Address& remoteAddr)\n\n\n\npublic void releaseTCPSocket(net::Socket* socket)\n\n\n\npublicServerObserver& observer()\n\n\n\npublicServerOptions& options()\n\n\n\npublicnet::UDPSocket& udpSocket()\n\n\n\npublicnet::TCPSocket& tcpSocket()\n\n\n\npublicTimer& timer()\n\n\n\npublic void onTCPAcceptConnection(void * sender,const net::TCPSocket::Ptr & sock)\n\n\n\npublic void onTCPSocketClosed(void * sender)\n\n\n\npublic void onSocketRecv(void * sender,constMutableBuffer& buffer,constnet::Address& peerAddress)\n\n\n\npublic void onTimer(void *)\n\n\n\n\nMembers\npublic  Server(ServerObserver& observer,constServerOptions& options) \npublic virtual  ~Server() \npublic virtual void start() \npublic virtual void stop() \npublic void handleRequest(Request& request,AuthenticationState state) \npublic void handleAuthorizedRequest(Request& request) \npublic void handleBindingRequest(Request& request) \npublic void handleAllocateRequest(Request& request) \npublic void handleConnectionBindRequest(Request& request) \npublic void respond(Request& request,stun::Message& response) \npublic void respondError(Request& request,int errorCode,const char * errorDesc) \npublic ServerAllocationMap allocations() const \npublic void addAllocation(ServerAllocation* alloc) \npublic void removeAllocation(ServerAllocation* alloc) \npublicServerAllocation* getAllocation(constFiveTuple& tuple) \npublicTCPAllocation* getTCPAllocation(const std::uint32_t & connectionID) \npublic net::TCPSocket::Ptr getTCPSocket(constnet::Address& remoteAddr) \npublic void releaseTCPSocket(net::Socket* socket) \npublicServerObserver& observer() \npublicServerOptions& options() \npublicnet::UDPSocket& udpSocket() \npublicnet::TCPSocket& tcpSocket() \npublicTimer& timer() \npublic void onTCPAcceptConnection(void * sender,const net::TCPSocket::Ptr & sock) \npublic void onTCPSocketClosed(void * sender) \npublic void onSocketRecv(void * sender,constMutableBuffer& buffer,constnet::Address& peerAddress) \npublic void onTimer(void *) \nclass scy::turn::ServerAllocation \nclass scy::turn::ServerAllocation\n  : public scy::turn::IAllocation\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  ServerAllocation(Server& server,constFiveTuple& tuple,const std::string & username,std::int64_t lifetime)\n\n\n\npublic virtual bool handleRequest(Request& request)\n\n\n\npublic virtual void handleRefreshRequest(Request& request)\n\n\n\npublic virtual void handleCreatePermission(Request& request)\n\n\n\npublic virtual bool onTimer()\n\n\n\npublic virtual std::int64_t timeRemaining() const\n\n\n\npublic virtual std::int64_t maxTimeRemaining() const\n\n\n\npublic virtualServer& server()\n\n\n\npublic virtual void print(std::ostream & os) const\n\n\n\nprotected std::uint32_t _maxLifetime\n\n\n\nprotectedServer& _server\n\n\n\nprotected virtual  ~ServerAllocation()\n\n\n\n\nMembers\npublic  ServerAllocation(Server& server,constFiveTuple& tuple,const std::string & username,std::int64_t lifetime) \npublic virtual bool handleRequest(Request& request) \npublic virtual void handleRefreshRequest(Request& request) \npublic virtual void handleCreatePermission(Request& request) \npublic virtual bool onTimer() \nAsynchronous timer callback for updating the allocation permissions and state etc. If this call returns false the allocation will be deleted.\npublic virtual std::int64_t timeRemaining() const \npublic virtual std::int64_t maxTimeRemaining() const \npublic virtualServer& server() \npublic virtual void print(std::ostream & os) const \nprotected std::uint32_t _maxLifetime \nprotectedServer& _server \nprotected virtual  ~ServerAllocation() \nIMPORTANT: The destructor should never be called directly as the allocation is deleted via the timer callback. See onTimer()\nclass scy::turn::TCPAllocation \nclass scy::turn::TCPAllocation\n  : public scy::turn::ServerAllocation\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  TCPAllocation(Server& server,const net::Socket::Ptr & control,constFiveTuple& tuple,const std::string & username,const std::uint32_t & lifetime)\n\n\n\npublic virtual  ~TCPAllocation()\n\n\n\npublic virtual bool handleRequest(Request& request)\n\n\n\npublic void handleConnectRequest(Request& request)\n\n\n\npublic void handleConnectionBindRequest(Request& request)\n\n\n\npublic void sendPeerConnectResponse(TCPConnectionPair* pair,bool success)\nSends a Connect request response to control.\n\n\npublic int sendToControl(stun::Message& message)\n\n\n\npublicnet::TCPSocket& control()\n\n\n\npublic virtualnet::AddressrelayedAddress() const\n\n\n\npublicTCPConnectionPairMap& pairs()\n\n\n\npublic virtual bool onTimer()\n\n\n\npublic void onPeerAccept(void * sender,const net::TCPSocket::Ptr & sock)\nAccepts incoming peer sockets for ConnectionBind requests.\n\n\npublic void onControlClosed(void * sender)\n\n\n\nprotected net::TCPSocket::Ptr _control\n\n\n\nprotected net::TCPSocket::Ptr _acceptor\n\n\n\nprotectedTCPConnectionPairMap_pairs\n\n\n\n\nMembers\npublic  TCPAllocation(Server& server,const net::Socket::Ptr & control,constFiveTuple& tuple,const std::string & username,const std::uint32_t & lifetime) \npublic virtual  ~TCPAllocation() \npublic virtual bool handleRequest(Request& request) \npublic void handleConnectRequest(Request& request) \npublic void handleConnectionBindRequest(Request& request) \npublic void sendPeerConnectResponse(TCPConnectionPair* pair,bool success) \nSends a Connect request response to control.\npublic int sendToControl(stun::Message& message) \npublicnet::TCPSocket& control() \npublic virtualnet::AddressrelayedAddress() const \npublicTCPConnectionPairMap& pairs() \npublic virtual bool onTimer() \nAsynchronous timer callback for updating the allocation permissions and state etc. If this call returns false the allocation will be deleted.\npublic void onPeerAccept(void * sender,const net::TCPSocket::Ptr & sock) \nAccepts incoming peer sockets for ConnectionBind requests.\npublic void onControlClosed(void * sender) \nCallback for handling controll connection destruction. The allocation will be deleted.\nprotected net::TCPSocket::Ptr _control \nprotected net::TCPSocket::Ptr _acceptor \nprotectedTCPConnectionPairMap_pairs \nclass scy::turn::TCPClient \nclass scy::turn::TCPClient\n  : public scy::turn::Client\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  TCPClient(TCPClientObserver& observer,constClient::Options& options)\n\n\n\npublic virtual  ~TCPClient()\n\n\n\npublic virtual void initiate()\nInitiates the allocation sequence.\n\n\npublic virtual void shutdown()\nShutdown the client and destroy the active allocation.\n\n\npublic virtual void sendConnectRequest(constnet::Address& peerAddress)\n\n\n\npublic virtual void sendData(const char * data,std::size_t size,constnet::Address& peerAddress)\n\n\n\npublic virtual bool handleResponse(conststun::Message& response)\n\n\n\npublic virtual void handleConnectResponse(conststun::Message& response)\n\n\n\npublic virtual void handleConnectErrorResponse(conststun::Message& response)\n\n\n\npublic virtual void handleConnectionBindResponse(conststun::Message& response)\n\n\n\npublic virtual void handleConnectionBindErrorResponse(conststun::Message& response)\n\n\n\npublic virtual void handleConnectionAttemptIndication(conststun::Message& response)\n\n\n\npublic virtual bool createAndBindConnection(std::uint32_t connectionID,constnet::Address& peerAddress)\n\n\n\npublic virtual void onRelayConnectionConnect(void * sender)\n\n\n\npublic virtual void onRelayDataReceived(void * sender,constMutableBuffer& buffer,constnet::Address& peerAddress)\n\n\n\npublic virtual void onRelayConnectionError(void * sender,constError& error)\n\n\n\npublic virtual void onRelayConnectionClosed(void * sender)\n\n\n\npublic void freeConnection(constnet::Address& peerAddress)\n\n\n\npublic virtual int transportProtocol()\n\n\n\npublicConnectionManager& connections()\n\n\n\npublic inline virtual const char * className() const\n\n\n\nprotectedTCPClientObserver& _observer\n\n\n\nprotectedConnectionManager_connections\n\n\n\n\nMembers\npublic  TCPClient(TCPClientObserver& observer,constClient::Options& options) \npublic virtual  ~TCPClient() \npublic virtual void initiate() \nInitiates the allocation sequence.\npublic virtual void shutdown() \nShutdown the client and destroy the active allocation.\npublic virtual void sendConnectRequest(constnet::Address& peerAddress) \npublic virtual void sendData(const char * data,std::size_t size,constnet::Address& peerAddress) \npublic virtual bool handleResponse(conststun::Message& response) \npublic virtual void handleConnectResponse(conststun::Message& response) \npublic virtual void handleConnectErrorResponse(conststun::Message& response) \npublic virtual void handleConnectionBindResponse(conststun::Message& response) \npublic virtual void handleConnectionBindErrorResponse(conststun::Message& response) \npublic virtual void handleConnectionAttemptIndication(conststun::Message& response) \npublic virtual bool createAndBindConnection(std::uint32_t connectionID,constnet::Address& peerAddress) \npublic virtual void onRelayConnectionConnect(void * sender) \npublic virtual void onRelayDataReceived(void * sender,constMutableBuffer& buffer,constnet::Address& peerAddress) \npublic virtual void onRelayConnectionError(void * sender,constError& error) \npublic virtual void onRelayConnectionClosed(void * sender) \npublic void freeConnection(constnet::Address& peerAddress) \npublic virtual int transportProtocol() \npublicConnectionManager& connections() \npublic inline virtual const char * className() const \nprotectedTCPClientObserver& _observer \nprotectedConnectionManager_connections \nclass scy::turn::TCPConnectionPair \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicTCPAllocation& allocation\n\n\n\npublic net::TCPSocket::Ptr client\nThe client socket, nullptr to start.\n\n\npublic net::TCPSocket::Ptr peer\nThe client socket, nullptr to start.\n\n\npublic Buffer earlyPeerData\nStores early peer > client data.\n\n\npublic std::uint32_t connectionID\nThe unique connection ID.\n\n\npublic bool isDataConnection\nTrue when p2p relay is flowing.\n\n\npublicTimeouttimeout\nThe ConnectionBind request timeout counter.\n\n\npublic stun::TransactionID transactionID\n\n\n\npublic  TCPConnectionPair(TCPAllocation& allocation)\n\n\n\npublic virtual  ~TCPConnectionPair()\n\n\n\npublic bool doPeerConnect(constnet::Address& peerAddr)\n\n\n\npublic bool makeDataConnection()\n\n\n\npublic void setPeerSocket(const net::TCPSocket::Ptr & socket)\n\n\n\npublic void setClientSocket(const net::TCPSocket::Ptr & socket)\n\n\n\npublic void onPeerConnectSuccess(void * sender)\nConnection success callback for Connect request.\n\n\npublic void onPeerConnectError(void * sender,constError& error)\nConnection error callback for Connect request.\n\n\npublic void onClientDataReceived(void * sender,constMutableBuffer& buffer,constnet::Address& peerAddress)\n\n\n\npublic void onPeerDataReceived(void * sender,constMutableBuffer& buffer,constnet::Address& peerAddress)\n\n\n\npublic void onConnectionClosed(void * sender)\n\n\n\npublic void startTimeout()\n\n\n\npublic bool expired() const\nReturn true if the peer ConnectionBind request timed out.\n\n\n\nMembers\npublicTCPAllocation& allocation \npublic net::TCPSocket::Ptr client \nThe client socket, nullptr to start.\npublic net::TCPSocket::Ptr peer \nThe client socket, nullptr to start.\npublic Buffer earlyPeerData \nStores early peer > client data.\npublic std::uint32_t connectionID \nThe unique connection ID.\npublic bool isDataConnection \nTrue when p2p relay is flowing.\npublicTimeouttimeout \nThe ConnectionBind request timeout counter.\npublic stun::TransactionID transactionID \npublic  TCPConnectionPair(TCPAllocation& allocation) \npublic virtual  ~TCPConnectionPair() \npublic bool doPeerConnect(constnet::Address& peerAddr) \nInitiates an outgoing TCP connection to the peer for Connect requests.\npublic bool makeDataConnection() \nBinds the client <> peer relay pipe once the ConnectionBind request is successfull.\npublic void setPeerSocket(const net::TCPSocket::Ptr & socket) \npublic void setClientSocket(const net::TCPSocket::Ptr & socket) \npublic void onPeerConnectSuccess(void * sender) \nConnection success callback for Connect request.\npublic void onPeerConnectError(void * sender,constError& error) \nConnection error callback for Connect request.\npublic void onClientDataReceived(void * sender,constMutableBuffer& buffer,constnet::Address& peerAddress) \npublic void onPeerDataReceived(void * sender,constMutableBuffer& buffer,constnet::Address& peerAddress) \npublic void onConnectionClosed(void * sender) \nCallback for handing either client or peer connections which result in the destruction of the TCPConnectionPair.\npublic void startTimeout() \nStarts the ConnectionBind request timeout.\nIf no ConnectionBind request associated with this peer data connection is received after 30 seconds, the peer data connection MUST be closed.\npublic bool expired() const \nReturn true if the peer ConnectionBind request timed out.\nclass scy::turn::UDPAllocation \nclass scy::turn::UDPAllocation\n  : public scy::turn::ServerAllocation\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  UDPAllocation(Server& server,constFiveTuple& tuple,const std::string & username,const std::uint32_t & lifetime)\n\n\n\npublic virtual  ~UDPAllocation()\n\n\n\npublic void onPeerDataReceived(void *,constMutableBuffer& buffer,constnet::Address& peerAddress)\n\n\n\npublic virtual bool handleRequest(Request& request)\n\n\n\npublic void handleSendIndication(Request& request)\n\n\n\npublic int send(const char * data,std::size_t size,constnet::Address& peerAddress)\n\n\n\npublic virtualnet::AddressrelayedAddress() const\n\n\n\n\nMembers\npublic  UDPAllocation(Server& server,constFiveTuple& tuple,const std::string & username,const std::uint32_t & lifetime) \npublic virtual  ~UDPAllocation() \npublic void onPeerDataReceived(void *,constMutableBuffer& buffer,constnet::Address& peerAddress) \npublic virtual bool handleRequest(Request& request) \npublic void handleSendIndication(Request& request) \npublic int send(const char * data,std::size_t size,constnet::Address& peerAddress) \npublic virtualnet::AddressrelayedAddress() const \nclass scy::turn::UDPClient \nclass scy::turn::UDPClient\n  : public scy::turn::Client\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  UDPClient(ClientObserver& observer,constOptions& options)\n\n\n\npublic virtual  ~UDPClient()\n\n\n\n\nMembers\npublic  UDPClient(ClientObserver& observer,constOptions& options) \npublic virtual  ~UDPClient() \nstruct scy::turn::ClientObserver \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic void onClientStateChange(Client& client,ClientState& state,constClientState& oldState)\n\n\n\npublic void onRelayDataReceived(Client& client,const char * data,std::size_t size,constnet::Address& peerAddress)\n\n\n\npublic inline virtual void onAllocationCreated(Client& client,conststun::Transaction& transaction)\n\n\n\npublic inline virtual void onAllocationFailed(Client& client,int errorCode,const std::string & reason)\n\n\n\npublic inline virtual void onAllocationDeleted(Client& client,conststun::Transaction& transaction)\n\n\n\npublic inline virtual void onAllocationPermissionsCreated(Client& client,const PermissionList & permissions)\n\n\n\npublic inline virtual void onTransactionResponse(Client& client,conststun::Transaction& transaction)\n\n\n\npublic inline virtual void onTimer(Client& client)\n\n\n\n\nMembers\npublic void onClientStateChange(Client& client,ClientState& state,constClientState& oldState) \npublic void onRelayDataReceived(Client& client,const char * data,std::size_t size,constnet::Address& peerAddress) \npublic inline virtual void onAllocationCreated(Client& client,conststun::Transaction& transaction) \npublic inline virtual void onAllocationFailed(Client& client,int errorCode,const std::string & reason) \npublic inline virtual void onAllocationDeleted(Client& client,conststun::Transaction& transaction) \npublic inline virtual void onAllocationPermissionsCreated(Client& client,const PermissionList & permissions) \npublic inline virtual void onTransactionResponse(Client& client,conststun::Transaction& transaction) \nAll received transaction responses will be routed here after local processing so the observer can easily implement extra functionality.\npublic inline virtual void onTimer(Client& client) \nFires after the client's internal timer callback. Handy for performing extra async cleanup tasks.\nstruct scy::turn::ClientState \nstruct scy::turn::ClientState\n  : public scy::State\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual std::string toString() const\n\n\n\n\nMembers\npublic inline virtual std::string toString() const \nstruct scy::turn::Permission \nTURN permission for a user session.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::string ip\n\n\n\npublicTimeouttimeout\n\n\n\npublic inline  Permission(const std::string & ip)\n\n\n\npublic inline void refresh()\n\n\n\npublic inline bool operator==(const std::string & r) const\n\n\n\n\nMembers\npublic std::string ip \npublicTimeouttimeout \npublic inline  Permission(const std::string & ip) \npublic inline void refresh() \npublic inline bool operator==(const std::string & r) const \nstruct scy::turn::RelayConnectionBinding \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::uint32_t connectionID\n\n\n\npublicnet::AddresspeerAddress\n\n\n\n\nMembers\npublic std::uint32_t connectionID \npublicnet::AddresspeerAddress \nstruct scy::turn::ServerObserver \nThe ServerObserver receives callbacks for and is responsible for managing allocation and bandwidth quotas, authentication methods and authentication.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic void onServerAllocationCreated(Server* server,IAllocation* alloc)\n\n\n\npublic void onServerAllocationRemoved(Server* server,IAllocation* alloc)\n\n\n\npublic AuthenticationState authenticateRequest(Server* server,Request& request)\n\n\n\n\nMembers\npublic void onServerAllocationCreated(Server* server,IAllocation* alloc) \npublic void onServerAllocationRemoved(Server* server,IAllocation* alloc) \npublic AuthenticationState authenticateRequest(Server* server,Request& request) \nThe observer class can implement authentication using the long-term credential mechanism of [RFC5389]. The class design is such that authentication can be preformed asynchronously against a remote database, or locally. The default implementation returns true to all requests.\nTo mitigate either intentional or unintentional denial-of-service attacks against the server by clients with valid usernames and passwords, it is RECOMMENDED that the server impose limits on both the number of allocations active at one time for a given username and on the amount of bandwidth those allocations can use. The server should reject new allocations that would exceed the limit on the allowed number of allocations active at one time with a 486 (Allocation Quota Exceeded) (see Section 6.2), and should discard application data traffic that exceeds the bandwidth quota.\nstruct scy::turn::ServerOptions \nConfiguration options for the TURN server.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::string software\n\n\n\npublic std::string realm\n\n\n\npublic std::uint32_t allocationDefaultLifetime\n\n\n\npublic std::uint32_t allocationMaxLifetime\n\n\n\npublic int allocationMaxPermissions\n\n\n\npublic int timerInterval\n\n\n\npublic int earlyMediaBufferSize\n\n\n\npublicnet::AddresslistenAddr\nThe TCP and UDP bind() address.\n\n\npublic std::string externalIP\nThe external public facing IP address of the server.\n\n\npublic bool enableTCP\n\n\n\npublic bool enableUDP\n\n\n\npublic inline  ServerOptions()\n\n\n\n\nMembers\npublic std::string software \npublic std::string realm \npublic std::uint32_t allocationDefaultLifetime \npublic std::uint32_t allocationMaxLifetime \npublic int allocationMaxPermissions \npublic int timerInterval \npublic int earlyMediaBufferSize \npublicnet::AddresslistenAddr \nThe TCP and UDP bind() address.\npublic std::string externalIP \nThe external public facing IP address of the server.\npublic bool enableTCP \npublic bool enableUDP \npublic inline  ServerOptions() \nstruct scy::turn::TCPClientObserver \nstruct scy::turn::TCPClientObserver\n  : public scy::turn::ClientObserver\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual void onRelayConnectionCreated(TCPClient& client,const net::TCPSocket::Ptr & socket,constnet::Address& peerAddress)\n\n\n\npublic inline virtual void onRelayConnectionError(TCPClient& client,const net::TCPSocket::Ptr & socket,constnet::Address& peerAddress)\n\n\n\npublic inline virtual void onRelayConnectionClosed(TCPClient& client,const net::TCPSocket::Ptr & socket,constnet::Address& peerAddress)\n\n\n\npublic inline virtual void onRelayConnectionBindingFailed(TCPClient& client,constnet::Address& peerAddress)\n\n\n\npublic inline virtual bool onPeerConnectionAttempt(TCPClient& client,constnet::Address& peerAddress)\n\n\n\n\nMembers\npublic inline virtual void onRelayConnectionCreated(TCPClient& client,const net::TCPSocket::Ptr & socket,constnet::Address& peerAddress) \npublic inline virtual void onRelayConnectionError(TCPClient& client,const net::TCPSocket::Ptr & socket,constnet::Address& peerAddress) \npublic inline virtual void onRelayConnectionClosed(TCPClient& client,const net::TCPSocket::Ptr & socket,constnet::Address& peerAddress) \npublic inline virtual void onRelayConnectionBindingFailed(TCPClient& client,constnet::Address& peerAddress) \npublic inline virtual bool onPeerConnectionAttempt(TCPClient& client,constnet::Address& peerAddress) \n"},"api-util.html":{"url":"api-util.html","title":"Util","keywords":"","body":"Module  util\n///\nA simple message rate limiter based on the token bucket algorithm.\nProvides timed persistent data storage for class instances. TValue must implement the clone() method.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy\n\n\n\n\nnamespace scy \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::AsyncDiagnostic\n\n\n\nclassscy::Base64PacketEncoder\n\n\n\nclassscy::BasicUser\n\n\n\nclassscy::DiagnosticManager\n\n\n\nclassscy::IDiagnostic\n\n\n\nclassscy::IRegistry\n\n\n\nclassscy::RateLimiter\n\n\n\nclassscy::StreamManager\n\n\n\nclassscy::TimedManager\n\n\n\nclassscy::UserManager\n\n\n\nstructscy::DiagnosticState\n\n\n\nstructscy::IUser\n\n\n\n\nclass scy::AsyncDiagnostic \nclass scy::AsyncDiagnostic\n  : public scy::IDiagnostic\n  : public scy::async::Runnable\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual  ~AsyncDiagnostic()\n\n\n\npublic inline virtual void check()\n\n\n\nprotectedThread_thread\n\n\n\n\nMembers\npublic inline virtual  ~AsyncDiagnostic() \npublic inline virtual void check() \nprotectedThread_thread \nclass scy::Base64PacketEncoder \nclass scy::Base64PacketEncoder\n  : public scy::PacketProcessor\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicPacketSignalemitter\n\n\n\npublic inline  Base64PacketEncoder()\n\n\n\npublic inline virtual void process(IPacket& packet)\n\n\n\n\nMembers\npublicPacketSignalemitter \npublic inline  Base64PacketEncoder() \npublic inline virtual void process(IPacket& packet) \nThis method performs processing on the given packet and emits the result.\nNote: If packet processing is async (the packet is not in the current thread scope) then packet data must be copied. Copied data can be freed directly aFter the async call to emit() the outgoing packet.\nclass scy::BasicUser \nclass scy::BasicUser\n  : public scy::IUser\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  BasicUser(const std::string & username,const std::string & password)\n\n\n\npublic inline virtual std::string username() const\n\n\n\npublic inline virtual std::string password() const\n\n\n\nprotected std::string _username\n\n\n\nprotected std::string _password\n\n\n\n\nMembers\npublic inline  BasicUser(const std::string & username,const std::string & password) \npublic inline virtual std::string username() const \npublic inline virtual std::string password() const \nprotected std::string _username \nprotected std::string _password \nclass scy::DiagnosticManager \nclass scy::DiagnosticManager\n  : public scy::PointerCollection\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicNullSignalDiagnosticsComplete\n\n\n\npublic  DiagnosticManager()\n\n\n\npublic virtual  ~DiagnosticManager()\n\n\n\npublic bool freeDiagnostic(const std::string & name)\n\n\n\npublic bool addDiagnostic(IDiagnostic* test)\nAdds a IDiagnostic test instance.\n\n\npublic virtualIDiagnostic* getDiagnostic(const std::string & name)\n\n\n\npublic virtual void resetAll()\n\n\n\npublic virtual void checkAll()\n\n\n\npublic virtual bool allComplete()\n\n\n\npublic virtual void onDiagnosticStateChange(void *,DiagnosticState& state,constDiagnosticState&)\n\n\n\n\nMembers\npublicNullSignalDiagnosticsComplete \npublic  DiagnosticManager() \npublic virtual  ~DiagnosticManager() \npublic bool freeDiagnostic(const std::string & name) \npublic bool addDiagnostic(IDiagnostic* test) \nAdds a IDiagnostic test instance.\npublic virtualIDiagnostic* getDiagnostic(const std::string & name) \nReturns the IDiagnostic instance or throws a NotFoundException exception.\npublic virtual void resetAll() \npublic virtual void checkAll() \nRuns all managed IDiagnostic tests. DiagnosticsComplete will be dispatched on completion.\npublic virtual bool allComplete() \npublic virtual void onDiagnosticStateChange(void *,DiagnosticState& state,constDiagnosticState&) \nclass scy::IDiagnostic \nclass scy::IDiagnostic\n  : public scy::Stateful\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::string name\nThe name of the diagnostic.\n\n\npublic std::string description\nThe diagnostic description.\n\n\npublic std::vector summary\n\n\n\npublicSignal SummaryUpdated\n\n\n\npublic  IDiagnostic()\n\n\n\npublic virtual  ~IDiagnostic()\n\n\n\npublic virtual void check()\n\n\n\npublic virtual void reset()\n\n\n\npublic virtual bool complete() const\n\n\n\npublic virtual bool passed() const\n\n\n\npublic virtual bool failed() const\n\n\n\nprotected void run()\nOverride to implement diagnostic logic.\n\n\nprotected virtual bool pass()\n\n\n\nprotected virtual bool fail()\n\n\n\nprotected virtual void addSummary(const std::string & text)\n\n\n\n\nMembers\npublic std::string name \nThe name of the diagnostic.\npublic std::string description \nThe diagnostic description.\npublic std::vector summary \nThe diagnostic summary, maybe including troubleshooting information on failure.\npublicSignal SummaryUpdated \nSignals when a new text item is added to the summary.\npublic  IDiagnostic() \npublic virtual  ~IDiagnostic() \npublic virtual void check() \npublic virtual void reset() \npublic virtual bool complete() const \npublic virtual bool passed() const \npublic virtual bool failed() const \nprotected void run() \nOverride to implement diagnostic logic.\nThe StateChange signal will dispatch diagnostic test results to delegates.\nprotected virtual bool pass() \nprotected virtual bool fail() \nprotected virtual void addSummary(const std::string & text) \nclass scy::IRegistry \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublicSignal TypeRegistered\n\n\n\npublicSignal TypeUnregistered\n\n\n\npublic inline  IRegistry()\n\n\n\npublic inline virtual  ~IRegistry()\n\n\n\npublic inline virtual ItemT * createInstance(const std::string & s)\n\n\n\npublic template  inline void registerType(const std::string & s)\n\n\n\npublic inline virtual void unregisterType(const std::string & s)\n\n\n\npublic inline TypeMap types() const\n\n\n\n\nMembers\npublicSignal TypeRegistered \npublicSignal TypeUnregistered \npublic inline  IRegistry() \npublic inline virtual  ~IRegistry() \npublic inline virtual ItemT * createInstance(const std::string & s) \npublic template  inline void registerType(const std::string & s) \npublic inline virtual void unregisterType(const std::string & s) \npublic inline TypeMap types() const \nclass scy::RateLimiter \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic double rate\nHow many messages.\n\n\npublic double seconds\nOver how many seconds.\n\n\npublic double allowance\nRemaining send allowance.\n\n\npublic clock_t lastCheck\nLast time canSend() was called.\n\n\npublic inline  RateLimiter(double rate,double seconds)\n\n\n\npublic inline bool canSend()\n\n\n\n\nMembers\npublic double rate \nHow many messages.\npublic double seconds \nOver how many seconds.\npublic double allowance \nRemaining send allowance.\npublic clock_t lastCheck \nLast time canSend() was called.\npublic inline  RateLimiter(double rate,double seconds) \npublic inline bool canSend() \nclass scy::StreamManager \nclass scy::StreamManager\n  : public scy::LiveCollection >\n  : public scy::basic::Polymorphic\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  StreamManager(bool freeClosedStreams)\n\n\n\npublic virtual  ~StreamManager()\n\n\n\npublic virtual bool addStream(PacketStream* stream,bool whiny)\n\n\n\npublic virtual bool closeStream(const std::string & name,bool whiny)\n\n\n\npublic virtual void closeAll()\n\n\n\npublic virtualPacketStream* getStream(const std::string & name,bool whiny)\n\n\n\npublic virtualPacketStream* getDafaultStream()\nReturns the first stream in the list, or NULL.\n\n\npublic virtual Map streams() const\n\n\n\npublic virtual void print(std::ostream & os) const\n\n\n\nprotected bool _freeClosedStreams\n\n\n\nprotected virtual void onAdd(PacketStream* task)\nCalled after a stream is added.\n\n\nprotected virtual void onRemove(PacketStream* task)\nCalled after a stream is removed.\n\n\nprotected virtual void onStreamStateChange(void * sender,PacketStreamState& state,constPacketStreamState&)\n\n\n\nprotected inline virtual const char * className() const\n\n\n\n\nMembers\npublic  StreamManager(bool freeClosedStreams) \npublic virtual  ~StreamManager() \npublic virtual bool addStream(PacketStream* stream,bool whiny) \npublic virtual bool closeStream(const std::string & name,bool whiny) \npublic virtual void closeAll() \npublic virtualPacketStream* getStream(const std::string & name,bool whiny) \npublic virtualPacketStream* getDafaultStream() \nReturns the first stream in the list, or NULL.\npublic virtual Map streams() const \npublic virtual void print(std::ostream & os) const \nprotected bool _freeClosedStreams \nprotected virtual void onAdd(PacketStream* task) \nCalled after a stream is added.\nprotected virtual void onRemove(PacketStream* task) \nCalled after a stream is removed.\nprotected virtual void onStreamStateChange(void * sender,PacketStreamState& state,constPacketStreamState&) \nprotected inline virtual const char * className() const \nclass scy::TimedManager \nclass scy::TimedManager\n  : public scy::PointerCollection\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  TimedManager(uv::Loop * loop)\n\n\n\npublic inline virtual  ~TimedManager()\n\n\n\npublic inline virtual void add(const TKey & key,TValue * item,long timeout)\n\n\n\npublic inline virtual bool expires(const TKey & key,long timeout)\nUpdate the item expiry timeout.\n\n\npublic inline virtual bool expires(TValue * item,long timeout)\nUpdate the item expiry timeout.\n\n\npublic inline virtual void clear()\n\n\n\nprotected mutableMutex_tmutex\n\n\n\nprotected TimeoutMap _timeouts\n\n\n\nprotectedTimer_timer\n\n\n\nprotected inline virtual bool setTimeout(TValue * item,long timeout)\n\n\n\nprotected inline virtual void onRemove(const TKey & key,TValue * item)\n\n\n\nprotected inline virtual void onTimeout(TValue * item)\n\n\n\nprotected inline void onTimerUpdate(void *)\n\n\n\n\nMembers\npublic inline  TimedManager(uv::Loop * loop) \npublic inline virtual  ~TimedManager() \npublic inline virtual void add(const TKey & key,TValue * item,long timeout) \nAdd an item which will expire (and be deleted) after the specified timeout value. If the timeout is 0 the item will be stored indefinitely. The TimedManager assumes ownership of the given pointer.\npublic inline virtual bool expires(const TKey & key,long timeout) \nUpdate the item expiry timeout.\npublic inline virtual bool expires(TValue * item,long timeout) \nUpdate the item expiry timeout.\npublic inline virtual void clear() \nprotected mutableMutex_tmutex \nprotected TimeoutMap _timeouts \nprotectedTimer_timer \nprotected inline virtual bool setTimeout(TValue * item,long timeout) \nprotected inline virtual void onRemove(const TKey & key,TValue * item) \nprotected inline virtual void onTimeout(TValue * item) \nprotected inline void onTimerUpdate(void *) \nclass scy::UserManager \nclass scy::UserManager\n  : public scy::LiveCollection\n\nDeprecated: This class contains a list of users that have access on the system.\n\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline  UserManager()\n\n\n\npublic inline virtual  ~UserManager()\n\n\n\npublic inline virtual bool add(IUser* user)\n\n\n\n\nMembers\npublic inline  UserManager() \npublic inline virtual  ~UserManager() \npublic inline virtual bool add(IUser* user) \nstruct scy::DiagnosticState \nstruct scy::DiagnosticState\n  : public scy::State\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic inline virtual std::string str(unsigned int id) const\n\n\n\n\nMembers\npublic inline virtual std::string str(unsigned int id) const \nstruct scy::IUser \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic std::string username() const\n\n\n\npublic std::string password() const\n\n\n\n\nMembers\npublic std::string username() const \npublic std::string password() const \n"},"api-uv.html":{"url":"api-uv.html","title":"UV","keywords":"","body":"Module  uv\nThe uv module contains C++ wrappers for libuv.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy::uv\n\n\n\n\nnamespace scy::uv \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::uv::Handle\nUV Handle.\n\n\nstructscy::uv::ShutdownCmd\n\n\n\n\nclass scy::uv::Handle \nUV Handle.\nA base class for managing a libuv handle during it's lifecycle and safely handling its asynchronous destruction mechanism.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  Handle(uv_loop_t * loop,void * handle)\n\n\n\npublic virtual  ~Handle()\n\n\n\npublic virtual void setLoop(uv_loop_t * loop)\nThe event loop may be set before the handle is initialized.\n\n\npublic virtual uv_loop_t * loop() const\nReturns a cast pointer to the managed libuv handle.\n\n\npublic template  inline T * ptr() const\nReturns a typecasted pointer to the managed libuv handle.\n\n\npublic virtual uv_handle_t * ptr() const\nReturns a pointer to the managed libuv handle.\n\n\npublic virtual bool active() const\n\n\n\npublic virtual bool closed() const\nReturns true after close() has been called.\n\n\npublic bool ref()\nReference main loop again, once unref'd.\n\n\npublic bool unref()\nUnreference the main loop after initialized.\n\n\npublic uv_thread_t tid() const\nReturns the parent thread ID.\n\n\npublic constscy::Error& error() const\nReturns the error context if any.\n\n\npublic virtual void setAndThrowError(const std::string & prefix,int errorno)\n\n\n\npublic virtual void throwError(const std::string & prefix,int errorno) const\n\n\n\npublic virtual void setUVError(const std::string & prefix,int errorno)\n\n\n\npublic virtual void setError(constscy::Error& err)\nSets the error content and triggers callbacks.\n\n\npublic virtual void close()\nCloses and destroys the associated libuv handle.\n\n\npublic void assertThread() const\nMake sure we are calling from the event loop thread.\n\n\nprotected uv_loop_t * _loop\n\n\n\nprotected uv_handle_t * _ptr\n\n\n\nprotectedscy::Error_error\n\n\n\nprotected uv_thread_t _tid\n\n\n\nprotected bool _closed\n\n\n\nprotected virtual void onError(constscy::Error&)\n\n\n\nprotected virtual void onClose()\nOverride to handle closure.\n\n\nprotected  Handle(constHandle&)\n\n\n\nprotectedHandle& operator=(constHandle&)\n\n\n\n\nMembers\npublic  Handle(uv_loop_t * loop,void * handle) \npublic virtual  ~Handle() \npublic virtual void setLoop(uv_loop_t * loop) \nThe event loop may be set before the handle is initialized.\npublic virtual uv_loop_t * loop() const \nReturns a cast pointer to the managed libuv handle.\npublic template  inline T * ptr() const \nReturns a typecasted pointer to the managed libuv handle.\npublic virtual uv_handle_t * ptr() const \nReturns a pointer to the managed libuv handle.\npublic virtual bool active() const \nReturns true when the handle is active. This method should be used instead of closed() to determine the veracity of the libuv handle for stream io operations.\npublic virtual bool closed() const \nReturns true after close() has been called.\npublic bool ref() \nReference main loop again, once unref'd.\npublic bool unref() \nUnreference the main loop after initialized.\npublic uv_thread_t tid() const \nReturns the parent thread ID.\npublic constscy::Error& error() const \nReturns the error context if any.\npublic virtual void setAndThrowError(const std::string & prefix,int errorno) \nSets and throws the last error. Should never be called inside libuv callbacks.\npublic virtual void throwError(const std::string & prefix,int errorno) const \nThrows the last error. This function is const so it can be used for invalid getter operations on closed handles. The actual error would be set on the next iteraton.\npublic virtual void setUVError(const std::string & prefix,int errorno) \nSets the last error and sends relevant callbacks. This method can be called inside libuv callbacks.\npublic virtual void setError(constscy::Error& err) \nSets the error content and triggers callbacks.\npublic virtual void close() \nCloses and destroys the associated libuv handle.\npublic void assertThread() const \nMake sure we are calling from the event loop thread.\nprotected uv_loop_t * _loop \nprotected uv_handle_t * _ptr \nprotectedscy::Error_error \nprotected uv_thread_t _tid \nprotected bool _closed \nprotected virtual void onError(constscy::Error&) \nOverride to handle errors. The error may be a UV error, or a custom error.\nprotected virtual void onClose() \nOverride to handle closure.\nprotected  Handle(constHandle&) \nprotectedHandle& operator=(constHandle&) \nstruct scy::uv::ShutdownCmd \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic void * opaque\n\n\n\npublic std::function callback\n\n\n\n\nMembers\npublic void * opaque \npublic std::function callback \n"},"api-webrtc.html":{"url":"api-webrtc.html","title":"WebRTC","keywords":"","body":"Module  webrtc\nThe webrtc module contains WebRTC integrations.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nnamespacescy\n\n\n\n\nnamespace scy \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\nclassscy::AudioPacketModule\n\n\n\nclassscy::DummySetSessionDescriptionObserver\n\n\n\nclassscy::ImageSequenceRecorder\n\n\n\nclassscy::MultiplexMediaCapturer\n\n\n\nclassscy::PeerConnection\n\n\n\nclassscy::PeerConnectionManager\n\n\n\nclassscy::StreamRecorder\n\n\n\nclassscy::VideoPacketSource\n\n\n\n\nclass scy::AudioPacketModule \nclass scy::AudioPacketModule\n  : public AudioDeviceModule\n  : public MessageHandler\nThis class implements an AudioDeviceModule that can be used to detect if audio is being received properly if it is fed by another AudioDeviceModule in some arbitrary audio pipeline where they are connected. It does not play out or record any audio so it does not need access to any hardware and can therefore be used in the gtest testing framework.\nNote P postfix of a function indicates that it should only be called by the processing thread.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic void onAudioCaptured(void * sender,av::AudioPacket& packet)\nHandles input packets from the capture for sending.\n\n\npublic int64_t TimeUntilNextProcess()\n\n\n\npublic void Process()\n\n\n\npublic int32_t ActiveAudioLayer(AudioLayer * audio_layer) const\n\n\n\npublic ErrorCode LastError() const\n\n\n\npublic int32_t RegisterEventObserver(webrtc::AudioDeviceObserver * event_callback)\n\n\n\npublic int32_t RegisterAudioCallback(webrtc::AudioTransport * audio_callback)\nNote: Calling this method from a callback may result in deadlock.\n\n\npublic int32_t Init()\n\n\n\npublic int32_t Terminate()\n\n\n\npublic bool Initialized() const\n\n\n\npublic int16_t PlayoutDevices()\n\n\n\npublic int16_t RecordingDevices()\n\n\n\npublic int32_t PlayoutDeviceName(uint16_t index,char name,char guid)\n\n\n\npublic int32_t RecordingDeviceName(uint16_t index,char name,char guid)\n\n\n\npublic int32_t SetPlayoutDevice(uint16_t index)\n\n\n\npublic int32_t SetPlayoutDevice(WindowsDeviceType device)\n\n\n\npublic int32_t SetRecordingDevice(uint16_t index)\n\n\n\npublic int32_t SetRecordingDevice(WindowsDeviceType device)\n\n\n\npublic int32_t PlayoutIsAvailable(bool * available)\n\n\n\npublic int32_t InitPlayout()\n\n\n\npublic bool PlayoutIsInitialized() const\n\n\n\npublic int32_t RecordingIsAvailable(bool * available)\n\n\n\npublic int32_t InitRecording()\n\n\n\npublic bool RecordingIsInitialized() const\n\n\n\npublic int32_t StartPlayout()\n\n\n\npublic int32_t StopPlayout()\n\n\n\npublic bool Playing() const\n\n\n\npublic int32_t StartRecording()\n\n\n\npublic int32_t StopRecording()\n\n\n\npublic bool Recording() const\n\n\n\npublic int32_t SetAGC(bool enable)\n\n\n\npublic bool AGC() const\n\n\n\npublic int32_t SetWaveOutVolume(uint16_t volume_left,uint16_t volume_right)\n\n\n\npublic int32_t WaveOutVolume(uint16_t * volume_left,uint16_t * volume_right) const\n\n\n\npublic int32_t InitSpeaker()\n\n\n\npublic bool SpeakerIsInitialized() const\n\n\n\npublic int32_t InitMicrophone()\n\n\n\npublic bool MicrophoneIsInitialized() const\n\n\n\npublic int32_t SpeakerVolumeIsAvailable(bool * available)\n\n\n\npublic int32_t SetSpeakerVolume(uint32_t volume)\n\n\n\npublic int32_t SpeakerVolume(uint32_t * volume) const\n\n\n\npublic int32_t MaxSpeakerVolume(uint32_t * max_volume) const\n\n\n\npublic int32_t MinSpeakerVolume(uint32_t * min_volume) const\n\n\n\npublic int32_t SpeakerVolumeStepSize(uint16_t * step_size) const\n\n\n\npublic int32_t MicrophoneVolumeIsAvailable(bool * available)\n\n\n\npublic int32_t SetMicrophoneVolume(uint32_t volume)\n\n\n\npublic int32_t MicrophoneVolume(uint32_t * volume) const\n\n\n\npublic int32_t MaxMicrophoneVolume(uint32_t * max_volume) const\n\n\n\npublic int32_t MinMicrophoneVolume(uint32_t * min_volume) const\n\n\n\npublic int32_t MicrophoneVolumeStepSize(uint16_t * step_size) const\n\n\n\npublic int32_t SpeakerMuteIsAvailable(bool * available)\n\n\n\npublic int32_t SetSpeakerMute(bool enable)\n\n\n\npublic int32_t SpeakerMute(bool * enabled) const\n\n\n\npublic int32_t MicrophoneMuteIsAvailable(bool * available)\n\n\n\npublic int32_t SetMicrophoneMute(bool enable)\n\n\n\npublic int32_t MicrophoneMute(bool * enabled) const\n\n\n\npublic int32_t MicrophoneBoostIsAvailable(bool * available)\n\n\n\npublic int32_t SetMicrophoneBoost(bool enable)\n\n\n\npublic int32_t MicrophoneBoost(bool * enabled) const\n\n\n\npublic int32_t StereoPlayoutIsAvailable(bool * available) const\n\n\n\npublic int32_t SetStereoPlayout(bool enable)\n\n\n\npublic int32_t StereoPlayout(bool * enabled) const\n\n\n\npublic int32_t StereoRecordingIsAvailable(bool * available) const\n\n\n\npublic int32_t SetStereoRecording(bool enable)\n\n\n\npublic int32_t StereoRecording(bool * enabled) const\n\n\n\npublic int32_t SetRecordingChannel(const ChannelType channel)\n\n\n\npublic int32_t RecordingChannel(ChannelType * channel) const\n\n\n\npublic int32_t SetPlayoutBuffer(const BufferType type,uint16_t size_ms)\n\n\n\npublic int32_t PlayoutBuffer(BufferType * type,uint16_t * size_ms) const\n\n\n\npublic int32_t PlayoutDelay(uint16_t * delay_ms) const\n\n\n\npublic int32_t RecordingDelay(uint16_t * delay_ms) const\n\n\n\npublic int32_t CPULoad(uint16_t * load) const\n\n\n\npublic int32_t StartRawOutputFileRecording(const char pcm_file_name_utf8)\n\n\n\npublic int32_t StopRawOutputFileRecording()\n\n\n\npublic int32_t StartRawInputFileRecording(const char pcm_file_name_utf8)\n\n\n\npublic int32_t StopRawInputFileRecording()\n\n\n\npublic int32_t SetRecordingSampleRate(const uint32_t samples_per_sec)\n\n\n\npublic int32_t RecordingSampleRate(uint32_t * samples_per_sec) const\n\n\n\npublic int32_t SetPlayoutSampleRate(const uint32_t samples_per_sec)\n\n\n\npublic int32_t PlayoutSampleRate(uint32_t * samples_per_sec) const\n\n\n\npublic int32_t ResetAudioDevice()\n\n\n\npublic int32_t SetLoudspeakerStatus(bool enable)\n\n\n\npublic int32_t GetLoudspeakerStatus(bool * enabled) const\n\n\n\npublic inline bool BuiltInAECIsAvailable() const\n\n\n\npublic inline int32_t EnableBuiltInAEC(bool enable)\n\n\n\npublic inline bool BuiltInAGCIsAvailable() const\n\n\n\npublic inline int32_t EnableBuiltInAGC(bool enable)\n\n\n\npublic inline bool BuiltInNSIsAvailable() const\n\n\n\npublic inline int32_t EnableBuiltInNS(bool enable)\n\n\n\npublic void OnMessage(rtc::Message * msg)\nWEBRTC_IOS.\n\n\nprotected  explicit AudioPacketModule()\n\n\n\nprotected virtual  ~AudioPacketModule()\n\n\n\n\nMembers\npublic void onAudioCaptured(void * sender,av::AudioPacket& packet) \nHandles input packets from the capture for sending.\npublic int64_t TimeUntilNextProcess() \nFollowing functions are inherited from webrtc::AudioDeviceModule. Only functions called by [PeerConnection](#classscy_1_1PeerConnection) are implemented, the rest do nothing and return success. If a function is not expected to be called by [PeerConnection](#classscy_1_1PeerConnection) an assertion is triggered if it is in fact called.\npublic void Process() \npublic int32_t ActiveAudioLayer(AudioLayer * audio_layer) const \npublic ErrorCode LastError() const \npublic int32_t RegisterEventObserver(webrtc::AudioDeviceObserver * event_callback) \npublic int32_t RegisterAudioCallback(webrtc::AudioTransport * audio_callback) \nNote: Calling this method from a callback may result in deadlock.\npublic int32_t Init() \npublic int32_t Terminate() \npublic bool Initialized() const \npublic int16_t PlayoutDevices() \npublic int16_t RecordingDevices() \npublic int32_t PlayoutDeviceName(uint16_t index,char name,char guid) \npublic int32_t RecordingDeviceName(uint16_t index,char name,char guid) \npublic int32_t SetPlayoutDevice(uint16_t index) \npublic int32_t SetPlayoutDevice(WindowsDeviceType device) \npublic int32_t SetRecordingDevice(uint16_t index) \npublic int32_t SetRecordingDevice(WindowsDeviceType device) \npublic int32_t PlayoutIsAvailable(bool * available) \npublic int32_t InitPlayout() \npublic bool PlayoutIsInitialized() const \npublic int32_t RecordingIsAvailable(bool * available) \npublic int32_t InitRecording() \npublic bool RecordingIsInitialized() const \npublic int32_t StartPlayout() \npublic int32_t StopPlayout() \npublic bool Playing() const \npublic int32_t StartRecording() \npublic int32_t StopRecording() \npublic bool Recording() const \npublic int32_t SetAGC(bool enable) \npublic bool AGC() const \npublic int32_t SetWaveOutVolume(uint16_t volume_left,uint16_t volume_right) \npublic int32_t WaveOutVolume(uint16_t * volume_left,uint16_t * volume_right) const \npublic int32_t InitSpeaker() \npublic bool SpeakerIsInitialized() const \npublic int32_t InitMicrophone() \npublic bool MicrophoneIsInitialized() const \npublic int32_t SpeakerVolumeIsAvailable(bool * available) \npublic int32_t SetSpeakerVolume(uint32_t volume) \npublic int32_t SpeakerVolume(uint32_t * volume) const \npublic int32_t MaxSpeakerVolume(uint32_t * max_volume) const \npublic int32_t MinSpeakerVolume(uint32_t * min_volume) const \npublic int32_t SpeakerVolumeStepSize(uint16_t * step_size) const \npublic int32_t MicrophoneVolumeIsAvailable(bool * available) \npublic int32_t SetMicrophoneVolume(uint32_t volume) \npublic int32_t MicrophoneVolume(uint32_t * volume) const \npublic int32_t MaxMicrophoneVolume(uint32_t * max_volume) const \npublic int32_t MinMicrophoneVolume(uint32_t * min_volume) const \npublic int32_t MicrophoneVolumeStepSize(uint16_t * step_size) const \npublic int32_t SpeakerMuteIsAvailable(bool * available) \npublic int32_t SetSpeakerMute(bool enable) \npublic int32_t SpeakerMute(bool * enabled) const \npublic int32_t MicrophoneMuteIsAvailable(bool * available) \npublic int32_t SetMicrophoneMute(bool enable) \npublic int32_t MicrophoneMute(bool * enabled) const \npublic int32_t MicrophoneBoostIsAvailable(bool * available) \npublic int32_t SetMicrophoneBoost(bool enable) \npublic int32_t MicrophoneBoost(bool * enabled) const \npublic int32_t StereoPlayoutIsAvailable(bool * available) const \npublic int32_t SetStereoPlayout(bool enable) \npublic int32_t StereoPlayout(bool * enabled) const \npublic int32_t StereoRecordingIsAvailable(bool * available) const \npublic int32_t SetStereoRecording(bool enable) \npublic int32_t StereoRecording(bool * enabled) const \npublic int32_t SetRecordingChannel(const ChannelType channel) \npublic int32_t RecordingChannel(ChannelType * channel) const \npublic int32_t SetPlayoutBuffer(const BufferType type,uint16_t size_ms) \npublic int32_t PlayoutBuffer(BufferType * type,uint16_t * size_ms) const \npublic int32_t PlayoutDelay(uint16_t * delay_ms) const \npublic int32_t RecordingDelay(uint16_t * delay_ms) const \npublic int32_t CPULoad(uint16_t * load) const \npublic int32_t StartRawOutputFileRecording(const char pcm_file_name_utf8) \npublic int32_t StopRawOutputFileRecording() \npublic int32_t StartRawInputFileRecording(const char pcm_file_name_utf8) \npublic int32_t StopRawInputFileRecording() \npublic int32_t SetRecordingSampleRate(const uint32_t samples_per_sec) \npublic int32_t RecordingSampleRate(uint32_t * samples_per_sec) const \npublic int32_t SetPlayoutSampleRate(const uint32_t samples_per_sec) \npublic int32_t PlayoutSampleRate(uint32_t * samples_per_sec) const \npublic int32_t ResetAudioDevice() \npublic int32_t SetLoudspeakerStatus(bool enable) \npublic int32_t GetLoudspeakerStatus(bool * enabled) const \npublic inline bool BuiltInAECIsAvailable() const \npublic inline int32_t EnableBuiltInAEC(bool enable) \npublic inline bool BuiltInAGCIsAvailable() const \npublic inline int32_t EnableBuiltInAGC(bool enable) \npublic inline bool BuiltInNSIsAvailable() const \npublic inline int32_t EnableBuiltInNS(bool enable) \npublic void OnMessage(rtc::Message * msg) \nWEBRTC_IOS.\nEnd of functions inherited from webrtc::AudioDeviceModule. The following function is inherited from rtc::MessageHandler.\nprotected  explicit AudioPacketModule() \nThe constructor is protected because the class needs to be created as a reference counted object (for memory managment reasons). It could be exposed in which case the burden of proper instantiation would be put on the creator of a AudioPacketModule instance. To create an instance of this class use the [Create()](#group__webrtc_1gaf78f45016b72c9bdca424e9a31691db8) API.\nprotected virtual  ~AudioPacketModule() \nThe destructor is protected because it is reference counted and should not be deleted directly.\nclass scy::DummySetSessionDescriptionObserver \nclass scy::DummySetSessionDescriptionObserver\n  : public SetSessionDescriptionObserver\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic virtual void OnSuccess()\n\n\n\npublic virtual void OnFailure(const std::string & error)\n\n\n\nprotected inline  DummySetSessionDescriptionObserver()\n\n\n\nprotected inline  ~DummySetSessionDescriptionObserver()\n\n\n\n\nMembers\npublic virtual void OnSuccess() \npublic virtual void OnFailure(const std::string & error) \nprotected inline  DummySetSessionDescriptionObserver() \nprotected inline  ~DummySetSessionDescriptionObserver() \nclass scy::ImageSequenceRecorder \nclass scy::ImageSequenceRecorder\n  : public rtc::VideoSinkInterface\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  ImageSequenceRecorder(webrtc::VideoTrackInterface * track_to_render,const std::string & basename)\n\n\n\npublic virtual  ~ImageSequenceRecorder()\n\n\n\npublic std::string getNextFilename()\n\n\n\npublic void OnFrame(const cricket::VideoFrame & frame)\nVideoSinkInterface implementation.\n\n\nprotected rtc::scoped_refptr _renderedTrack\n\n\n\nprotected const std::string _basename\n\n\n\nprotected size_t _count\n\n\n\nprotected int _width\n\n\n\nprotected int _height\n\n\n\nprotected av::VideoEncoder _encoder\n\n\n\nprotected AVFrame * _avframe\n\n\n\n\nMembers\npublic  ImageSequenceRecorder(webrtc::VideoTrackInterface * track_to_render,const std::string & basename) \npublic virtual  ~ImageSequenceRecorder() \npublic std::string getNextFilename() \npublic void OnFrame(const cricket::VideoFrame & frame) \nVideoSinkInterface implementation.\nprotected rtc::scoped_refptr _renderedTrack \nprotected const std::string _basename \nprotected size_t _count \nprotected int _width \nprotected int _height \nprotected av::VideoEncoder _encoder \nprotected AVFrame * _avframe \nclass scy::MultiplexMediaCapturer \nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  MultiplexMediaCapturer()\n\n\n\npublic virtual  ~MultiplexMediaCapturer()\n\n\n\npublic virtual void openFile(const std::string & file)\n\n\n\npublic virtual void addMediaTracks(webrtc::PeerConnectionFactoryInterface * factory,webrtc::MediaStreamInterface * stream)\n\n\n\npublic virtual void start()\n\n\n\npublic virtual void stop()\n\n\n\npublic virtual rtc::scoped_refptrAudioPacketModule> getAudioModule()\n\n\n\npublic virtualVideoPacketSource* createVideoSource()\n\n\n\nprotectedPacketStream_stream\n\n\n\nprotected av::MediaCapture::Ptr _capture\n\n\n\nprotected rtc::scoped_refptrAudioPacketModule> _audioModule\n\n\n\n\nMembers\npublic  MultiplexMediaCapturer() \npublic virtual  ~MultiplexMediaCapturer() \npublic virtual void openFile(const std::string & file) \npublic virtual void addMediaTracks(webrtc::PeerConnectionFactoryInterface * factory,webrtc::MediaStreamInterface * stream) \npublic virtual void start() \npublic virtual void stop() \npublic virtual rtc::scoped_refptrAudioPacketModule> getAudioModule() \npublic virtualVideoPacketSource* createVideoSource() \nprotectedPacketStream_stream \nprotected av::MediaCapture::Ptr _capture \nprotected rtc::scoped_refptrAudioPacketModule> _audioModule \nclass scy::PeerConnection \nclass scy::PeerConnection\n  : public PeerConnectionObserver\n  : public CreateSessionDescriptionObserver\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  PeerConnection(PeerConnectionManager* manager,const std::string & peerid,Modemode)\n\n\n\npublic virtual  ~PeerConnection()\n\n\n\npublic virtual rtc::scoped_refptr createMediaStream()\n\n\n\npublic virtual void createConnection()\n\n\n\npublic virtual void closeConnection()\nClose the peer connection.\n\n\npublic virtual void createOffer()\n\n\n\npublic virtual void recvSDP(const std::string & type,const std::string & sdp)\nReceive a remote offer or answer.\n\n\npublic virtual void recvCandidate(const std::string & mid,int mlineindex,const std::string & sdp)\nReceive a remote candidate.\n\n\npublic void setPeerConnectionFactory(rtc::scoped_refptr factory)\n\n\n\npublic std::string peerid() const\n\n\n\npublic webrtc::FakeConstraints & constraints()\n\n\n\npublic webrtc::PeerConnectionFactoryInterface * factory() const\n\n\n\npublic rtc::scoped_refptr peerConnection() const\n\n\n\npublic rtc::scoped_refptr stream() const\n\n\n\nprotectedPeerConnectionManager* _manager\n\n\n\nprotected std::string _peerid\n\n\n\nprotectedMode_mode\n\n\n\nprotected webrtc::PeerConnectionInterface::RTCConfiguration _config\n\n\n\nprotected webrtc::FakeConstraints _constraints\n\n\n\nprotected rtc::scoped_refptr _factory\n\n\n\nprotected rtc::scoped_refptr _peerConnection\n\n\n\nprotected rtc::scoped_refptr _stream\n\n\n\nprotected virtual void OnAddStream(webrtc::MediaStreamInterface * stream)\ninherited from PeerConnectionObserver\n\n\nprotected virtual void OnRemoveStream(webrtc::MediaStreamInterface * stream)\n\n\n\nprotected virtual void OnIceCandidate(const webrtc::IceCandidateInterface * candidate)\n\n\n\nprotected virtual void OnSignalingChange(webrtc::PeerConnectionInterface::SignalingState new_state)\n\n\n\nprotected virtual void OnIceConnectionChange(webrtc::PeerConnectionInterface::IceConnectionState new_state)\n\n\n\nprotected virtual void OnIceGatheringChange(webrtc::PeerConnectionInterface::IceGatheringState new_state)\n\n\n\nprotected virtual void OnRenegotiationNeeded()\n\n\n\nprotected virtual void OnSuccess(webrtc::SessionDescriptionInterface * desc)\ninherited from CreateSessionDescriptionObserver\n\n\nprotected virtual void OnFailure(const std::string & error)\n\n\n\nprotected inline virtual int AddRef() const\n\n\n\nprotected inline virtual int Release() const\n\n\n\n\nMembers\npublic  PeerConnection(PeerConnectionManager* manager,const std::string & peerid,Modemode) \npublic virtual  ~PeerConnection() \npublic virtual rtc::scoped_refptr createMediaStream() \nCreate the local media stream. Only necessary when we are creating the offer.\npublic virtual void createConnection() \nCreate the peer connection once configuration, constraints and streams have been set.\npublic virtual void closeConnection() \nClose the peer connection.\npublic virtual void createOffer() \nCreate the offer SDP tos end to the peer. No offer should be received after creating the offer. A call to recvRemoteAnswer is expected to initiate the session.\npublic virtual void recvSDP(const std::string & type,const std::string & sdp) \nReceive a remote offer or answer.\npublic virtual void recvCandidate(const std::string & mid,int mlineindex,const std::string & sdp) \nReceive a remote candidate.\npublic void setPeerConnectionFactory(rtc::scoped_refptr factory) \nSet a custom PeerConnectionFactory object Must be done before any streams are initiated\npublic std::string peerid() const \npublic webrtc::FakeConstraints & constraints() \npublic webrtc::PeerConnectionFactoryInterface * factory() const \npublic rtc::scoped_refptr peerConnection() const \npublic rtc::scoped_refptr stream() const \nprotectedPeerConnectionManager* _manager \nprotected std::string _peerid \nprotectedMode_mode \nprotected webrtc::PeerConnectionInterface::RTCConfiguration _config \nprotected webrtc::FakeConstraints _constraints \nprotected rtc::scoped_refptr _factory \nprotected rtc::scoped_refptr _peerConnection \nprotected rtc::scoped_refptr _stream \nprotected virtual void OnAddStream(webrtc::MediaStreamInterface * stream) \ninherited from PeerConnectionObserver\nprotected virtual void OnRemoveStream(webrtc::MediaStreamInterface * stream) \nprotected virtual void OnIceCandidate(const webrtc::IceCandidateInterface * candidate) \nprotected virtual void OnSignalingChange(webrtc::PeerConnectionInterface::SignalingState new_state) \nprotected virtual void OnIceConnectionChange(webrtc::PeerConnectionInterface::IceConnectionState new_state) \nprotected virtual void OnIceGatheringChange(webrtc::PeerConnectionInterface::IceGatheringState new_state) \nprotected virtual void OnRenegotiationNeeded() \nprotected virtual void OnSuccess(webrtc::SessionDescriptionInterface * desc) \ninherited from CreateSessionDescriptionObserver\nprotected virtual void OnFailure(const std::string & error) \nprotected inline virtual int AddRef() const \nprotected inline virtual int Release() const \nclass scy::PeerConnectionManager \nclass scy::PeerConnectionManager\n  : public scy::PointerCollection\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  PeerConnectionManager(rtc::scoped_refptr factory)\n\n\n\npublic virtual  ~PeerConnectionManager()\n\n\n\npublic virtual void sendSDP(PeerConnection* conn,const std::string & type,const std::string & sdp)\n\n\n\npublic virtual void sendCandidate(PeerConnection* conn,const std::string & mid,int mlineindex,const std::string & sdp)\n\n\n\npublic virtual void recvSDP(const std::string & peerid,const json::Value & data)\n\n\n\npublic virtual void recvCandidate(const std::string & peerid,const json::Value & data)\n\n\n\npublic virtual void onAddRemoteStream(PeerConnection* conn,webrtc::MediaStreamInterface * stream)\n\n\n\npublic virtual void onRemoveRemoteStream(PeerConnection* conn,webrtc::MediaStreamInterface * stream)\n\n\n\npublic virtual void onStable(PeerConnection* conn)\n\n\n\npublic virtual void onClosed(PeerConnection* conn)\n\n\n\npublic virtual void onFailure(PeerConnection* conn,const std::string & error)\n\n\n\npublic webrtc::PeerConnectionFactoryInterface * factory() const\n\n\n\nprotected rtc::scoped_refptr _factory\n\n\n\n\nMembers\npublic  PeerConnectionManager(rtc::scoped_refptr factory) \npublic virtual  ~PeerConnectionManager() \npublic virtual void sendSDP(PeerConnection* conn,const std::string & type,const std::string & sdp) \npublic virtual void sendCandidate(PeerConnection* conn,const std::string & mid,int mlineindex,const std::string & sdp) \npublic virtual void recvSDP(const std::string & peerid,const json::Value & data) \npublic virtual void recvCandidate(const std::string & peerid,const json::Value & data) \npublic virtual void onAddRemoteStream(PeerConnection* conn,webrtc::MediaStreamInterface * stream) \npublic virtual void onRemoveRemoteStream(PeerConnection* conn,webrtc::MediaStreamInterface * stream) \npublic virtual void onStable(PeerConnection* conn) \npublic virtual void onClosed(PeerConnection* conn) \npublic virtual void onFailure(PeerConnection* conn,const std::string & error) \npublic webrtc::PeerConnectionFactoryInterface * factory() const \nprotected rtc::scoped_refptr _factory \nclass scy::StreamRecorder \nclass scy::StreamRecorder\n  : public rtc::VideoSinkInterface\n  : public AudioTrackSinkInterface\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  StreamRecorder(constav::EncoderOptions& options)\n\n\n\npublic  ~StreamRecorder()\n\n\n\npublic void setVideoTrack(webrtc::VideoTrackInterface * track)\n\n\n\npublic void setAudioTrack(webrtc::AudioTrackInterface * track)\n\n\n\npublic void onPacketEncoded(av::MediaPacket& packet)\n\n\n\npublic void OnFrame(const cricket::VideoFrame & frame)\nVideoSinkInterface implementation.\n\n\npublic void OnData(const void * audio_data,int bits_per_sample,int sample_rate,size_t number_of_channels,size_t number_of_frames)\nAudioTrackSinkInterface implementation.\n\n\nprotected av::MultiplexEncoder _encoder\n\n\n\nprotected rtc::scoped_refptr _videoTrack\n\n\n\nprotected rtc::scoped_refptr _audioTrack\n\n\n\nprotected bool _awaitingVideo\n\n\n\nprotected bool _awaitingAudio\n\n\n\n\nMembers\npublic  StreamRecorder(constav::EncoderOptions& options) \npublic  ~StreamRecorder() \npublic void setVideoTrack(webrtc::VideoTrackInterface * track) \npublic void setAudioTrack(webrtc::AudioTrackInterface * track) \npublic void onPacketEncoded(av::MediaPacket& packet) \npublic void OnFrame(const cricket::VideoFrame & frame) \nVideoSinkInterface implementation.\npublic void OnData(const void * audio_data,int bits_per_sample,int sample_rate,size_t number_of_channels,size_t number_of_frames) \nAudioTrackSinkInterface implementation.\nprotected av::MultiplexEncoder _encoder \nprotected rtc::scoped_refptr _videoTrack \nprotected rtc::scoped_refptr _audioTrack \nprotected bool _awaitingVideo \nprotected bool _awaitingAudio \nclass scy::VideoPacketSource \nclass scy::VideoPacketSource\n  : public VideoCapturer\nVideoPacketSource implements a simple cricket::VideoCapturer that gets decoded remote video frames from a local media channel. It's used as the remote video source's VideoCapturer so that the remote video can be used as a cricket::VideoCapturer and in that way a remote video stream can implement the MediaStreamSourceInterface.\nSummary\n\n\n\nMembers\nDescriptions                                \n\n\n\n\npublic  VideoPacketSource()\n\n\n\npublic virtual  ~VideoPacketSource()\n\n\n\npublic virtual cricket::CaptureState Start(const cricket::VideoFormat & capture_format)\ncricket::VideoCapturer implementation.\n\n\npublic virtual void Stop()\n\n\n\npublic virtual bool IsRunning()\n\n\n\npublic virtual bool GetPreferredFourccs(std::vector * fourccs)\n\n\n\npublic virtual bool GetBestCaptureFormat(const cricket::VideoFormat & desired,cricket::VideoFormat * best_format)\n\n\n\npublic virtual bool IsScreencast() const\n\n\n\npublic void onVideoCaptured(void * sender,av::VideoPacket& packet)\n\n\n\n\nMembers\npublic  VideoPacketSource() \npublic virtual  ~VideoPacketSource() \npublic virtual cricket::CaptureState Start(const cricket::VideoFormat & capture_format) \ncricket::VideoCapturer implementation.\npublic virtual void Stop() \npublic virtual bool IsRunning() \npublic virtual bool GetPreferredFourccs(std::vector * fourccs) \npublic virtual bool GetBestCaptureFormat(const cricket::VideoFormat & desired,cricket::VideoFormat * best_format) \npublic virtual bool IsScreencast() const \npublic void onVideoCaptured(void * sender,av::VideoPacket& packet) \n"},"LICENSE.html":{"url":"LICENSE.html","title":"License","keywords":"","body":"GNU Lesser General Public License\nVersion 2.1, February 1999Copyright © 1991, 1999 Free Software Foundation, Inc.51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\nEveryone is permitted to copy and distribute verbatim copies\nof this license document, but changing it is not allowed.\nThis is the first released version of the Lesser GPL.  It also counts\nas the successor of the GNU Library Public License, version 2, hence\nthe version number 2.1.\nPreamble\nThe licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\nThis license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\nWhen we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\nTo protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\nFor example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\nWe protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\nTo protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\nFinally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\nMost GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\nWhen a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\nWe call this license the “Lesser” General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\nFor example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\nIn other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\nAlthough the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\nThe precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n“work based on the library” and a “work that uses the library”.  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\nTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called “this License”).\nEach licensee is addressed as “you”.\nA “library” means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\nThe “Library”, below, refers to any such software library or work\nwhich has been distributed under these terms.  A “work based on the\nLibrary” means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term “modification”.)\n“Source code” for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\nYou may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\na) The modified work must itself be a software library.\nb) You must cause the files modified to carry prominent notices\nstating that you changed the files and the date of any change.\nc) You must cause the whole of the work to be licensed at no\ncharge to all third parties under the terms of this License.\nd) If a facility in the modified Library refers to a function or a\ntable of data to be supplied by an application program that uses\nthe facility, other than as an argument passed when the facility\nis invoked, then you must make a good faith effort to ensure that,\nin the event an application does not supply such function or\ntable, the facility still operates, and performs whatever part of\nits purpose remains meaningful.(For example, a function in a library to compute square roots has\na purpose that is entirely well-defined independent of the\napplication.  Therefore, Subsection 2d requires that any\napplication-supplied function or table used by this function must\nbe optional: if the application does not supply it, the square\nroot function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\nOnce this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\nThis option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\nIf distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a “work that uses the Library”.  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\nHowever, linking a “work that uses the Library” with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a “work that uses the\nlibrary”.  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\nWhen a “work that uses the Library” uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\nIf such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\nOtherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n6. As an exception to the Sections above, you may also combine or\nlink a “work that uses the Library” with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\nYou must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\na) Accompany the work with the complete corresponding\nmachine-readable source code for the Library including whatever\nchanges were used in the work (which must be distributed under\nSections 1 and 2 above); and, if the work is an executable linked\nwith the Library, with the complete machine-readable “work that\nuses the Library”, as object code and/or source code, so that the\nuser can modify the Library and then relink to produce a modified\nexecutable containing the modified Library.  (It is understood\nthat the user who changes the contents of definitions files in the\nLibrary will not necessarily be able to recompile the application\nto use the modified definitions.)\nb) Use a suitable shared library mechanism for linking with the\nLibrary.  A suitable mechanism is one that (1) uses at run time a\ncopy of the library already present on the user's computer system,\nrather than copying library functions into the executable, and (2)\nwill operate properly with a modified version of the library, if\nthe user installs one, as long as the modified version is\ninterface-compatible with the version that the work was made with.\nc) Accompany the work with a written offer, valid for at\nleast three years, to give the same user the materials\nspecified in Subsection 6a, above, for a charge no more\nthan the cost of performing this distribution.\nd) If distribution of the work is made by offering access to copy\nfrom a designated place, offer equivalent access to copy the above\nspecified materials from the same place.\ne) Verify that the user has already received a copy of these\nmaterials or that you have already sent this user a copy.\n\nFor an executable, the required form of the “work that uses the\nLibrary” must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\nIt may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\na) Accompany the combined library with a copy of the same work\nbased on the Library, uncombined with any other library\nfacilities.  This must be distributed under the terms of the\nSections above.\nb) Give prominent notice with the combined library of the fact\nthat part of it is a work based on the Library, and explaining\nwhere to find the accompanying uncombined form of the same work.\n\n8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n“any later version”, you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\nNO WARRANTY\n15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY “AS IS” WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\nEND OF TERMS AND CONDITIONS\n"}}}