# Auto Updates for Native C++ Applications

So you have coded an amazing application, now how are you going to keep it up-to-date?
This is a huge factor for native applications where things like ABI compatibility, versioning and file locks need to be considered, 
especially if you provide any kind of plugin architecture.

Over the last few years it's been interesting to watch most of the big companies on the internet transition from optional updates to automatic updates.
Gone are the days of the old fasioned "Do you want to update to version X?" dialog, now days what we tend to see is "You are now running version X" instead.
Since this post isn't about the moral implications of this transition, 
so I'll refrain from a rant, instead I'll show you how we implement 
this in out own applications easily and efficiently with the help of a little peice of open source software called `Pacm`.

Some of you may be farmiliar with our project, Anionu. Anionu has a native application called Spot, 
which is essentially a modular native plugin system that communicates with the Anionu API. 
In the case of Spot, auto updates are a must to ensure security fixes are always applied, 
and compatability is maintained with the current REST API.
None of the existing package managers out there met our requirements, 
they were all too convoluted or dependeny heavy, so we build `Pacm`.

In the example below




Spot consumes the Anionu API


For a native appliclation