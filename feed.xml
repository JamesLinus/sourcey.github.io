<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://sourcey.com</id>
  <link href="http://sourcey.com"/>
  <link href="http://sourcey.com/feed.xml" rel="self"/>
  <updated>2014-04-25T00:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Password Free Signup and Authentication</title>
    <link rel="alternate" href="http://sourcey.com/password-free-signup-and-authentication/"/>
    <id>http://sourcey.com/password-free-signup-and-authentication/</id>
    <published>2014-04-25T00:00:00Z</published>
    <updated>2014-04-25T13:05:24+10:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="password-free-signup-and-authentication"&gt;Password Free Signup and Authentication&lt;/h1&gt;

&lt;p&gt;Signup and authentication is probably the first interaction a customer will have with your product or service, which makes it a vital part of the user experience. Let's face it, reentering your information each time you signup for a new service is a pain the the butt, so anything we can do to reduce the déjà vu is a good thing.&lt;/p&gt;

&lt;p&gt;Anyone who is dabbled with web services will be familiar with the &lt;a href="http://tools.ietf.org/html/rfc6749"&gt;OmniAuth&lt;/a&gt; specification. OmniAuth enables your customers to signup and login to your service with their existing third-party accounts such as Google, Facebook, Twitter etc. &lt;/p&gt;

&lt;p&gt;In fact, with a good OmniAuth implementation you can alleviate the need for passwords, and even the entire signup process. The beauty here is that there is more pesky passwords for your customers to remember, and one less security concern for you.&lt;/p&gt;

&lt;h2 id="choosing-an-omniauth-provider"&gt;Choosing an OmniAuth Provider&lt;/h2&gt;

&lt;p&gt;There are a number of big players in the industry who provide OAuth APIs. Choosing the right one for you really comes down to the nature of your product or service. More important than the actual OAuth provider is the API services on offer once authenticated.&lt;/p&gt;

&lt;h3 id="facebook"&gt;Facebook&lt;/h3&gt;

&lt;p&gt;The largest social network in the world is not surprisingly the &lt;a href="http://techcrunch.com/2013/04/08/report-46-of-social-login-users-still-choose-facebook-but-google-is-quickly-gaining-ground/"&gt;favourite OAuth provider&lt;/a&gt; for many users. Facebook has a very well rounded API and developer SDK. One of the more powerful features is the &lt;a href="https://developers.facebook.com/docs/reference/fql/"&gt;FQL&lt;/a&gt; language which enables you to query almost any social metadata on the network.&lt;/p&gt;

&lt;p&gt;One gotcha to be aware of when using the JavaScript SDK is the "channelUrl" parameter. Without it set the SDK is &lt;strong&gt;ridiculously&lt;/strong&gt; slow, so be sure that it points to a valid file on your server. Also be sure to cache the remote .js files or its can really slow down your pages.&lt;/p&gt;

&lt;h3 id="google"&gt;Google&lt;/h3&gt;

&lt;p&gt;Probably the best IMO, especially for professional services. Google is a close second behind Facebook with regards to user adoption, and is ever increasing in popularity. Every professional on the Internet has a Google account, and there's a good chance they already use GMail and other Google services regularly. &lt;/p&gt;

&lt;p&gt;The real advantage of using Google however, is their &lt;a href="https://developers.google.com/products/"&gt;developer services&lt;/a&gt;. You can integrate your applications with Cloud Storage, Google Drive, YouTube, GMail and more, and it works seamlessly if your customers login with Google OAuth. &lt;/p&gt;

&lt;h3 id="twitter"&gt;Twitter&lt;/h3&gt;

&lt;p&gt;Twitter is good, but I would only recommend it when creating applications that integrate specifically with Twitter. The reason for this is that Twitter doesn't provide you with a valid user email address like the other providers do. As a developer this means implementing another step to get an email address from the user, which adds complexity and kind of defeats the purpose of using OAuth to begin with. &lt;/p&gt;

&lt;h3 id="linkedin"&gt;LinkedIn&lt;/h3&gt;

&lt;p&gt;The social network for professionals is good when building services for web professionals. LinkedIn traffic is considered to be higher quality and have &lt;a href="http://blog.hubspot.com/blog/tabid/6307/bid/30030/LinkedIn-277-More-Effective-for-Lead-Generation-Than-Facebook-Twitter-New-Data.aspx"&gt;higher conversions&lt;/a&gt; compared to other networks. Again it depends on your niche.&lt;/p&gt;

&lt;p&gt;Personally, I'm not a great fan of LinkedIn. I find their pushy business model and dated interface detract from the experience and drive me to interact elsewhere.&lt;/p&gt;

&lt;h2 id="going-all-the-way"&gt;Going All The Way&lt;/h2&gt;

&lt;p&gt;It's often tempting for developers to get carried away and build the entire kitchen sink, and once you've finished theres always more to do.
There is merit in &lt;a href="http://blog.codinghorror.com/how-to-be-lazy-dumb-and-successful/"&gt;keeping things simple&lt;/a&gt;, which is why I subscribe to the belief that the best kind of code is code that you don't write yourself.&lt;/p&gt;

&lt;p&gt;If you have a niche product or service, you may consider restricting access to a single OAuth provider. While this method may ostracise certain customers, it will give you credibility and traction with the die-hards in your chosen network.&lt;/p&gt;

&lt;p&gt;For example, we are using Google authentication exclusively for our cloud video surveillance service, &lt;a href="https://anionu.com"&gt;Anionu&lt;/a&gt;. This means no passwords, and greater security for users, and access to their Google Drive for storing videos in the cloud. As well as the convenience of using familiar technology, Googlers have 15GB of free storage in their Google Drive which is a pretty solid incentive to signup. Nice!&lt;/p&gt;

&lt;h2 id="security-considerations"&gt;Security Considerations&lt;/h2&gt;

&lt;p&gt;Make sure you educate yourself on OAuth best practices before getting started. For all intents and purposes, the OAuth tokens you store are just like passwords, so the same cautions should be observed. Some points to consider are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using CSRF validation to verify OAuth callbacks. Most providers allow you to specify extra parameters with your initial OAuth request. This should contain a CSRF token, and be verified on response.&lt;/li&gt;
  &lt;li&gt;Encrypt OAuth tokens in the database. You wouldn't store a clear text password now, would you?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The obvious red flag for using OAuth is reliance on a third-party service, which we all want to keep to a minimum. The worst case scenario here is that the provider goes out of business; Google, not likely; Facebook, maybe given Zuckerberg's spending habits! As long as basic user information is retained locally there is no real risk to your business.&lt;/p&gt;

&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Users are becoming increasingly wary of who they share heir information with online, and with &lt;a href="http://gigaom.com/2013/12/31/snapchat-hacked-4-6-million-usernames-and-phone-numbers-lifted/"&gt;good reason&lt;/a&gt;. Password free signup is a great incentive to offer lazy and/or security conscious customers.&lt;/p&gt;

&lt;p&gt;It's an exciting technological era we live in, but as the big players claim more of the market share it is becoming increasingly necessary for new and smaller startups to effectively use and integrate with the more established players in order to gain traction and build a solid customer base.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Guest Posting Opportunities</title>
    <link rel="alternate" href="http://sourcey.com/guest-posting-opportunities/"/>
    <id>http://sourcey.com/guest-posting-opportunities/</id>
    <published>2014-04-24T00:00:00Z</published>
    <updated>2014-04-25T13:19:26+10:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="guest-posting-opportunities"&gt;Guest Posting Opportunities&lt;/h1&gt;

&lt;p&gt;We work tirelessly to create quality code and startups, and as such we are intersted in working with other companies who are in the same boat.&lt;/p&gt;

&lt;p&gt;If you want to promote your brilliant open soruce project, or a new technology startup, then you may be interested in guest posting on Sourcey.com. Naturally only the highest quality original content will be considered.&lt;/p&gt;

&lt;p&gt;For guest posting opportunities and other forms of affiliation and collaboration please drop us a line on &lt;a href="&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#104;&amp;#101;&amp;#108;&amp;#108;&amp;#111;&amp;#064;&amp;#115;&amp;#111;&amp;#117;&amp;#114;&amp;#099;&amp;#101;&amp;#121;&amp;#046;&amp;#099;&amp;#111;&amp;#109;"&gt;&amp;#104;&amp;#101;&amp;#108;&amp;#108;&amp;#111;&amp;#064;&amp;#115;&amp;#111;&amp;#117;&amp;#114;&amp;#099;&amp;#101;&amp;#121;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Migrating from Wordpress to Middleman</title>
    <link rel="alternate" href="http://sourcey.com/migrating-from-wordpress-to-middleman/"/>
    <id>http://sourcey.com/migrating-from-wordpress-to-middleman/</id>
    <published>2014-04-04T10:09:32Z</published>
    <updated>2014-04-05T16:19:36+10:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="migrating-from-wordpress-to-middleman"&gt;Migrating from Wordpress to Middleman&lt;/h1&gt;

&lt;p&gt;Today I decided to take the plunge and convert Sourcey into a static website. Sourcey has been running on Wordpress for the better part of year now, and while Wordpress was the duck's nuts back then, today's static website generators just have so much to offer.&lt;/p&gt;

&lt;p&gt;Static websites are all the rage, and with good reason too. Unless your blog is huge, or you have the need for managed administration (wp dkz ntz), there is really no need for dynamic scripting languages, right? There's something satisfying and geekishly appealing about a static website; one less thing to break, and one less security vulnerability to worry about. Geeks love optimising stuff, and when it comes to building websites, you just don't get any more optimised than static HTML. &lt;/p&gt;

&lt;p&gt;The two main candidates for porting Sourcey to a static platform were &lt;a href="http://jekyllrb.com"&gt;Jekyll&lt;/a&gt; and &lt;a href="http://middlemanapp.com/"&gt;Middleman&lt;/a&gt;. I have used both in the past, and both are built with Ruby (Jekyll has implementations in other languages too, such as a the &lt;code&gt;grunt-jekyll&lt;/code&gt; plugin), but due to my love affair with Rails and Sinatra I went with Middleman because of the similarities with Rails architecture, and it's superior flexibility.&lt;/p&gt;

&lt;p&gt;All in all it took around 10 hours work (including the learning curve), and I'm super glad I did it for a whole bunch of reasons. If you're interested in setting up or converting to a static website then keep on reading because I will be sharing some of the key points…&lt;/p&gt;

&lt;h2 id="installing-dependencies"&gt;Installing Dependencies&lt;/h2&gt;

&lt;p&gt;Go ahead and install the following dependencies:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;ruby&lt;/li&gt;
  &lt;li&gt;git&lt;/li&gt;
  &lt;li&gt;middleman ($ &lt;code&gt;gem install middleman&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;bower ($ &lt;code&gt;npm install -g bower&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you haven't already, go and setup your Middleman application using &lt;a href="http://middlemanapp.com/basics/getting-started/"&gt;the official guide&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="installing-zurb-foundation-5"&gt;Installing Zurb Foundation 5&lt;/h2&gt;

&lt;p&gt;For the CSS framework I went with minimal installation of &lt;a href="http://foundation.zurb.com"&gt;Zurb Foundation 5&lt;/a&gt;. This is the first time I have used Foundation, and be honest a CSS framework is probably overkill, but the responsive elements and grids have proven very handy already. Anyway, since I've been using Bootstrap quite a bit lately I thought it might be nice to experiment with a new technology. &lt;/p&gt;

&lt;p&gt;Setting up Foundation to play nicely with Middleman is pretty straight forward, just follow the steps below. First add the below &lt;code&gt;bower.json&lt;/code&gt; and &lt;code&gt;.bowerrc&lt;/code&gt; files to your middleman folder.&lt;/p&gt;

&lt;h5 id="bowerjson"&gt;bower.json&lt;/h5&gt;

&lt;pre class="highlight javascript"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"your-app-name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"0.0.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"private"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"foundation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"zurb/bower-foundation"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;

&lt;h5 id="bowerrc"&gt;.bowerrc&lt;/h5&gt;

&lt;pre class="highlight javascript"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"directory"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"source/bower_components"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;Don't forget to expose bower's directory to the sprockets asset path by adding the following somewhere in your &lt;code&gt;config.rb&lt;/code&gt; file:&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;span class="n"&gt;after_configuration&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="vi"&gt;@bower_config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;IO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/.bowerrc"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="n"&gt;sprockets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;append_path&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@bower_config&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"directory"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;OK, now run $ &lt;code&gt;bower install&lt;/code&gt; to install Foundation and friends.&lt;/p&gt;

&lt;p&gt;Foundation requires Modernizr and JQuery by default.
Now go ahead and create the following files:&lt;/p&gt;

&lt;h5 id="sourcejavascriptsmodernizrjs"&gt;source/javascripts/modernizr.js&lt;/h5&gt;

&lt;pre class="highlight plaintext"&gt;//= require modernizr/modernizr
&lt;/pre&gt;

&lt;h5 id="sourcejavascriptsappjs"&gt;source/javascripts/app.js&lt;/h5&gt;

&lt;pre class="highlight javascript"&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;foundation&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;

&lt;h5 id="sourcejavascriptsalljs"&gt;source/javascripts/all.js&lt;/h5&gt;

&lt;pre class="highlight plaintext"&gt;//= require jquery/dist/jquery
//= require foundation/js/foundation.min

//= require app
&lt;/pre&gt;

&lt;p&gt;The next step is to setup our stylesheets.&lt;/p&gt;

&lt;p&gt;At this point it's a good idea to copy &lt;code&gt;source/bower_components/foundation/scss/foundation/_settings.scss&lt;/code&gt; to &lt;code&gt;source/stylesheets/_settings.scss&lt;/code&gt; so any changes you make the won't be overwritten. Feel free to modify it as needed.&lt;/p&gt;

&lt;h5 id="sourcestylesheetsappcssscss"&gt;source/stylesheets/app.css.scss&lt;/h5&gt;

&lt;pre class="highlight css"&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"settings"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"foundation.scss"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;Now to update our HTML layout file to work with Zurb and the changes we have made:&lt;/p&gt;

&lt;pre class="highlight html"&gt;&lt;span class="cp"&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"no-js"&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;%= data.page.title || "The Middleman" %&amp;gt;&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    
    &lt;span class="err"&gt;&amp;lt;&lt;/span&gt;%= stylesheet_link_tag "app" %&amp;gt;
    &lt;span class="err"&gt;&amp;lt;&lt;/span&gt;%= javascript_include_tag "modernizr" %&amp;gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  
  &lt;span class="nt"&gt;&amp;lt;body&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;%= page_classes %&amp;gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="err"&gt;&amp;lt;&lt;/span&gt;%= yield %&amp;gt;

    &lt;span class="err"&gt;&amp;lt;&lt;/span&gt;%= javascript_include_tag  "all" %&amp;gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;

&lt;h2 id="migrating-from-wordpress"&gt;Migrating from Wordpress&lt;/h2&gt;

&lt;p&gt;Migrating from Wordpress to Middleman wasn't too painful with the help of the &lt;code&gt;wp2middleman&lt;/code&gt; gem, which can be installed as follows:&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;git clone http://github.com/mdb/wp2middleman
cd wp2middleman
bundle install
rake install
&lt;/pre&gt;

&lt;p&gt;If you haven't exported your Wordpress posts yet do so now as per &lt;a href="http://en.support.wordpress.com/export/"&gt;the official guide&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Now to export your Wordpress XML file just use the &lt;code&gt;wp2mm&lt;/code&gt; command. &lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;wp2mm your_wordpress_export.xml
&lt;/pre&gt;

&lt;p&gt;Be sure to check out the Github page for export configuration options: https://github.com/mdb/wp2middleman&lt;/p&gt;

&lt;h2 id="deploying-on-gitbub-pages"&gt;Deploying on Gitbub Pages&lt;/h2&gt;

&lt;p&gt;The beauty of static hosting is its so easy, just whack it on a server and away you go! I love not having to worry about process monitoring and the like. Even better if someone else hosts the content right? Github pages is great for this since it's free and easy. &lt;/p&gt;

&lt;p&gt;If you haven't already created your git Github repository, do that now. If you're using User Pages the repository must be named like so: &lt;em&gt;username.github.io&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;I actually created two separate repositories; one for hosting the Middleman source site, and one for hosting the static Github pages. Most people just use a single repository with two branches, so why do I do it this way you ask? Mainly because I don't want my project repository to be reliant on the Github Pages work flow, &lt;strike&gt;just in case&lt;/strike&gt; when I need to switch for whatever reason down the track.&lt;/p&gt;

&lt;p&gt;Both repositories are on github, so go ahead and use them as a reference:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/sourcey/sourcey.com"&gt;https://github.com/sourcey/sourcey.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/sourcey/sourcey.github.io"&gt;https://github.com/sourcey/sourcey.github.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To automate deployment I initially went with the &lt;code&gt;middleman-deploy&lt;/code&gt; gem since it seemed like the popular choice. For some reason it screwed up my site completely, and all my pages started returning 404. Since I wasn't in any mood for more debugging I decided to check the alternative &lt;code&gt;middleman-gh-pages&lt;/code&gt; gem, which as it turned out I also had problems of its own. This time I decided to get my hands dirty to fix some small issues, and ended up submitting &lt;a href="https://github.com/neo/middleman-gh-pages/pull/21"&gt;neo/middleman-gh-pages#21&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As it turned out I ended up ditching both gems, mainly because at the end of the day &lt;code&gt;middleman-gh-pages&lt;/code&gt; is designed for Github Project Pages, not User Pages. Incase you don't already know, GitHub offers two types of &lt;a href="https://help.github.com/articles/user-organization-and-project-pages"&gt;Pages&lt;/a&gt;; User Pages, and Project Pages. Each GitHub account can host a single User Page and an unlimited amount of Project Pages. Basically they are identical to the end-user and differ only in their configuration and the way it's accessed. User Pages are accessed via &lt;em&gt;username.github.io&lt;/em&gt; and exist in the &lt;code&gt;master&lt;/code&gt; branch, and Project Pages are accessed via &lt;em&gt;username.github.io/projectname&lt;/em&gt; and exist in the &lt;code&gt;gh-pages&lt;/code&gt; branch or the project repo.&lt;/p&gt;

&lt;p&gt;All I really need is a simple Rake task to automate building the static files locally, and deploying them to Github, so that's exactly what I went with. If you want to use my solution, then just add these two files to your application:&lt;/p&gt;

&lt;h5 id="rakefile"&gt;Rakefile&lt;/h5&gt;

&lt;pre class="highlight ruby"&gt;&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;'deploy.rake'&lt;/span&gt;
&lt;/pre&gt;

&lt;h5 id="deployrake"&gt;deploy.rake&lt;/h5&gt;

&lt;pre class="highlight ruby"&gt;&lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="s2"&gt;"build static pages"&lt;/span&gt;
&lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="ss"&gt;:build&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="s2"&gt;"## Compiling static pages"&lt;/span&gt;
  &lt;span class="nb"&gt;system&lt;/span&gt; &lt;span class="s2"&gt;"bundle exec middleman build"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="s2"&gt;"deploy to github pages"&lt;/span&gt;
&lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="ss"&gt;:deploy&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="s2"&gt;"## Deploying to Github Pages"&lt;/span&gt;
  &lt;span class="n"&gt;cp_r&lt;/span&gt; &lt;span class="s2"&gt;".nojekyll"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"build/.nojekyll"&lt;/span&gt;
  &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;"build"&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;system&lt;/span&gt; &lt;span class="s2"&gt;"git add ."&lt;/span&gt;
    &lt;span class="nb"&gt;system&lt;/span&gt; &lt;span class="s2"&gt;"git add -u"&lt;/span&gt;
    &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Site updated at &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;utc&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="s2"&gt;"## Commiting: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="nb"&gt;system&lt;/span&gt; &lt;span class="s2"&gt;"git commit -m &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="s2"&gt;"## Pushing generated website"&lt;/span&gt;
    &lt;span class="nb"&gt;system&lt;/span&gt; &lt;span class="s2"&gt;"git push origin master"&lt;/span&gt;
    &lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="s2"&gt;"## Github Pages deploy complete"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="s2"&gt;"build and deploy to github pages"&lt;/span&gt;
&lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="ss"&gt;:publish&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="no"&gt;Rake&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"build"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;invoke&lt;/span&gt;
  &lt;span class="no"&gt;Rake&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"deploy"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;invoke&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;Now you can use the following commands to update your Github Pages:&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;span class="n"&gt;rake&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;    &lt;span class="c1"&gt;# Compile all static files into the build directory&lt;/span&gt;
&lt;span class="n"&gt;rake&lt;/span&gt; &lt;span class="n"&gt;deploy&lt;/span&gt;   &lt;span class="c1"&gt;# Deploy the build directory to Github Pages&lt;/span&gt;
&lt;span class="n"&gt;rake&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;  &lt;span class="c1"&gt;# Build and deploy in one command&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;To configure Github pages to point to your custom domain ie &lt;code&gt;example.com&lt;/code&gt;, follow the steps outlined in &lt;a href="https://help.github.com/articles/setting-up-a-custom-domain-with-pages"&gt;this guide&lt;/a&gt; to add a &lt;code&gt;CNAME&lt;/code&gt; file to your repository and setup DNS.&lt;/p&gt;

&lt;h2 id="static-website-bliss"&gt;Static Website Bliss&lt;/h2&gt;

&lt;p&gt;Hopefully there are some crazy web developers out there will find this post useful, and if you're like me and derive pleasure from the zen of simplification, then welcome to static website bliss! A big thanks to the wonderful devs behind the Middleman project, and if you have any questions or comments then just drop me a line ;)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Symple WebRTC Video Chat Demo</title>
    <link rel="alternate" href="http://sourcey.com/symple-webrtc-video-chat-demo/"/>
    <id>http://sourcey.com/symple-webrtc-video-chat-demo/</id>
    <published>2014-04-03T01:41:32Z</published>
    <updated>2014-04-06T22:29:10+10:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="symple-webrtc-video-chat-demo"&gt;Symple WebRTC Video Chat Demo&lt;/h1&gt;

&lt;p&gt;For those of you that don't know about Symple yet, it's a lightweight messaging and presence protocol for communication between our native and browser based apps. Most of our work with Symple until this point has been with WebRTC native to browser applications, so I thought it would be nice to create a demo which showcases just how easy it is to use Symple for building WebRTC video conferencing and real-time messaging applications.&lt;/p&gt;

&lt;p&gt;Symple's client side libraries already implement most of what we need to build such an application; real-time messaging; user presence; WebRTC signalling; and HTML5 video embedding. If fact, due to the comprehensiveness of Symple, and the awesomeness of AngularJS, I was able to write the entire application in less than 100 of JavaScript.&lt;/p&gt;

&lt;p&gt;Check out the live demo, and if you want to find what's happening under the hood then just keep on reading. If you're looking for the source, then you can find it on &lt;a href="https://github.com/sourcey/symple-client-webrtc-demo"&gt;Github&lt;/a&gt;. Enjoy!&lt;/p&gt;

&lt;center&gt;
&lt;a href="http://symple.sourcey.com" class="action-button button success radius" target="_blank"&gt;launch the demo&lt;/a&gt;
&lt;/center&gt;

&lt;h2 id="using-the-demo"&gt;Using the Demo&lt;/h2&gt;

&lt;p&gt;If you've used any sort of chat application before then this should be super easy for you! From the 'Login' panel just choose a handle/username to login. If you're testing then open another browser window and login again in order to have a conversation with yourself (I'm pretty sure it doesn't mean you're crazy).&lt;/p&gt;

&lt;p&gt;A full list of users will be displayed on the left hand sidebar when you have logged in. &lt;/p&gt;

&lt;h3 id="video-chat"&gt;Video Chat&lt;/h3&gt;

&lt;p&gt;This guide assumes you have two browser windows open, and you have logged in with both. We refer to the client making the call as the 'caller', and the person receiving the call as the 'callee'.&lt;/p&gt;

&lt;p&gt;Follow these steps to make a video call:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;From the caller window, click open the 'Action' menu beside a handle in the sidebar and select 'Video chat'.&lt;/li&gt;
  &lt;li&gt;An 'Incoming call…' dialog will be displayed in the callee window. Go ahead and click 'Accept'.&lt;/li&gt;
  &lt;li&gt;Be sure to enable access the the video capture device in the caller window.&lt;/li&gt;
  &lt;li&gt;You should now be able to see your beautiful self in the caller window, and the callee should also be able to see the same video feed momentarily. &lt;/li&gt;
  &lt;li&gt;When video is flowing from the caller to the callee, the callee can hot the 'Start video' button to start sending video to the caller. Again be sure to enable browser access to the video capture device (as above).&lt;/li&gt;
  &lt;li&gt;WebRTC FTW!&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="panel callout radius"&gt;
Note that if you are attempting to make a call to a remote endpoint, and both users are behind a NAT or firewall, then the call will probably fail. In production you would use a TURN relay server which would facilitate a relayed connection between both endpoints, but that is beyond the scope of this demo.
&lt;/div&gt;

&lt;h3 id="instant-messaging"&gt;Instant Messaging&lt;/h3&gt;

&lt;p&gt;In order to broadcast messages to everyone who is online, just type something in the message from at the top of the 'Conversation' panel and hit 'Send'. If you want to send a direct message to a specific person, click the 'Action' menu beside their name and select 'Direct message'.&lt;/p&gt;

&lt;p&gt;You should see the user handle appears to the lest of the send message form, this means you are now sending direct messages to that user, and only they will see your messages. In order to stop sending direct messages, click the '@' beside the send message form and select 'Send to everyone' from the menu to remove the user scope.&lt;/p&gt;

&lt;h2 id="symple-and-webrtc"&gt;Symple and WebRTC&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://www.webrtc.org"&gt;WebRTC&lt;/a&gt; is the new standard for p2p video on the web, and although the spec has not yet reached full maturity, WebRTC already has full support in Firefox, Chrome and Opera. Support for Internet Explorer and Safari is still a way off due to the never ending &lt;a href="http://gigaom.com/2013/10/30/google-sticks-with-vp8-opposes-ciscos-push-for-h-264"&gt;h264 vs WebM debacle&lt;/a&gt;, but many forward thinking online enterprises are already adopting it as part of their core business model.&lt;/p&gt;

&lt;p&gt;WebRTC relies on the &lt;a href="https://tools.ietf.org/html/rfc5245"&gt;ICE (Interactive Connectivity Establishment)&lt;/a&gt; protocol to determine the best method for endpoints to establish connectivity and data flow, but the actually signalling functionality is left to the client. This is where Symple comes in. Symple is not only a great way of signalling SDP metadata between clients, but is also handles cross-browser HTML5 &lt;code&gt;video&lt;/code&gt; tag embedding which is necessary for WebRTC playback.&lt;/p&gt;

&lt;h2 id="open-source-repositories"&gt;Open Source Repositories&lt;/h2&gt;

&lt;p&gt;Symple and it's client/server implementations are open source, so feel free to grab them from Github and use them in your projects. For a full list of projects and the protocol specification see the Symple homepage: http://sourcey.com/symple &lt;/p&gt;

&lt;p&gt;I hope you enjoy the demo, and feel free to drop me a line if you have any questions.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The Art of the Internet AKA. Attack of the Clones</title>
    <link rel="alternate" href="http://sourcey.com/the-art-of-the-internet/"/>
    <id>http://sourcey.com/the-art-of-the-internet/</id>
    <published>2014-03-29T02:23:53Z</published>
    <updated>2014-04-06T23:12:59+10:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="the-art-of-the-internet-aka-attack-of-the-clones"&gt;The Art of the Internet AKA. Attack of the Clones&lt;/h1&gt;

&lt;p&gt;Many of the programmers and designers I know consider themselves to be artists, but as in the art world, there are good artists, and well … not so good artists. &lt;/p&gt;

&lt;p&gt;It's important to realise that artists are not just people who build stuff, they are able to channel real creative inspiration and express it using their medium. How many so called 'entrepreneurs' or 'gurus' can claim this? Most are just churning out the same old stale crap. Remember people, its easy to be a builder, but not many people can be an artist. &lt;/p&gt;

&lt;p&gt;The truth is artists (and women to a lesser extent &lt;em&gt;slap&lt;/em&gt;) are few and far between in the professional IT world, but thats most likely due to the logic driven paradigm in which we work. Everyone has their strengths and weaknesses; and some say this is related to their predominant functional lateralisation ie. weather they predominantly use the right (intuitive) and the left(logical) hemispheres of their brain. A person who is "left-brained" is often said to be more logical, analytical, and objective, while a person who is "right-brained" is said to be more intuitive, thoughtful, and subjective. Personally, I believe this concept to be a total myth, but people's tendency to believe in absurd ideas that adequately describe the unknown should never be underestimated!&lt;/p&gt;

&lt;p&gt;Lets say for arguments sake that functional lateralisation was a real thing, then it would be safe to assume that the Internet is a predominantly "left-brained" phenomenon. The problem here, is that left brained thinking is fundamentally restrictive; it's calculated, rigid, and lacks abstract dimension. Despite this however, even "left-brained" thinkers have the ability to appreciate fine art. They might not truly understand it, but it still speaks to them on a primal level, which tells me the ability is there, but the connection has been lost.&lt;/p&gt;

&lt;p&gt;Every day I look at new startups being released, and its rare that I don't look at their websites and see a clone of whatever design is currently trending. It's almost like sitting through a Hollywood movie; the formulaic predictability detracts from any substance that might be lurking beneath the surface. How many other people out there must be in the same boat, especially in gen Y, how many potential customers!? &lt;/p&gt;

&lt;p&gt;It's time to look deeper folks. It's time to let our logical and intuitive brains compliment each other, in fact this kind of genius thats within all of our grasp. The more clones that saturate the Internet and media worldwide, the more people will be recognize the genuine point-of-difference that makes them feel something. Try to make a genuine psychological and emotional connection with your clients when planning your next project, and if they ain't feelin' it like you are, then your idea might not be as good as you think.&lt;/p&gt;

&lt;p&gt;To all of you IT professionals out there, take the time to thoroughly master your trade before expecting success, and don't forget to mingle with real artists because they will teach you to create with passion and inspiration. Think like an artist and work like a machine!
&lt;!--
teach you how to think (oh the irony). Unless you have it naturally, artists are the ones that will 
 --&gt; &lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Conquering the Internet</title>
    <link rel="alternate" href="http://sourcey.com/conquering-the-internet/"/>
    <id>http://sourcey.com/conquering-the-internet/</id>
    <published>2014-03-28T15:02:16Z</published>
    <updated>2014-04-07T00:00:38+10:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="conquering-the-internet"&gt;Conquering the Internet&lt;/h1&gt;

&lt;p&gt;Everyone with an entrepreneurial spark is trying to claim their piece of Internet glory, yet only a select few will have any measure of success. &lt;/p&gt;

&lt;p&gt;When a warlord conquers a country, he not only does so with supreme force of will, he does so with an army. Despite his brutality, the warlords also has a certain kind of honour. The Internet differs from the battlefield in this respect, because of the enormous potential for cloak and dagger. In this brave new world of Internet marketing, it's the Internet warrior who succeeds with honour and dignity who's the real victor.&lt;/p&gt;

&lt;!--
To conquer the Internet is a dream held by many, yet its easy to forget what's important along the treacherous path to victory. 
, and what you will have to give and take.
--&gt;

&lt;h2 id="meditation"&gt;Meditation&lt;/h2&gt;

&lt;p&gt;Before you set out your hero's journey, you would be well served to calm and prepare your mind for what's coming. It's easy to be blinded by the entrepreneurial fervour, so most have unrealistic expectations of success. Make sure you know what you're in for, and that you're willing to accept the long term effects and responsibilities of your undertaking. &lt;/p&gt;

&lt;p&gt;Take the time to detach yourself, and view your goals with an objective and critical mind. Ask yourself the difficult questions, and if you can't be 100% honest, then find someone who will.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Do I have the manpower and resources?&lt;/li&gt;
  &lt;li&gt;Have I researched the market properly?&lt;/li&gt;
  &lt;li&gt;Is my project worthy of financial investment?&lt;/li&gt;
  &lt;li&gt;Am I ready to spend the next few years doing this?&lt;/li&gt;
  &lt;li&gt;Have I spoken to the right people?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this world full by quick fix pop culture and black-hat morals, genuine quality has become something of a rarity. Stay true to your purpose, don't be guiled into believing the hollow promises and hype, and eventually you will cultivate a loyal and credible following. What's rare is also valuable. Your success won't be instantaneous, but it will be hard earned and well rewarded. &lt;/p&gt;

&lt;h2 id="building-your-castle"&gt;Building your Castle&lt;/h2&gt;

&lt;p&gt;In the game of the Internet, you should first concentrate on building your castle, which your primary domain.&lt;/p&gt;

&lt;p&gt;Forget about the crappy minisites and backlink spam - shortcuts will get you killed. You are establishing an online economy and you don't want to spread yourself thin with too many towns and villages early on in the piece. Consolidate your resources, and focus on your primary domain.&lt;/p&gt;

&lt;h2 id="rallying-the-troops"&gt;Rallying the Troops&lt;/h2&gt;

&lt;p&gt;To consolidate your vision, you need to rally the troops. Working as a solopreneur is a tough gig - so why not make life easy on yourself? The Internet is a hive of people, and everyone is looking for something, so why not use it to connect with people! Check meetup.com for local meetups with people of similar interests. Talk about and develop your ideas with other people, and pretty soon your talent, conviction and passion will begin to attract an army.&lt;/p&gt;

&lt;p&gt;A warlord rallies his troops with fear and promise of spoils untold, but as entrepreneurs preffer to offer each other friendship and success.&lt;/p&gt;

&lt;p&gt;Some good places are Meetup, Facebook, Github - whatever floats your boat.&lt;/p&gt;

&lt;h2 id="going-to-war"&gt;Going to War&lt;/h2&gt;

&lt;p&gt;On the Internet, the success is measured in terms of conversions, revenue and real estate. Total annihilation of the competition is just a bonus!&lt;/p&gt;

&lt;p&gt;Developing a sound Marketing Strategy and sticking to is key, as well as knowing how to use the Internet as a weapon.&lt;/p&gt;

&lt;p&gt;Without going into extreme detail, here are some factors to consider when educating yourself and planning your strategy.&lt;/p&gt;

&lt;h3 id="content"&gt;Content&lt;/h3&gt;

&lt;p&gt;Google's algorithm changes have made it easier than ever to rank for genuine quality original content, so get writing! Write natural content covering all aspects of your market and profession. Careful not to repost or duplicate your content on other sites. Guest post if you have to, but remember, &lt;strong&gt;your&lt;/strong&gt; content is always more valuable on &lt;strong&gt;YOUR&lt;/strong&gt; domain.&lt;/p&gt;

&lt;p&gt;Because of this, it follows that you should store your blog of your own domain. Try to stay clear of cloud blogging platforms (Wordpress/Tumblr) for your primary content, but by all means use them to aggregate excerpts from your blog feed.&lt;/p&gt;

&lt;h3 id="social-media"&gt;Social Media&lt;/h3&gt;

&lt;p&gt;Social media mastery is vital to your online success. Learn to balance the right amount of interaction and automation to ensure rapid growth. &lt;/p&gt;

&lt;p&gt;Using and understanding the right tools for the job will save you precious time. Tools you should be using are: &lt;a href="http://bufferapp.com" title="Buffer" target="_blank"&gt;Buffer&lt;/a&gt; to automate your content syndication, and &lt;a href="http://gardn.net" title="Gardn" target="_blank"&gt;Gardn&lt;/a&gt; to ensure your content is shared far and wide via your social networks.&lt;/p&gt;

&lt;h3 id="seo"&gt;SEO&lt;/h3&gt;

&lt;p&gt;Things are changing fast in the SEO world, so it's a good idea to stay informed about the latest SEO trends - just don't caught up in the hype.&lt;/p&gt;

&lt;p&gt;Spend time creating regular content and reputable backlinks, and be sure to optimize your site for page speed and cross platform devices. Educate yourself about static websites (Middleman, Jekyll), and responsive design (Bootstrap, Zerb Foundation), and use pretty URLs wherever possible.&lt;/p&gt;

&lt;h3 id="advertising"&gt;Advertising&lt;/h3&gt;

&lt;p&gt;Your best source of traffic is going to be organic search traffic, so pool your resources and focus on the search engines. If you have the budget for it, then by all means advertise the best of your content and products.&lt;/p&gt;

&lt;p&gt;PPC advertising is expensive, and can be hit and miss depending on your product and presentation. The best success I have had is with more expensive items due to the increased the conversion ratio.&lt;/p&gt;

&lt;p&gt;You might also consider paid directories. DMOZ is free but hard to get in, and Best of the Web and Yahoo are well known paid directories. Directories will give you credibility, but bear in mind they aren't cheap, and many consider them to be redundant.&lt;/p&gt;

&lt;h2 id="preparing-for-victory"&gt;Preparing for Victory&lt;/h2&gt;
&lt;p&gt;The way one handles victory says a lot about the character of a person or business. You may be tempted by the bright lights and fat stacks, but in the end the greatest reward you can expect is to succeed while having a good time and conducting yourself with integrity.&lt;/p&gt;

&lt;p&gt;The victor has certain obligations, least of which is to set the standard for those to come. As your business grows, so must you. Be consistent with your training, meditation and relaxation, and free yourself from gloating and arrogant expression. Keep developing your mind and body so that your endeavours may continue to evolve alongside your vision and creativity.&lt;/p&gt;
</content>
  </entry>
</feed>
